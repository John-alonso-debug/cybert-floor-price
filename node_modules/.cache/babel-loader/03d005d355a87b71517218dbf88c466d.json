{"ast":null,"code":"export var AuthenticationErrorCode;\n\n(function (AuthenticationErrorCode) {\n  // The user is not currently signed in\n  AuthenticationErrorCode[AuthenticationErrorCode[\"NotSignedIn\"] = 1000] = \"NotSignedIn\"; // The user cancelled the auth request\n\n  AuthenticationErrorCode[AuthenticationErrorCode[\"UserCancelled\"] = 1001] = \"UserCancelled\"; // Either you did not request offline access, or the user did not approve your app for offline access\n\n  AuthenticationErrorCode[AuthenticationErrorCode[\"NoRefreshToken\"] = 1002] = \"NoRefreshToken\"; // You requested silent sign in, which is deprecated\n\n  AuthenticationErrorCode[AuthenticationErrorCode[\"UnsupportedAuthenticationMethod\"] = 1003] = \"UnsupportedAuthenticationMethod\"; // We received an error from the oauth server\n\n  AuthenticationErrorCode[AuthenticationErrorCode[\"ServerError\"] = 1004] = \"ServerError\"; // The SDK is configured incorrectly\n\n  AuthenticationErrorCode[AuthenticationErrorCode[\"InvalidConfiguration\"] = 1005] = \"InvalidConfiguration\"; // Popup blocked\n\n  AuthenticationErrorCode[AuthenticationErrorCode[\"PopupBlocked\"] = 1006] = \"PopupBlocked\";\n})(AuthenticationErrorCode || (AuthenticationErrorCode = {}));\n/**\n * Represents an error that is thrown during the authentication process\n */\n\n\nexport class AuthenticationError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.name = 'AuthenticationError'; // Maintains proper stack trace for where our error was thrown (only available on V8)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AuthenticationError);\n    }\n\n    this.code = code;\n  } // throw AuthenticationError.NotSignedIn()\n\n\n  static NotSignedIn() {\n    return new AuthenticationError('Not signed in.', AuthenticationErrorCode.NotSignedIn);\n  } // throw AuthenticationError.UserCancelled()\n\n\n  static UserCancelled() {\n    return new AuthenticationError('Sign in request was cancelled.', AuthenticationErrorCode.UserCancelled);\n  } // throw AuthenticationError.NoRefreshToken()\n\n\n  static NoRefreshToken() {\n    return new AuthenticationError('Refresh token is not available.', AuthenticationErrorCode.NoRefreshToken);\n  } // throw AuthenticationError.UnsupportedAuthenticationMethod()\n\n\n  static UnsupportedAuthenticationMethod() {\n    return new AuthenticationError('Sign in method not supported.', AuthenticationErrorCode.UnsupportedAuthenticationMethod);\n  } // throw AuthenticationError.PopupBlocked()\n\n\n  static PopupBlocked(baseUrl) {\n    const msg = `The popup was blocked. Please make sure ${baseUrl} is allowed to open popups.`;\n    return new AuthenticationError(msg, AuthenticationErrorCode.PopupBlocked);\n  } // throw Authentication Error.ServerError(message, description)\n\n\n  static ServerError(message, description) {\n    const err = new AuthenticationError(`Error from the server: ${message}`, AuthenticationErrorCode.ServerError);\n    err.description = description;\n    return err;\n  } // throw AuthenticationError.InvalidConfiguration()\n\n\n  static InvalidConfiguration(reason) {\n    return new AuthenticationError(`The OAuth Configuration is invalid: ${reason}`, AuthenticationErrorCode.InvalidConfiguration);\n  }\n\n}","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/node_modules/bitski/dist/esm/errors/authentication-error.js"],"names":["AuthenticationErrorCode","AuthenticationError","Error","constructor","message","code","name","captureStackTrace","NotSignedIn","UserCancelled","NoRefreshToken","UnsupportedAuthenticationMethod","PopupBlocked","baseUrl","msg","ServerError","description","err","InvalidConfiguration","reason"],"mappings":"AAAA,OAAO,IAAIA,uBAAJ;;AACP,CAAC,UAAUA,uBAAV,EAAmC;AAChC;AACAA,EAAAA,uBAAuB,CAACA,uBAAuB,CAAC,aAAD,CAAvB,GAAyC,IAA1C,CAAvB,GAAyE,aAAzE,CAFgC,CAGhC;;AACAA,EAAAA,uBAAuB,CAACA,uBAAuB,CAAC,eAAD,CAAvB,GAA2C,IAA5C,CAAvB,GAA2E,eAA3E,CAJgC,CAKhC;;AACAA,EAAAA,uBAAuB,CAACA,uBAAuB,CAAC,gBAAD,CAAvB,GAA4C,IAA7C,CAAvB,GAA4E,gBAA5E,CANgC,CAOhC;;AACAA,EAAAA,uBAAuB,CAACA,uBAAuB,CAAC,iCAAD,CAAvB,GAA6D,IAA9D,CAAvB,GAA6F,iCAA7F,CARgC,CAShC;;AACAA,EAAAA,uBAAuB,CAACA,uBAAuB,CAAC,aAAD,CAAvB,GAAyC,IAA1C,CAAvB,GAAyE,aAAzE,CAVgC,CAWhC;;AACAA,EAAAA,uBAAuB,CAACA,uBAAuB,CAAC,sBAAD,CAAvB,GAAkD,IAAnD,CAAvB,GAAkF,sBAAlF,CAZgC,CAahC;;AACAA,EAAAA,uBAAuB,CAACA,uBAAuB,CAAC,cAAD,CAAvB,GAA0C,IAA3C,CAAvB,GAA0E,cAA1E;AACH,CAfD,EAeGA,uBAAuB,KAAKA,uBAAuB,GAAG,EAA/B,CAf1B;AAgBA;AACA;AACA;;;AACA,OAAO,MAAMC,mBAAN,SAAkCC,KAAlC,CAAwC;AAC3CC,EAAAA,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgB;AACvB,UAAMD,OAAN;AACA,SAAKE,IAAL,GAAY,qBAAZ,CAFuB,CAGvB;;AACA,QAAIJ,KAAK,CAACK,iBAAV,EAA6B;AACzBL,MAAAA,KAAK,CAACK,iBAAN,CAAwB,IAAxB,EAA8BN,mBAA9B;AACH;;AACD,SAAKI,IAAL,GAAYA,IAAZ;AACH,GAT0C,CAU3C;;;AACkB,SAAXG,WAAW,GAAG;AACjB,WAAO,IAAIP,mBAAJ,CAAwB,gBAAxB,EAA0CD,uBAAuB,CAACQ,WAAlE,CAAP;AACH,GAb0C,CAc3C;;;AACoB,SAAbC,aAAa,GAAG;AACnB,WAAO,IAAIR,mBAAJ,CAAwB,gCAAxB,EAA0DD,uBAAuB,CAACS,aAAlF,CAAP;AACH,GAjB0C,CAkB3C;;;AACqB,SAAdC,cAAc,GAAG;AACpB,WAAO,IAAIT,mBAAJ,CAAwB,iCAAxB,EAA2DD,uBAAuB,CAACU,cAAnF,CAAP;AACH,GArB0C,CAsB3C;;;AACsC,SAA/BC,+BAA+B,GAAG;AACrC,WAAO,IAAIV,mBAAJ,CAAwB,+BAAxB,EAAyDD,uBAAuB,CAACW,+BAAjF,CAAP;AACH,GAzB0C,CA0B3C;;;AACmB,SAAZC,YAAY,CAACC,OAAD,EAAU;AACzB,UAAMC,GAAG,GAAI,2CAA0CD,OAAQ,6BAA/D;AACA,WAAO,IAAIZ,mBAAJ,CAAwBa,GAAxB,EAA6Bd,uBAAuB,CAACY,YAArD,CAAP;AACH,GA9B0C,CA+B3C;;;AACkB,SAAXG,WAAW,CAACX,OAAD,EAAUY,WAAV,EAAuB;AACrC,UAAMC,GAAG,GAAG,IAAIhB,mBAAJ,CAAyB,0BAAyBG,OAAQ,EAA1D,EAA6DJ,uBAAuB,CAACe,WAArF,CAAZ;AACAE,IAAAA,GAAG,CAACD,WAAJ,GAAkBA,WAAlB;AACA,WAAOC,GAAP;AACH,GApC0C,CAqC3C;;;AAC2B,SAApBC,oBAAoB,CAACC,MAAD,EAAS;AAChC,WAAO,IAAIlB,mBAAJ,CAAyB,uCAAsCkB,MAAO,EAAtE,EAAyEnB,uBAAuB,CAACkB,oBAAjG,CAAP;AACH;;AAxC0C","sourcesContent":["export var AuthenticationErrorCode;\n(function (AuthenticationErrorCode) {\n    // The user is not currently signed in\n    AuthenticationErrorCode[AuthenticationErrorCode[\"NotSignedIn\"] = 1000] = \"NotSignedIn\";\n    // The user cancelled the auth request\n    AuthenticationErrorCode[AuthenticationErrorCode[\"UserCancelled\"] = 1001] = \"UserCancelled\";\n    // Either you did not request offline access, or the user did not approve your app for offline access\n    AuthenticationErrorCode[AuthenticationErrorCode[\"NoRefreshToken\"] = 1002] = \"NoRefreshToken\";\n    // You requested silent sign in, which is deprecated\n    AuthenticationErrorCode[AuthenticationErrorCode[\"UnsupportedAuthenticationMethod\"] = 1003] = \"UnsupportedAuthenticationMethod\";\n    // We received an error from the oauth server\n    AuthenticationErrorCode[AuthenticationErrorCode[\"ServerError\"] = 1004] = \"ServerError\";\n    // The SDK is configured incorrectly\n    AuthenticationErrorCode[AuthenticationErrorCode[\"InvalidConfiguration\"] = 1005] = \"InvalidConfiguration\";\n    // Popup blocked\n    AuthenticationErrorCode[AuthenticationErrorCode[\"PopupBlocked\"] = 1006] = \"PopupBlocked\";\n})(AuthenticationErrorCode || (AuthenticationErrorCode = {}));\n/**\n * Represents an error that is thrown during the authentication process\n */\nexport class AuthenticationError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.name = 'AuthenticationError';\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, AuthenticationError);\n        }\n        this.code = code;\n    }\n    // throw AuthenticationError.NotSignedIn()\n    static NotSignedIn() {\n        return new AuthenticationError('Not signed in.', AuthenticationErrorCode.NotSignedIn);\n    }\n    // throw AuthenticationError.UserCancelled()\n    static UserCancelled() {\n        return new AuthenticationError('Sign in request was cancelled.', AuthenticationErrorCode.UserCancelled);\n    }\n    // throw AuthenticationError.NoRefreshToken()\n    static NoRefreshToken() {\n        return new AuthenticationError('Refresh token is not available.', AuthenticationErrorCode.NoRefreshToken);\n    }\n    // throw AuthenticationError.UnsupportedAuthenticationMethod()\n    static UnsupportedAuthenticationMethod() {\n        return new AuthenticationError('Sign in method not supported.', AuthenticationErrorCode.UnsupportedAuthenticationMethod);\n    }\n    // throw AuthenticationError.PopupBlocked()\n    static PopupBlocked(baseUrl) {\n        const msg = `The popup was blocked. Please make sure ${baseUrl} is allowed to open popups.`;\n        return new AuthenticationError(msg, AuthenticationErrorCode.PopupBlocked);\n    }\n    // throw Authentication Error.ServerError(message, description)\n    static ServerError(message, description) {\n        const err = new AuthenticationError(`Error from the server: ${message}`, AuthenticationErrorCode.ServerError);\n        err.description = description;\n        return err;\n    }\n    // throw AuthenticationError.InvalidConfiguration()\n    static InvalidConfiguration(reason) {\n        return new AuthenticationError(`The OAuth Configuration is invalid: ${reason}`, AuthenticationErrorCode.InvalidConfiguration);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}