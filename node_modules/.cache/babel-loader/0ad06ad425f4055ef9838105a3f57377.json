{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar parallel_1 = __importDefault(require(\"async/parallel\"));\n\nvar subprovider_1 = __importDefault(require(\"../subprovider\"));\n\nvar eth_util_1 = require(\"../util/eth-util\");\n\nvar stoplight_1 = __importDefault(require(\"../util/stoplight\"));\n\nvar block_filter_1 = __importDefault(require(\"./filters/block-filter\"));\n\nvar log_filter_1 = __importDefault(require(\"./filters/log-filter\"));\n\nvar pending_tx_filter_1 = __importDefault(require(\"./filters/pending-tx-filter\"));\n\nvar FilterSubprovider =\n/** @class */\nfunction (_super) {\n  __extends(FilterSubprovider, _super);\n\n  function FilterSubprovider(opts) {\n    var _this = _super.call(this) || this;\n\n    opts = opts || {};\n    _this.filterIndex = 0;\n    _this.filters = {};\n    _this.filterDestroyHandlers = {};\n    _this.asyncBlockHandlers = {};\n    _this.asyncPendingBlockHandlers = {};\n    _this._ready = new stoplight_1.default();\n\n    _this._ready.setMaxListeners(opts.maxFilters || 25);\n\n    _this._ready.go();\n\n    _this.pendingBlockTimeout = opts.pendingBlockTimeout || 4000;\n    _this.checkForPendingBlocksActive = false; // TODO: Actually load the blocks\n    // we dont have engine immeditately\n\n    setTimeout(function () {\n      // asyncBlockHandlers require locking provider until updates are completed\n      _this.engine.on('block', function (block) {\n        // pause processing\n        _this._ready.stop(); // update filters\n\n\n        var updaters = valuesFor(_this.asyncBlockHandlers).map(function (fn) {\n          return fn.bind(null, block);\n        });\n        parallel_1.default(updaters, function (err) {\n          // tslint:disable-next-line: no-console\n          if (err) {\n            console.error(err);\n          } // unpause processing\n\n\n          _this._ready.go();\n        });\n      });\n    });\n    return _this;\n  }\n\n  FilterSubprovider.prototype.handleRequest = function (payload, next, end) {\n    var _this = this;\n\n    switch (payload.method) {\n      case 'eth_newBlockFilter':\n        this.newBlockFilter(end);\n        return;\n\n      case 'eth_newPendingTransactionFilter':\n        this.newPendingTransactionFilter(end);\n        this.checkForPendingBlocks();\n        return;\n\n      case 'eth_newFilter':\n        this.newLogFilter(payload.params[0], end);\n        return;\n\n      case 'eth_getFilterChanges':\n        this._ready.await(function () {\n          _this.getFilterChanges(payload.params[0], end);\n        });\n\n        return;\n\n      case 'eth_getFilterLogs':\n        this._ready.await(function () {\n          _this.getFilterLogs(payload.params[0], end);\n        });\n\n        return;\n\n      case 'eth_uninstallFilter':\n        this._ready.await(function () {\n          _this.uninstallFilter(payload.params[0], end);\n        });\n\n        return;\n\n      default:\n        next();\n        return;\n    }\n  };\n\n  FilterSubprovider.prototype.newBlockFilter = function (cb) {\n    var _this = this;\n\n    this._getBlockNumber(function (err, blockNumber) {\n      if (err) {\n        return cb(err);\n      }\n\n      var filter = new block_filter_1.default({\n        blockNumber: blockNumber\n      });\n      var newBlockHandler = filter.update.bind(filter);\n\n      _this.engine.on('block', newBlockHandler);\n\n      var destroyHandler = function () {\n        _this.engine.removeListener('block', newBlockHandler);\n      };\n\n      _this.filterIndex++;\n      _this.filters[_this.filterIndex] = filter;\n      _this.filterDestroyHandlers[_this.filterIndex] = destroyHandler;\n      var hexFilterIndex = eth_util_1.intToHex(_this.filterIndex);\n      cb(null, hexFilterIndex);\n    });\n  };\n\n  FilterSubprovider.prototype.newLogFilter = function (opts, done) {\n    var _this = this;\n\n    var filter = new log_filter_1.default(opts);\n    var newLogHandler = filter.update.bind(filter);\n\n    var blockHandler = function (block, cb) {\n      _this._logsForBlock(block, function (err, logs) {\n        if (err) {\n          return cb(err);\n        }\n\n        newLogHandler(logs);\n        cb();\n      });\n    };\n\n    this.filterIndex++;\n    this.asyncBlockHandlers[this.filterIndex] = blockHandler;\n    this.filters[this.filterIndex] = filter;\n    var hexFilterIndex = eth_util_1.intToHex(this.filterIndex);\n    done(null, hexFilterIndex);\n  };\n\n  FilterSubprovider.prototype.newPendingTransactionFilter = function (done) {\n    var _this = this;\n\n    var filter = new pending_tx_filter_1.default();\n    var newTxHandler = filter.update.bind(filter);\n\n    var blockHandler = function (block, cb) {\n      _this._txHashesForBlock(block, function (err, txs) {\n        if (err) {\n          return cb(err);\n        }\n\n        newTxHandler(txs);\n        cb();\n      });\n    };\n\n    this.filterIndex++;\n    this.asyncPendingBlockHandlers[this.filterIndex] = blockHandler;\n    this.filters[this.filterIndex] = filter;\n    var hexFilterIndex = eth_util_1.intToHex(this.filterIndex);\n    done(null, hexFilterIndex);\n  };\n\n  FilterSubprovider.prototype.getFilterChanges = function (hexFilterId, cb) {\n    var filterId = parseInt(hexFilterId, 16);\n    var filter = this.filters[filterId]; // if (!filter) { console.warn('FilterSubprovider - no filter with that id:', hexFilterId); }\n\n    if (!filter) {\n      return cb(null, []);\n    }\n\n    var results = filter.getChanges();\n    filter.clearChanges();\n    cb(null, results);\n  };\n\n  FilterSubprovider.prototype.getFilterLogs = function (hexFilterId, cb) {\n    var filterId = parseInt(hexFilterId, 16);\n    var filter = this.filters[filterId]; // if (!filter) { console.warn('FilterSubprovider - no filter with that id:', hexFilterId); }\n\n    if (!filter) {\n      return cb(null, []);\n    }\n\n    if (filter.type === 'log') {\n      this.emitPayload({\n        id: 0,\n        jsonrpc: '2.0',\n        method: 'eth_getLogs',\n        params: [{\n          fromBlock: filter.fromBlock,\n          toBlock: filter.toBlock,\n          address: filter.address,\n          topics: filter.topics\n        }]\n      }, function (err, res) {\n        if (err) {\n          return cb(err);\n        }\n\n        cb(null, res.result);\n      });\n    } else {\n      cb(null, []);\n    }\n  };\n\n  FilterSubprovider.prototype.uninstallFilter = function (hexFilterId, cb) {\n    var filterId = parseInt(hexFilterId, 16);\n    var filter = this.filters[filterId];\n\n    if (!filter) {\n      cb(null, false);\n      return;\n    }\n\n    this.filters[filterId].removeAllListeners();\n    var destroyHandler = this.filterDestroyHandlers[filterId];\n    delete this.filters[filterId];\n    delete this.asyncBlockHandlers[filterId];\n    delete this.asyncPendingBlockHandlers[filterId];\n    delete this.filterDestroyHandlers[filterId];\n\n    if (destroyHandler) {\n      destroyHandler();\n    }\n\n    cb(null, true);\n  };\n\n  FilterSubprovider.prototype.checkForPendingBlocks = function () {\n    var _this = this;\n\n    if (this.checkForPendingBlocksActive) {\n      return;\n    }\n\n    var activePendingTxFilters = !!Object.keys(this.asyncPendingBlockHandlers).length;\n\n    if (activePendingTxFilters) {\n      this.checkForPendingBlocksActive = true;\n      this.emitPayload({\n        id: 0,\n        jsonrpc: '2.0',\n        method: 'eth_getBlockByNumber',\n        params: ['pending', true]\n      }, function (err, res) {\n        if (err) {\n          _this.checkForPendingBlocksActive = false; // console.error(err);\n\n          return;\n        }\n\n        _this.onNewPendingBlock(res.result, function () {\n          // if (err) { console.error(err); }\n          _this.checkForPendingBlocksActive = false;\n          setTimeout(_this.checkForPendingBlocks.bind(_this), _this.pendingBlockTimeout);\n        });\n      });\n    }\n  };\n\n  FilterSubprovider.prototype.onNewPendingBlock = function (block, cb) {\n    // update filters\n    var updaters = valuesFor(this.asyncPendingBlockHandlers).map(function (fn) {\n      return fn.bind(null, block);\n    });\n    parallel_1.default(updaters, cb);\n  };\n\n  FilterSubprovider.prototype._getBlockNumber = function (cb) {\n    var blockNumber = bufferToNumberHex(this.engine.currentBlock.number);\n    cb(null, blockNumber);\n  };\n\n  FilterSubprovider.prototype._logsForBlock = function (block, cb) {\n    var blockNumber = bufferToNumberHex(block.number);\n    this.emitPayload({\n      id: 0,\n      jsonrpc: '2.0',\n      method: 'eth_getLogs',\n      params: [{\n        fromBlock: blockNumber,\n        toBlock: blockNumber\n      }]\n    }, function (err, response) {\n      if (err) {\n        return cb(err);\n      }\n\n      if (response.error) {\n        return cb(response.error);\n      }\n\n      cb(null, response.result);\n    });\n  };\n\n  FilterSubprovider.prototype._txHashesForBlock = function (block, cb) {\n    var txs = block.transactions; // short circuit if empty\n\n    if (txs.length === 0) {\n      return cb(null, []);\n    } // txs are already hashes\n\n\n    if ('string' === typeof txs[0]) {\n      cb(null, txs); // txs are obj, need to map to hashes\n    } else {\n      var results = txs.map(function (tx) {\n        return tx.hash;\n      });\n      cb(null, results);\n    }\n  };\n\n  return FilterSubprovider;\n}(subprovider_1.default);\n\nexports.default = FilterSubprovider; // util\n\nfunction bufferToNumberHex(buffer) {\n  return stripLeadingZero(buffer.toString('hex'));\n}\n\nfunction stripLeadingZero(hexNum) {\n  var stripped = eth_util_1.stripHexPrefix(hexNum);\n\n  while (stripped[0] === '0') {\n    stripped = stripped.substr(1);\n  }\n\n  return \"0x\" + stripped;\n}\n\nfunction valuesFor(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/node_modules/@bitski/provider-engine/dist/subproviders/filters.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__importDefault","mod","__esModule","defineProperty","exports","value","parallel_1","require","subprovider_1","eth_util_1","stoplight_1","block_filter_1","log_filter_1","pending_tx_filter_1","FilterSubprovider","_super","opts","_this","call","filterIndex","filters","filterDestroyHandlers","asyncBlockHandlers","asyncPendingBlockHandlers","_ready","default","setMaxListeners","maxFilters","go","pendingBlockTimeout","checkForPendingBlocksActive","setTimeout","engine","on","block","stop","updaters","valuesFor","map","fn","bind","err","console","error","handleRequest","payload","next","end","method","newBlockFilter","newPendingTransactionFilter","checkForPendingBlocks","newLogFilter","params","await","getFilterChanges","getFilterLogs","uninstallFilter","cb","_getBlockNumber","blockNumber","filter","newBlockHandler","update","destroyHandler","removeListener","hexFilterIndex","intToHex","done","newLogHandler","blockHandler","_logsForBlock","logs","newTxHandler","_txHashesForBlock","txs","hexFilterId","filterId","parseInt","results","getChanges","clearChanges","type","emitPayload","id","jsonrpc","fromBlock","toBlock","address","topics","res","result","removeAllListeners","activePendingTxFilters","keys","length","onNewPendingBlock","bufferToNumberHex","currentBlock","number","response","transactions","tx","hash","buffer","stripLeadingZero","toString","hexNum","stripped","stripHexPrefix","substr","obj","key"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parallel_1 = __importDefault(require(\"async/parallel\"));\nvar subprovider_1 = __importDefault(require(\"../subprovider\"));\nvar eth_util_1 = require(\"../util/eth-util\");\nvar stoplight_1 = __importDefault(require(\"../util/stoplight\"));\nvar block_filter_1 = __importDefault(require(\"./filters/block-filter\"));\nvar log_filter_1 = __importDefault(require(\"./filters/log-filter\"));\nvar pending_tx_filter_1 = __importDefault(require(\"./filters/pending-tx-filter\"));\nvar FilterSubprovider = /** @class */ (function (_super) {\n    __extends(FilterSubprovider, _super);\n    function FilterSubprovider(opts) {\n        var _this = _super.call(this) || this;\n        opts = opts || {};\n        _this.filterIndex = 0;\n        _this.filters = {};\n        _this.filterDestroyHandlers = {};\n        _this.asyncBlockHandlers = {};\n        _this.asyncPendingBlockHandlers = {};\n        _this._ready = new stoplight_1.default();\n        _this._ready.setMaxListeners(opts.maxFilters || 25);\n        _this._ready.go();\n        _this.pendingBlockTimeout = opts.pendingBlockTimeout || 4000;\n        _this.checkForPendingBlocksActive = false;\n        // TODO: Actually load the blocks\n        // we dont have engine immeditately\n        setTimeout(function () {\n            // asyncBlockHandlers require locking provider until updates are completed\n            _this.engine.on('block', function (block) {\n                // pause processing\n                _this._ready.stop();\n                // update filters\n                var updaters = valuesFor(_this.asyncBlockHandlers).map(function (fn) { return fn.bind(null, block); });\n                parallel_1.default(updaters, function (err) {\n                    // tslint:disable-next-line: no-console\n                    if (err) {\n                        console.error(err);\n                    }\n                    // unpause processing\n                    _this._ready.go();\n                });\n            });\n        });\n        return _this;\n    }\n    FilterSubprovider.prototype.handleRequest = function (payload, next, end) {\n        var _this = this;\n        switch (payload.method) {\n            case 'eth_newBlockFilter':\n                this.newBlockFilter(end);\n                return;\n            case 'eth_newPendingTransactionFilter':\n                this.newPendingTransactionFilter(end);\n                this.checkForPendingBlocks();\n                return;\n            case 'eth_newFilter':\n                this.newLogFilter(payload.params[0], end);\n                return;\n            case 'eth_getFilterChanges':\n                this._ready.await(function () {\n                    _this.getFilterChanges(payload.params[0], end);\n                });\n                return;\n            case 'eth_getFilterLogs':\n                this._ready.await(function () {\n                    _this.getFilterLogs(payload.params[0], end);\n                });\n                return;\n            case 'eth_uninstallFilter':\n                this._ready.await(function () {\n                    _this.uninstallFilter(payload.params[0], end);\n                });\n                return;\n            default:\n                next();\n                return;\n        }\n    };\n    FilterSubprovider.prototype.newBlockFilter = function (cb) {\n        var _this = this;\n        this._getBlockNumber(function (err, blockNumber) {\n            if (err) {\n                return cb(err);\n            }\n            var filter = new block_filter_1.default({\n                blockNumber: blockNumber,\n            });\n            var newBlockHandler = filter.update.bind(filter);\n            _this.engine.on('block', newBlockHandler);\n            var destroyHandler = function () {\n                _this.engine.removeListener('block', newBlockHandler);\n            };\n            _this.filterIndex++;\n            _this.filters[_this.filterIndex] = filter;\n            _this.filterDestroyHandlers[_this.filterIndex] = destroyHandler;\n            var hexFilterIndex = eth_util_1.intToHex(_this.filterIndex);\n            cb(null, hexFilterIndex);\n        });\n    };\n    FilterSubprovider.prototype.newLogFilter = function (opts, done) {\n        var _this = this;\n        var filter = new log_filter_1.default(opts);\n        var newLogHandler = filter.update.bind(filter);\n        var blockHandler = function (block, cb) {\n            _this._logsForBlock(block, function (err, logs) {\n                if (err) {\n                    return cb(err);\n                }\n                newLogHandler(logs);\n                cb();\n            });\n        };\n        this.filterIndex++;\n        this.asyncBlockHandlers[this.filterIndex] = blockHandler;\n        this.filters[this.filterIndex] = filter;\n        var hexFilterIndex = eth_util_1.intToHex(this.filterIndex);\n        done(null, hexFilterIndex);\n    };\n    FilterSubprovider.prototype.newPendingTransactionFilter = function (done) {\n        var _this = this;\n        var filter = new pending_tx_filter_1.default();\n        var newTxHandler = filter.update.bind(filter);\n        var blockHandler = function (block, cb) {\n            _this._txHashesForBlock(block, function (err, txs) {\n                if (err) {\n                    return cb(err);\n                }\n                newTxHandler(txs);\n                cb();\n            });\n        };\n        this.filterIndex++;\n        this.asyncPendingBlockHandlers[this.filterIndex] = blockHandler;\n        this.filters[this.filterIndex] = filter;\n        var hexFilterIndex = eth_util_1.intToHex(this.filterIndex);\n        done(null, hexFilterIndex);\n    };\n    FilterSubprovider.prototype.getFilterChanges = function (hexFilterId, cb) {\n        var filterId = parseInt(hexFilterId, 16);\n        var filter = this.filters[filterId];\n        // if (!filter) { console.warn('FilterSubprovider - no filter with that id:', hexFilterId); }\n        if (!filter) {\n            return cb(null, []);\n        }\n        var results = filter.getChanges();\n        filter.clearChanges();\n        cb(null, results);\n    };\n    FilterSubprovider.prototype.getFilterLogs = function (hexFilterId, cb) {\n        var filterId = parseInt(hexFilterId, 16);\n        var filter = this.filters[filterId];\n        // if (!filter) { console.warn('FilterSubprovider - no filter with that id:', hexFilterId); }\n        if (!filter) {\n            return cb(null, []);\n        }\n        if (filter.type === 'log') {\n            this.emitPayload({\n                id: 0,\n                jsonrpc: '2.0',\n                method: 'eth_getLogs',\n                params: [{\n                        fromBlock: filter.fromBlock,\n                        toBlock: filter.toBlock,\n                        address: filter.address,\n                        topics: filter.topics,\n                    }],\n            }, function (err, res) {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, res.result);\n            });\n        }\n        else {\n            cb(null, []);\n        }\n    };\n    FilterSubprovider.prototype.uninstallFilter = function (hexFilterId, cb) {\n        var filterId = parseInt(hexFilterId, 16);\n        var filter = this.filters[filterId];\n        if (!filter) {\n            cb(null, false);\n            return;\n        }\n        this.filters[filterId].removeAllListeners();\n        var destroyHandler = this.filterDestroyHandlers[filterId];\n        delete this.filters[filterId];\n        delete this.asyncBlockHandlers[filterId];\n        delete this.asyncPendingBlockHandlers[filterId];\n        delete this.filterDestroyHandlers[filterId];\n        if (destroyHandler) {\n            destroyHandler();\n        }\n        cb(null, true);\n    };\n    FilterSubprovider.prototype.checkForPendingBlocks = function () {\n        var _this = this;\n        if (this.checkForPendingBlocksActive) {\n            return;\n        }\n        var activePendingTxFilters = !!Object.keys(this.asyncPendingBlockHandlers).length;\n        if (activePendingTxFilters) {\n            this.checkForPendingBlocksActive = true;\n            this.emitPayload({\n                id: 0,\n                jsonrpc: '2.0',\n                method: 'eth_getBlockByNumber',\n                params: ['pending', true],\n            }, function (err, res) {\n                if (err) {\n                    _this.checkForPendingBlocksActive = false;\n                    // console.error(err);\n                    return;\n                }\n                _this.onNewPendingBlock(res.result, function () {\n                    // if (err) { console.error(err); }\n                    _this.checkForPendingBlocksActive = false;\n                    setTimeout(_this.checkForPendingBlocks.bind(_this), _this.pendingBlockTimeout);\n                });\n            });\n        }\n    };\n    FilterSubprovider.prototype.onNewPendingBlock = function (block, cb) {\n        // update filters\n        var updaters = valuesFor(this.asyncPendingBlockHandlers).map(function (fn) { return fn.bind(null, block); });\n        parallel_1.default(updaters, cb);\n    };\n    FilterSubprovider.prototype._getBlockNumber = function (cb) {\n        var blockNumber = bufferToNumberHex(this.engine.currentBlock.number);\n        cb(null, blockNumber);\n    };\n    FilterSubprovider.prototype._logsForBlock = function (block, cb) {\n        var blockNumber = bufferToNumberHex(block.number);\n        this.emitPayload({\n            id: 0,\n            jsonrpc: '2.0',\n            method: 'eth_getLogs',\n            params: [{\n                    fromBlock: blockNumber,\n                    toBlock: blockNumber,\n                }],\n        }, function (err, response) {\n            if (err) {\n                return cb(err);\n            }\n            if (response.error) {\n                return cb(response.error);\n            }\n            cb(null, response.result);\n        });\n    };\n    FilterSubprovider.prototype._txHashesForBlock = function (block, cb) {\n        var txs = block.transactions;\n        // short circuit if empty\n        if (txs.length === 0) {\n            return cb(null, []);\n        }\n        // txs are already hashes\n        if ('string' === typeof txs[0]) {\n            cb(null, txs);\n            // txs are obj, need to map to hashes\n        }\n        else {\n            var results = txs.map(function (tx) { return tx.hash; });\n            cb(null, results);\n        }\n    };\n    return FilterSubprovider;\n}(subprovider_1.default));\nexports.default = FilterSubprovider;\n// util\nfunction bufferToNumberHex(buffer) {\n    return stripLeadingZero(buffer.toString('hex'));\n}\nfunction stripLeadingZero(hexNum) {\n    var stripped = eth_util_1.stripHexPrefix(hexNum);\n    while (stripped[0] === '0') {\n        stripped = stripped.substr(1);\n    }\n    return \"0x\" + stripped;\n}\nfunction valuesFor(obj) {\n    return Object.keys(obj).map(function (key) { return obj[key]; });\n}\n"]},"metadata":{},"sourceType":"script"}