{"ast":null,"code":"export var ParseErrorCode;\n\n(function (ParseErrorCode) {\n  // Could not parse response as JSON\n  ParseErrorCode[ParseErrorCode[\"InvalidJSON\"] = 2000] = \"InvalidJSON\"; // Received an error response status,\n  // but not error body was provided.\n\n  ParseErrorCode[ParseErrorCode[\"NoErrorBody\"] = 2001] = \"NoErrorBody\";\n})(ParseErrorCode || (ParseErrorCode = {}));\n/**\n * Represents an error that is thrown during decoding\n */\n\n\nexport class ParseError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.name = 'ParseError'; // Maintains proper stack trace for where our error was thrown (only available on V8)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ParseError);\n    }\n\n    this.code = code;\n  }\n\n  static InvalidJSON() {\n    return new ParseError('Could not decode response as JSON', ParseErrorCode.InvalidJSON);\n  }\n\n  static UnknownError() {\n    return new ParseError('An unknown error occurred.', ParseErrorCode.NoErrorBody);\n  }\n\n}","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/node_modules/bitski/dist/esm/errors/parse-error.js"],"names":["ParseErrorCode","ParseError","Error","constructor","message","code","name","captureStackTrace","InvalidJSON","UnknownError","NoErrorBody"],"mappings":"AAAA,OAAO,IAAIA,cAAJ;;AACP,CAAC,UAAUA,cAAV,EAA0B;AACvB;AACAA,EAAAA,cAAc,CAACA,cAAc,CAAC,aAAD,CAAd,GAAgC,IAAjC,CAAd,GAAuD,aAAvD,CAFuB,CAGvB;AACA;;AACAA,EAAAA,cAAc,CAACA,cAAc,CAAC,aAAD,CAAd,GAAgC,IAAjC,CAAd,GAAuD,aAAvD;AACH,CAND,EAMGA,cAAc,KAAKA,cAAc,GAAG,EAAtB,CANjB;AAOA;AACA;AACA;;;AACA,OAAO,MAAMC,UAAN,SAAyBC,KAAzB,CAA+B;AAClCC,EAAAA,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgB;AACvB,UAAMD,OAAN;AACA,SAAKE,IAAL,GAAY,YAAZ,CAFuB,CAGvB;;AACA,QAAIJ,KAAK,CAACK,iBAAV,EAA6B;AACzBL,MAAAA,KAAK,CAACK,iBAAN,CAAwB,IAAxB,EAA8BN,UAA9B;AACH;;AACD,SAAKI,IAAL,GAAYA,IAAZ;AACH;;AACiB,SAAXG,WAAW,GAAG;AACjB,WAAO,IAAIP,UAAJ,CAAe,mCAAf,EAAoDD,cAAc,CAACQ,WAAnE,CAAP;AACH;;AACkB,SAAZC,YAAY,GAAG;AAClB,WAAO,IAAIR,UAAJ,CAAe,4BAAf,EAA6CD,cAAc,CAACU,WAA5D,CAAP;AACH;;AAfiC","sourcesContent":["export var ParseErrorCode;\n(function (ParseErrorCode) {\n    // Could not parse response as JSON\n    ParseErrorCode[ParseErrorCode[\"InvalidJSON\"] = 2000] = \"InvalidJSON\";\n    // Received an error response status,\n    // but not error body was provided.\n    ParseErrorCode[ParseErrorCode[\"NoErrorBody\"] = 2001] = \"NoErrorBody\";\n})(ParseErrorCode || (ParseErrorCode = {}));\n/**\n * Represents an error that is thrown during decoding\n */\nexport class ParseError extends Error {\n    constructor(message, code) {\n        super(message);\n        this.name = 'ParseError';\n        // Maintains proper stack trace for where our error was thrown (only available on V8)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, ParseError);\n        }\n        this.code = code;\n    }\n    static InvalidJSON() {\n        return new ParseError('Could not decode response as JSON', ParseErrorCode.InvalidJSON);\n    }\n    static UnknownError() {\n        return new ParseError('An unknown error occurred.', ParseErrorCode.NoErrorBody);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}