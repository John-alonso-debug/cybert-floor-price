{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst random_1 = require(\"./random\");\n\nconst constants_1 = require(\"./constants\");\n\nfunction createColor() {\n  let h = Math.floor(random_1.random() * 360);\n  let s = random_1.random() * 60 + 40 + '%';\n  let l = (random_1.random() + random_1.random() + random_1.random() + random_1.random()) * 25 + '%';\n  let color = 'hsl(' + h + ',' + s + ',' + l + ')';\n  return color;\n}\n\nexports.createColor = createColor;\n\nfunction createImageData(size) {\n  let width = size;\n  let height = size;\n  let dataWidth = Math.ceil(width / 2);\n  let mirrorWidth = width - dataWidth;\n  let data = [];\n\n  for (let y = 0; y < height; y++) {\n    let row = [];\n\n    for (let x = 0; x < dataWidth; x++) {\n      row[x] = Math.floor(random_1.random() * 2.3);\n    }\n\n    let r = row.slice(0, mirrorWidth);\n    r.reverse();\n    row = row.concat(r);\n\n    for (let i = 0; i < row.length; i++) {\n      data.push(row[i]);\n    }\n  }\n\n  return data;\n}\n\nexports.createImageData = createImageData;\n\nfunction parseOptions(opts) {\n  const seed = opts.seed || Math.floor(Math.random() * Math.pow(10, 16)).toString(16);\n  random_1.seedRandomness(seed);\n  return {\n    seed,\n    size: opts.size || constants_1.DEFAULT_SIZE,\n    scale: opts.scale || constants_1.DEFAULT_SCALE,\n    color: opts.color || createColor(),\n    bgcolor: opts.bgcolor || createColor(),\n    spotcolor: opts.spotcolor || createColor()\n  };\n}\n\nexports.parseOptions = parseOptions;","map":{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,SAAgB,WAAhB,GAA2B;AAEzB,MAAI,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,QAAA,CAAA,MAAA,KAAW,GAAtB,CAAR;AAEA,MAAI,CAAC,GAAG,QAAA,CAAA,MAAA,KAAW,EAAX,GAAgB,EAAhB,GAAqB,GAA7B;AAEA,MAAI,CAAC,GAAG,CAAC,QAAA,CAAA,MAAA,KAAW,QAAA,CAAA,MAAA,EAAX,GAAsB,QAAA,CAAA,MAAA,EAAtB,GAAiC,QAAA,CAAA,MAAA,EAAlC,IAA8C,EAA9C,GAAmD,GAA3D;AAEA,MAAI,KAAK,GAAG,SAAS,CAAT,GAAa,GAAb,GAAmB,CAAnB,GAAuB,GAAvB,GAA6B,CAA7B,GAAiC,GAA7C;AACA,SAAO,KAAP;AACD;;AAVD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAYA,SAAgB,eAAhB,CAAgC,IAAhC,EAA4C;AAC1C,MAAI,KAAK,GAAG,IAAZ;AACA,MAAI,MAAM,GAAG,IAAb;AAEA,MAAI,SAAS,GAAG,IAAI,CAAC,IAAL,CAAU,KAAK,GAAG,CAAlB,CAAhB;AACA,MAAI,WAAW,GAAG,KAAK,GAAG,SAA1B;AAEA,MAAI,IAAI,GAAa,EAArB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AAC/B,QAAI,GAAG,GAAa,EAApB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAApB,EAA+B,CAAC,EAAhC,EAAoC;AAGlC,MAAA,GAAG,CAAC,CAAD,CAAH,GAAS,IAAI,CAAC,KAAL,CAAW,QAAA,CAAA,MAAA,KAAW,GAAtB,CAAT;AACD;;AACD,QAAI,CAAC,GAAG,GAAG,CAAC,KAAJ,CAAU,CAAV,EAAa,WAAb,CAAR;AACA,IAAA,CAAC,CAAC,OAAF;AACA,IAAA,GAAG,GAAG,GAAG,CAAC,MAAJ,CAAW,CAAX,CAAN;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,CAAC,EAAjC,EAAqC;AACnC,MAAA,IAAI,CAAC,IAAL,CAAU,GAAG,CAAC,CAAD,CAAb;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAzBD,OAAA,CAAA,eAAA,GAAA,eAAA;;AA2BA,SAAgB,YAAhB,CAA6B,IAA7B,EAA2D;AACzD,QAAM,IAAI,GACR,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,EAAb,CAA3B,EAA6C,QAA7C,CAAsD,EAAtD,CADf;AAGA,EAAA,QAAA,CAAA,cAAA,CAAe,IAAf;AAEA,SAAO;AACL,IAAA,IADK;AAEL,IAAA,IAAI,EAAE,IAAI,CAAC,IAAL,IAAa,WAAA,CAAA,YAFd;AAGL,IAAA,KAAK,EAAE,IAAI,CAAC,KAAL,IAAc,WAAA,CAAA,aAHhB;AAIL,IAAA,KAAK,EAAE,IAAI,CAAC,KAAL,IAAc,WAAW,EAJ3B;AAKL,IAAA,OAAO,EAAE,IAAI,CAAC,OAAL,IAAgB,WAAW,EAL/B;AAML,IAAA,SAAS,EAAE,IAAI,CAAC,SAAL,IAAkB,WAAW;AANnC,GAAP;AAQD;;AAdD,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst random_1 = require(\"./random\");\nconst constants_1 = require(\"./constants\");\nfunction createColor() {\n    let h = Math.floor(random_1.random() * 360);\n    let s = random_1.random() * 60 + 40 + '%';\n    let l = (random_1.random() + random_1.random() + random_1.random() + random_1.random()) * 25 + '%';\n    let color = 'hsl(' + h + ',' + s + ',' + l + ')';\n    return color;\n}\nexports.createColor = createColor;\nfunction createImageData(size) {\n    let width = size;\n    let height = size;\n    let dataWidth = Math.ceil(width / 2);\n    let mirrorWidth = width - dataWidth;\n    let data = [];\n    for (let y = 0; y < height; y++) {\n        let row = [];\n        for (let x = 0; x < dataWidth; x++) {\n            row[x] = Math.floor(random_1.random() * 2.3);\n        }\n        let r = row.slice(0, mirrorWidth);\n        r.reverse();\n        row = row.concat(r);\n        for (let i = 0; i < row.length; i++) {\n            data.push(row[i]);\n        }\n    }\n    return data;\n}\nexports.createImageData = createImageData;\nfunction parseOptions(opts) {\n    const seed = opts.seed || Math.floor(Math.random() * Math.pow(10, 16)).toString(16);\n    random_1.seedRandomness(seed);\n    return {\n        seed,\n        size: opts.size || constants_1.DEFAULT_SIZE,\n        scale: opts.scale || constants_1.DEFAULT_SCALE,\n        color: opts.color || createColor(),\n        bgcolor: opts.bgcolor || createColor(),\n        spotcolor: opts.spotcolor || createColor(),\n    };\n}\nexports.parseOptions = parseOptions;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}