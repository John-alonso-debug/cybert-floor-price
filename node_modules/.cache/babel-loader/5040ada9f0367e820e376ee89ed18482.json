{"ast":null,"code":"\"use strict\";\n/*\n * Calculate gasPrice based on last blocks.\n * @author github.com/axic\n *\n * FIXME: support minimum suggested gas and perhaps other options from geth:\n * https://github.com/ethereum/go-ethereum/blob/master/eth/gasprice.go\n * https://github.com/ethereum/go-ethereum/wiki/Gas-Price-Oracle\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar map_1 = __importDefault(require(\"async/map\"));\n\nvar gas_price_error_1 = require(\"../errors/gas-price-error\");\n\nvar subprovider_1 = __importDefault(require(\"../subprovider\"));\n\nvar GaspriceProvider =\n/** @class */\nfunction (_super) {\n  __extends(GaspriceProvider, _super);\n\n  function GaspriceProvider(opts) {\n    var _this = this;\n\n    opts = opts || {};\n    _this = _super.call(this) || this;\n    _this.numberOfBlocks = opts.numberOfBlocks || 10;\n    _this.delayInBlocks = opts.delayInBlocks || 5;\n    return _this;\n  }\n\n  GaspriceProvider.prototype.handleRequest = function (payload, next, end) {\n    var _this = this;\n\n    if (payload.method !== 'eth_gasPrice') {\n      return next();\n    }\n\n    var p = {\n      id: 0,\n      jsonrpc: '2.0',\n      method: 'eth_blockNumber',\n      params: []\n    };\n    this.emitPayload(p, function (_, res) {\n      // FIXME: convert number using a bignum library\n      var lastBlock = parseInt(res.result, 16) - _this.delayInBlocks;\n\n      var blockNumbers = [];\n\n      for (var i = 0; i < _this.numberOfBlocks; i++) {\n        blockNumbers.push('0x' + lastBlock.toString(16));\n        lastBlock--;\n      }\n\n      var getBlock = function (item, cb) {\n        var p2 = {\n          id: 0,\n          jsonrpc: '2.0',\n          method: 'eth_getBlockByNumber',\n          params: [item, true]\n        };\n\n        _this.emitPayload(p2, function (err, blockRes) {\n          if (err) {\n            return cb(err);\n          }\n\n          if (!blockRes.result) {\n            return cb(gas_price_error_1.GasPriceError.BlockNotFound(item));\n          }\n\n          cb(null, blockRes.result.transactions);\n        });\n      }; // FIXME: this could be made much faster\n\n\n      var calcPrice = function (err, transactions) {\n        // flatten array\n        transactions = transactions.reduce(function (a, b) {\n          return a.concat(b);\n        }, []); // leave only the gasprice\n        // FIXME: convert number using a bignum library\n\n        transactions = transactions.map(function (a) {\n          return parseInt(a.gasPrice, 16);\n        }, []); // order ascending\n\n        transactions.sort(function (a, b) {\n          return a - b;\n        }); // ze median\n\n        var half = Math.floor(transactions.length / 2);\n        var median;\n\n        if (transactions.length % 2) {\n          median = transactions[half];\n        } else {\n          median = Math.floor((transactions[half - 1] + transactions[half]) / 2.0);\n        }\n\n        end(null, median);\n      };\n\n      map_1.default(blockNumbers, getBlock, calcPrice);\n    });\n  };\n\n  return GaspriceProvider;\n}(subprovider_1.default);\n\nexports.default = GaspriceProvider;","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/node_modules/@bitski/provider-engine/dist/subproviders/gasprice.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__importDefault","mod","__esModule","defineProperty","exports","value","map_1","require","gas_price_error_1","subprovider_1","GaspriceProvider","_super","opts","_this","call","numberOfBlocks","delayInBlocks","handleRequest","payload","next","end","method","id","jsonrpc","params","emitPayload","_","res","lastBlock","parseInt","result","blockNumbers","i","push","toString","getBlock","item","cb","p2","err","blockRes","GasPriceError","BlockNotFound","transactions","calcPrice","reduce","a","concat","map","gasPrice","sort","half","Math","floor","length","median","default"],"mappings":"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","sourcesContent":["\"use strict\";\n/*\n * Calculate gasPrice based on last blocks.\n * @author github.com/axic\n *\n * FIXME: support minimum suggested gas and perhaps other options from geth:\n * https://github.com/ethereum/go-ethereum/blob/master/eth/gasprice.go\n * https://github.com/ethereum/go-ethereum/wiki/Gas-Price-Oracle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar map_1 = __importDefault(require(\"async/map\"));\nvar gas_price_error_1 = require(\"../errors/gas-price-error\");\nvar subprovider_1 = __importDefault(require(\"../subprovider\"));\nvar GaspriceProvider = /** @class */ (function (_super) {\n    __extends(GaspriceProvider, _super);\n    function GaspriceProvider(opts) {\n        var _this = this;\n        opts = opts || {};\n        _this = _super.call(this) || this;\n        _this.numberOfBlocks = opts.numberOfBlocks || 10;\n        _this.delayInBlocks = opts.delayInBlocks || 5;\n        return _this;\n    }\n    GaspriceProvider.prototype.handleRequest = function (payload, next, end) {\n        var _this = this;\n        if (payload.method !== 'eth_gasPrice') {\n            return next();\n        }\n        var p = { id: 0, jsonrpc: '2.0', method: 'eth_blockNumber', params: [] };\n        this.emitPayload(p, function (_, res) {\n            // FIXME: convert number using a bignum library\n            var lastBlock = parseInt(res.result, 16) - _this.delayInBlocks;\n            var blockNumbers = [];\n            for (var i = 0; i < _this.numberOfBlocks; i++) {\n                blockNumbers.push('0x' + lastBlock.toString(16));\n                lastBlock--;\n            }\n            var getBlock = function (item, cb) {\n                var p2 = { id: 0, jsonrpc: '2.0', method: 'eth_getBlockByNumber', params: [item, true] };\n                _this.emitPayload(p2, function (err, blockRes) {\n                    if (err) {\n                        return cb(err);\n                    }\n                    if (!blockRes.result) {\n                        return cb(gas_price_error_1.GasPriceError.BlockNotFound(item));\n                    }\n                    cb(null, blockRes.result.transactions);\n                });\n            };\n            // FIXME: this could be made much faster\n            var calcPrice = function (err, transactions) {\n                // flatten array\n                transactions = transactions.reduce(function (a, b) { return a.concat(b); }, []);\n                // leave only the gasprice\n                // FIXME: convert number using a bignum library\n                transactions = transactions.map(function (a) { return parseInt(a.gasPrice, 16); }, []);\n                // order ascending\n                transactions.sort(function (a, b) { return a - b; });\n                // ze median\n                var half = Math.floor(transactions.length / 2);\n                var median;\n                if (transactions.length % 2) {\n                    median = transactions[half];\n                }\n                else {\n                    median = Math.floor((transactions[half - 1] + transactions[half]) / 2.0);\n                }\n                end(null, median);\n            };\n            map_1.default(blockNumbers, getBlock, calcPrice);\n        });\n    };\n    return GaspriceProvider;\n}(subprovider_1.default));\nexports.default = GaspriceProvider;\n"]},"metadata":{},"sourceType":"script"}