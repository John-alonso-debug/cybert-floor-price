{"ast":null,"code":"import { AuthenticatedFetchSubprovider } from 'bitski-provider'; // A subprovider that loads accounts from a custom rpc endpoint.\n// This is necessary because to guarantee that account related calls go through Bitski\n\nexport class RemoteAccountSubprovider extends AuthenticatedFetchSubprovider {\n  handleRequest(payload, next, end) {\n    if (payload.method === 'eth_accounts') {\n      this.handleAuthenticatedRequest(payload, next, end);\n    } else {\n      next();\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/node_modules/bitski/dist/esm/subproviders/remote-accounts.js"],"names":["AuthenticatedFetchSubprovider","RemoteAccountSubprovider","handleRequest","payload","next","end","method","handleAuthenticatedRequest"],"mappings":"AAAA,SAASA,6BAAT,QAA8C,iBAA9C,C,CACA;AACA;;AACA,OAAO,MAAMC,wBAAN,SAAuCD,6BAAvC,CAAqE;AACxEE,EAAAA,aAAa,CAACC,OAAD,EAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AAC9B,QAAIF,OAAO,CAACG,MAAR,KAAmB,cAAvB,EAAuC;AACnC,WAAKC,0BAAL,CAAgCJ,OAAhC,EAAyCC,IAAzC,EAA+CC,GAA/C;AACH,KAFD,MAGK;AACDD,MAAAA,IAAI;AACP;AACJ;;AARuE","sourcesContent":["import { AuthenticatedFetchSubprovider } from 'bitski-provider';\n// A subprovider that loads accounts from a custom rpc endpoint.\n// This is necessary because to guarantee that account related calls go through Bitski\nexport class RemoteAccountSubprovider extends AuthenticatedFetchSubprovider {\n    handleRequest(payload, next, end) {\n        if (payload.method === 'eth_accounts') {\n            this.handleAuthenticatedRequest(payload, next, end);\n        }\n        else {\n            next();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}