{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar json_stable_stringify_1 = __importDefault(require(\"json-stable-stringify\"));\n\nfunction cacheIdentifierForPayload(payload, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  if (!canCache(payload)) {\n    return null;\n  }\n\n  var includeBlockRef = opts.includeBlockRef;\n  var params = includeBlockRef ? payload.params : paramsWithoutBlockTag(payload);\n  return payload.method + ':' + json_stable_stringify_1.default(params);\n}\n\nexports.cacheIdentifierForPayload = cacheIdentifierForPayload;\n\nfunction canCache(payload) {\n  return cacheTypeForPayload(payload) !== 'never';\n}\n\nexports.canCache = canCache;\n\nfunction blockTagForPayload(payload) {\n  var index = blockTagParamIndex(payload); // Block tag param not passed.\n\n  if (index >= payload.params.length) {\n    return null;\n  }\n\n  return payload.params[index];\n}\n\nexports.blockTagForPayload = blockTagForPayload;\n\nfunction paramsWithoutBlockTag(payload) {\n  var index = blockTagParamIndex(payload); // Block tag param not passed.\n\n  if (index >= payload.params.length) {\n    return payload.params;\n  } // eth_getBlockByNumber has the block tag first, then the optional includeTx? param\n\n\n  if (payload.method === 'eth_getBlockByNumber') {\n    return payload.params.slice(1);\n  }\n\n  return payload.params.slice(0, index);\n}\n\nexports.paramsWithoutBlockTag = paramsWithoutBlockTag;\n\nfunction blockTagParamIndex(payload) {\n  switch (payload.method) {\n    // blockTag is third param\n    case 'eth_getStorageAt':\n      return 2;\n    // blockTag is second param\n\n    case 'eth_getBalance':\n    case 'eth_getCode':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n      return 1;\n    // blockTag is first param\n\n    case 'eth_getBlockByNumber':\n      return 0;\n    // there is no blockTag\n\n    default:\n      return undefined;\n  }\n}\n\nexports.blockTagParamIndex = blockTagParamIndex;\n\nfunction cacheTypeForPayload(payload) {\n  switch (payload.method) {\n    // cache permanently\n    case 'net_version':\n    case 'web3_clientVersion':\n    case 'web3_sha3':\n    case 'eth_protocolVersion':\n    case 'eth_getBlockTransactionCountByHash':\n    case 'eth_getUncleCountByBlockHash':\n    case 'eth_getCode':\n    case 'eth_getBlockByHash':\n    case 'eth_getTransactionByHash':\n    case 'eth_getTransactionByBlockHashAndIndex':\n    case 'eth_getTransactionReceipt':\n    case 'eth_getUncleByBlockHashAndIndex':\n    case 'eth_getCompilers':\n    case 'eth_compileLLL':\n    case 'eth_compileSolidity':\n    case 'eth_compileSerpent':\n    case 'shh_version':\n      return 'perma';\n    // cache until fork\n\n    case 'eth_getBlockByNumber':\n    case 'eth_getBlockTransactionCountByNumber':\n    case 'eth_getUncleCountByBlockNumber':\n    case 'eth_getTransactionByBlockNumberAndIndex':\n    case 'eth_getUncleByBlockNumberAndIndex':\n      return 'fork';\n    // cache for block\n\n    case 'eth_gasPrice':\n    case 'eth_blockNumber':\n    case 'eth_getBalance':\n    case 'eth_getStorageAt':\n    case 'eth_getTransactionCount':\n    case 'eth_call':\n    case 'eth_estimateGas':\n    case 'eth_getFilterLogs':\n    case 'eth_getLogs':\n    case 'net_peerCount':\n      return 'block';\n    // never cache\n\n    case 'net_peerCount':\n    case 'net_listening':\n    case 'eth_syncing':\n    case 'eth_sign':\n    case 'eth_coinbase':\n    case 'eth_mining':\n    case 'eth_hashrate':\n    case 'eth_accounts':\n    case 'eth_sendTransaction':\n    case 'eth_sendRawTransaction':\n    case 'eth_newFilter':\n    case 'eth_newBlockFilter':\n    case 'eth_newPendingTransactionFilter':\n    case 'eth_uninstallFilter':\n    case 'eth_getFilterChanges':\n    case 'eth_getWork':\n    case 'eth_submitWork':\n    case 'eth_submitHashrate':\n    case 'db_putString':\n    case 'db_getString':\n    case 'db_putHex':\n    case 'db_getHex':\n    case 'shh_post':\n    case 'shh_newIdentity':\n    case 'shh_hasIdentity':\n    case 'shh_newGroup':\n    case 'shh_addToGroup':\n    case 'shh_newFilter':\n    case 'shh_uninstallFilter':\n    case 'shh_getFilterChanges':\n    case 'shh_getMessages':\n      return 'never';\n  }\n}\n\nexports.cacheTypeForPayload = cacheTypeForPayload;","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/node_modules/@bitski/provider-engine/dist/util/rpc-cache-utils.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","json_stable_stringify_1","require","cacheIdentifierForPayload","payload","opts","canCache","includeBlockRef","params","paramsWithoutBlockTag","method","default","cacheTypeForPayload","blockTagForPayload","index","blockTagParamIndex","length","slice","undefined"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar json_stable_stringify_1 = __importDefault(require(\"json-stable-stringify\"));\nfunction cacheIdentifierForPayload(payload, opts) {\n    if (opts === void 0) { opts = {}; }\n    if (!canCache(payload)) {\n        return null;\n    }\n    var includeBlockRef = opts.includeBlockRef;\n    var params = includeBlockRef ? payload.params : paramsWithoutBlockTag(payload);\n    return payload.method + ':' + json_stable_stringify_1.default(params);\n}\nexports.cacheIdentifierForPayload = cacheIdentifierForPayload;\nfunction canCache(payload) {\n    return cacheTypeForPayload(payload) !== 'never';\n}\nexports.canCache = canCache;\nfunction blockTagForPayload(payload) {\n    var index = blockTagParamIndex(payload);\n    // Block tag param not passed.\n    if (index >= payload.params.length) {\n        return null;\n    }\n    return payload.params[index];\n}\nexports.blockTagForPayload = blockTagForPayload;\nfunction paramsWithoutBlockTag(payload) {\n    var index = blockTagParamIndex(payload);\n    // Block tag param not passed.\n    if (index >= payload.params.length) {\n        return payload.params;\n    }\n    // eth_getBlockByNumber has the block tag first, then the optional includeTx? param\n    if (payload.method === 'eth_getBlockByNumber') {\n        return payload.params.slice(1);\n    }\n    return payload.params.slice(0, index);\n}\nexports.paramsWithoutBlockTag = paramsWithoutBlockTag;\nfunction blockTagParamIndex(payload) {\n    switch (payload.method) {\n        // blockTag is third param\n        case 'eth_getStorageAt':\n            return 2;\n        // blockTag is second param\n        case 'eth_getBalance':\n        case 'eth_getCode':\n        case 'eth_getTransactionCount':\n        case 'eth_call':\n        case 'eth_estimateGas':\n            return 1;\n        // blockTag is first param\n        case 'eth_getBlockByNumber':\n            return 0;\n        // there is no blockTag\n        default:\n            return undefined;\n    }\n}\nexports.blockTagParamIndex = blockTagParamIndex;\nfunction cacheTypeForPayload(payload) {\n    switch (payload.method) {\n        // cache permanently\n        case 'net_version':\n        case 'web3_clientVersion':\n        case 'web3_sha3':\n        case 'eth_protocolVersion':\n        case 'eth_getBlockTransactionCountByHash':\n        case 'eth_getUncleCountByBlockHash':\n        case 'eth_getCode':\n        case 'eth_getBlockByHash':\n        case 'eth_getTransactionByHash':\n        case 'eth_getTransactionByBlockHashAndIndex':\n        case 'eth_getTransactionReceipt':\n        case 'eth_getUncleByBlockHashAndIndex':\n        case 'eth_getCompilers':\n        case 'eth_compileLLL':\n        case 'eth_compileSolidity':\n        case 'eth_compileSerpent':\n        case 'shh_version':\n            return 'perma';\n        // cache until fork\n        case 'eth_getBlockByNumber':\n        case 'eth_getBlockTransactionCountByNumber':\n        case 'eth_getUncleCountByBlockNumber':\n        case 'eth_getTransactionByBlockNumberAndIndex':\n        case 'eth_getUncleByBlockNumberAndIndex':\n            return 'fork';\n        // cache for block\n        case 'eth_gasPrice':\n        case 'eth_blockNumber':\n        case 'eth_getBalance':\n        case 'eth_getStorageAt':\n        case 'eth_getTransactionCount':\n        case 'eth_call':\n        case 'eth_estimateGas':\n        case 'eth_getFilterLogs':\n        case 'eth_getLogs':\n        case 'net_peerCount':\n            return 'block';\n        // never cache\n        case 'net_peerCount':\n        case 'net_listening':\n        case 'eth_syncing':\n        case 'eth_sign':\n        case 'eth_coinbase':\n        case 'eth_mining':\n        case 'eth_hashrate':\n        case 'eth_accounts':\n        case 'eth_sendTransaction':\n        case 'eth_sendRawTransaction':\n        case 'eth_newFilter':\n        case 'eth_newBlockFilter':\n        case 'eth_newPendingTransactionFilter':\n        case 'eth_uninstallFilter':\n        case 'eth_getFilterChanges':\n        case 'eth_getWork':\n        case 'eth_submitWork':\n        case 'eth_submitHashrate':\n        case 'db_putString':\n        case 'db_getString':\n        case 'db_putHex':\n        case 'db_getHex':\n        case 'shh_post':\n        case 'shh_newIdentity':\n        case 'shh_hasIdentity':\n        case 'shh_newGroup':\n        case 'shh_addToGroup':\n        case 'shh_newFilter':\n        case 'shh_uninstallFilter':\n        case 'shh_getFilterChanges':\n        case 'shh_getMessages':\n            return 'never';\n    }\n}\nexports.cacheTypeForPayload = cacheTypeForPayload;\n"]},"metadata":{},"sourceType":"script"}