{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar eth_block_tracker_1 = __importDefault(require(\"eth-block-tracker\"));\n\nvar events_1 = require(\"events\");\n\nvar block_tracker_error_1 = require(\"../errors/block-tracker-error\");\n\nvar create_payload_1 = require(\"./create-payload\");\n\nvar eth_util_1 = require(\"./eth-util\"); // Class responsible for tracking new blocks as they are mined,\n// loading them, parsing them, and alerting subscribers via events.\n\n\nvar BlockTracker =\n/** @class */\nfunction (_super) {\n  __extends(BlockTracker, _super);\n\n  function BlockTracker(opts) {\n    var _this = _super.call(this) || this; // Number of milliseconds to wait before retrying\n\n\n    _this.blockTimeout = 300; // Maximum attempts to load a block\n\n    _this.maxBlockRetries = 3;\n    _this.provider = opts.provider;\n    _this._blockTracker = opts.blockTracker || new eth_block_tracker_1.default(__assign({}, opts, {\n      setSkipCacheFlag: true\n    }));\n    return _this;\n  }\n\n  BlockTracker.prototype.start = function () {\n    this.createSubscriptions();\n  };\n\n  BlockTracker.prototype.stop = function () {\n    this.destroySubscriptions();\n  };\n\n  BlockTracker.prototype.fetchLatest = function () {\n    var _this = this;\n\n    return this._blockTracker.checkForLatestBlock().catch(function (error) {\n      _this.emit('error', error);\n    });\n  };\n\n  BlockTracker.prototype.createSubscriptions = function () {\n    // on new block, request block body and emit as events\n    this._blockTracker.on('latest', this.onLatest.bind(this)); // forward other events\n\n\n    this._blockTracker.on('sync', this.emit.bind(this, 'sync'));\n\n    this._blockTracker.on('error', this.emit.bind(this, 'error'));\n  };\n\n  BlockTracker.prototype.destroySubscriptions = function () {\n    // stop block polling by removing event listeners\n    this._blockTracker.removeAllListeners();\n  };\n\n  BlockTracker.prototype.onLatest = function (blockNumber) {\n    this.currentBlockNumber = blockNumber;\n    this.loadBlock(blockNumber);\n  }; // Tries to get the block payload recursively\n\n\n  BlockTracker.prototype.loadBlock = function (blockNumber, callCount) {\n    var _this = this;\n\n    if (callCount === void 0) {\n      callCount = 0;\n    }\n\n    this._getBlockByNumber(blockNumber).then(function (blockResponse) {\n      // Result can be null if the block hasn't fully propagated to the nodes\n      if (blockResponse.result) {\n        _this.updateBlock(blockResponse.result);\n      } else if (callCount < _this.maxBlockRetries && blockNumber === _this.currentBlockNumber) {\n        // Only call recursively if the current block number is still the same\n        // and if we are under the retry limit.\n        setTimeout(function () {\n          _this.loadBlock(blockNumber, callCount + 1);\n        }, _this.blockTimeout);\n      } else {\n        throw block_tracker_error_1.BlockTrackerError.BlockNotFound(blockNumber);\n      }\n    }).catch(function (err) {\n      // Don't retry for errors (provider should have already retried)\n      _this.emit('error', err);\n    });\n  };\n\n  BlockTracker.prototype._getBlockByNumber = function (blockNumber) {\n    var _this = this;\n\n    var req = create_payload_1.createPayload({\n      method: 'eth_getBlockByNumber',\n      params: [blockNumber, false],\n      skipCache: true\n    });\n    return new Promise(function (fulfill, reject) {\n      _this.provider.sendAsync(req, function (err, result) {\n        if (err) {\n          return reject(err);\n        }\n\n        fulfill(result);\n      });\n    });\n  }; // Parse the block into a buffer representation and update subscribers.\n\n\n  BlockTracker.prototype.updateBlock = function (block) {\n    var bufferBlock = toBufferBlock(block); // set current + emit \"block\" event\n\n    this._setCurrentBlock(bufferBlock); // emit other events\n\n\n    this.emit('rawBlock', block);\n    this.emit('latest', block);\n  };\n\n  BlockTracker.prototype._setCurrentBlock = function (bufferBlock) {\n    this.currentBlock = bufferBlock;\n    this.emit('block', bufferBlock);\n  };\n\n  return BlockTracker;\n}(events_1.EventEmitter);\n\nexports.default = BlockTracker; // util\n\nfunction toBufferBlock(jsonBlock) {\n  return {\n    number: eth_util_1.toBuffer(jsonBlock.number),\n    hash: eth_util_1.toBuffer(jsonBlock.hash),\n    parentHash: eth_util_1.toBuffer(jsonBlock.parentHash),\n    nonce: eth_util_1.toBuffer(jsonBlock.nonce),\n    mixHash: eth_util_1.toBuffer(jsonBlock.mixHash),\n    sha3Uncles: eth_util_1.toBuffer(jsonBlock.sha3Uncles),\n    logsBloom: eth_util_1.toBuffer(jsonBlock.logsBloom),\n    transactionsRoot: eth_util_1.toBuffer(jsonBlock.transactionsRoot),\n    stateRoot: eth_util_1.toBuffer(jsonBlock.stateRoot),\n    receiptsRoot: eth_util_1.toBuffer(jsonBlock.receiptsRoot),\n    miner: eth_util_1.toBuffer(jsonBlock.miner),\n    difficulty: eth_util_1.toBuffer(jsonBlock.difficulty),\n    totalDifficulty: eth_util_1.toBuffer(jsonBlock.totalDifficulty),\n    size: eth_util_1.toBuffer(jsonBlock.size),\n    extraData: eth_util_1.toBuffer(jsonBlock.extraData),\n    gasLimit: eth_util_1.toBuffer(jsonBlock.gasLimit),\n    gasUsed: eth_util_1.toBuffer(jsonBlock.gasUsed),\n    timestamp: eth_util_1.toBuffer(jsonBlock.timestamp),\n    transactions: jsonBlock.transactions\n  };\n}","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/node_modules/@bitski/provider-engine/dist/util/block-tracker.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__importDefault","mod","__esModule","defineProperty","exports","value","eth_block_tracker_1","require","events_1","block_tracker_error_1","create_payload_1","eth_util_1","BlockTracker","_super","opts","_this","blockTimeout","maxBlockRetries","provider","_blockTracker","blockTracker","default","setSkipCacheFlag","start","createSubscriptions","stop","destroySubscriptions","fetchLatest","checkForLatestBlock","catch","error","emit","on","onLatest","bind","removeAllListeners","blockNumber","currentBlockNumber","loadBlock","callCount","_getBlockByNumber","then","blockResponse","result","updateBlock","setTimeout","BlockTrackerError","BlockNotFound","err","req","createPayload","method","params","skipCache","Promise","fulfill","reject","sendAsync","block","bufferBlock","toBufferBlock","_setCurrentBlock","currentBlock","EventEmitter","jsonBlock","number","toBuffer","hash","parentHash","nonce","mixHash","sha3Uncles","logsBloom","transactionsRoot","stateRoot","receiptsRoot","miner","difficulty","totalDifficulty","size","extraData","gasLimit","gasUsed","timestamp","transactions"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eth_block_tracker_1 = __importDefault(require(\"eth-block-tracker\"));\nvar events_1 = require(\"events\");\nvar block_tracker_error_1 = require(\"../errors/block-tracker-error\");\nvar create_payload_1 = require(\"./create-payload\");\nvar eth_util_1 = require(\"./eth-util\");\n// Class responsible for tracking new blocks as they are mined,\n// loading them, parsing them, and alerting subscribers via events.\nvar BlockTracker = /** @class */ (function (_super) {\n    __extends(BlockTracker, _super);\n    function BlockTracker(opts) {\n        var _this = _super.call(this) || this;\n        // Number of milliseconds to wait before retrying\n        _this.blockTimeout = 300;\n        // Maximum attempts to load a block\n        _this.maxBlockRetries = 3;\n        _this.provider = opts.provider;\n        _this._blockTracker = opts.blockTracker || new eth_block_tracker_1.default(__assign({}, opts, { setSkipCacheFlag: true }));\n        return _this;\n    }\n    BlockTracker.prototype.start = function () {\n        this.createSubscriptions();\n    };\n    BlockTracker.prototype.stop = function () {\n        this.destroySubscriptions();\n    };\n    BlockTracker.prototype.fetchLatest = function () {\n        var _this = this;\n        return this._blockTracker.checkForLatestBlock().catch(function (error) {\n            _this.emit('error', error);\n        });\n    };\n    BlockTracker.prototype.createSubscriptions = function () {\n        // on new block, request block body and emit as events\n        this._blockTracker.on('latest', this.onLatest.bind(this));\n        // forward other events\n        this._blockTracker.on('sync', this.emit.bind(this, 'sync'));\n        this._blockTracker.on('error', this.emit.bind(this, 'error'));\n    };\n    BlockTracker.prototype.destroySubscriptions = function () {\n        // stop block polling by removing event listeners\n        this._blockTracker.removeAllListeners();\n    };\n    BlockTracker.prototype.onLatest = function (blockNumber) {\n        this.currentBlockNumber = blockNumber;\n        this.loadBlock(blockNumber);\n    };\n    // Tries to get the block payload recursively\n    BlockTracker.prototype.loadBlock = function (blockNumber, callCount) {\n        var _this = this;\n        if (callCount === void 0) { callCount = 0; }\n        this._getBlockByNumber(blockNumber).then(function (blockResponse) {\n            // Result can be null if the block hasn't fully propagated to the nodes\n            if (blockResponse.result) {\n                _this.updateBlock(blockResponse.result);\n            }\n            else if (callCount < _this.maxBlockRetries && blockNumber === _this.currentBlockNumber) {\n                // Only call recursively if the current block number is still the same\n                // and if we are under the retry limit.\n                setTimeout(function () {\n                    _this.loadBlock(blockNumber, callCount + 1);\n                }, _this.blockTimeout);\n            }\n            else {\n                throw block_tracker_error_1.BlockTrackerError.BlockNotFound(blockNumber);\n            }\n        }).catch(function (err) {\n            // Don't retry for errors (provider should have already retried)\n            _this.emit('error', err);\n        });\n    };\n    BlockTracker.prototype._getBlockByNumber = function (blockNumber) {\n        var _this = this;\n        var req = create_payload_1.createPayload({ method: 'eth_getBlockByNumber', params: [blockNumber, false], skipCache: true });\n        return new Promise(function (fulfill, reject) {\n            _this.provider.sendAsync(req, function (err, result) {\n                if (err) {\n                    return reject(err);\n                }\n                fulfill(result);\n            });\n        });\n    };\n    // Parse the block into a buffer representation and update subscribers.\n    BlockTracker.prototype.updateBlock = function (block) {\n        var bufferBlock = toBufferBlock(block);\n        // set current + emit \"block\" event\n        this._setCurrentBlock(bufferBlock);\n        // emit other events\n        this.emit('rawBlock', block);\n        this.emit('latest', block);\n    };\n    BlockTracker.prototype._setCurrentBlock = function (bufferBlock) {\n        this.currentBlock = bufferBlock;\n        this.emit('block', bufferBlock);\n    };\n    return BlockTracker;\n}(events_1.EventEmitter));\nexports.default = BlockTracker;\n// util\nfunction toBufferBlock(jsonBlock) {\n    return {\n        number: eth_util_1.toBuffer(jsonBlock.number),\n        hash: eth_util_1.toBuffer(jsonBlock.hash),\n        parentHash: eth_util_1.toBuffer(jsonBlock.parentHash),\n        nonce: eth_util_1.toBuffer(jsonBlock.nonce),\n        mixHash: eth_util_1.toBuffer(jsonBlock.mixHash),\n        sha3Uncles: eth_util_1.toBuffer(jsonBlock.sha3Uncles),\n        logsBloom: eth_util_1.toBuffer(jsonBlock.logsBloom),\n        transactionsRoot: eth_util_1.toBuffer(jsonBlock.transactionsRoot),\n        stateRoot: eth_util_1.toBuffer(jsonBlock.stateRoot),\n        receiptsRoot: eth_util_1.toBuffer(jsonBlock.receiptsRoot),\n        miner: eth_util_1.toBuffer(jsonBlock.miner),\n        difficulty: eth_util_1.toBuffer(jsonBlock.difficulty),\n        totalDifficulty: eth_util_1.toBuffer(jsonBlock.totalDifficulty),\n        size: eth_util_1.toBuffer(jsonBlock.size),\n        extraData: eth_util_1.toBuffer(jsonBlock.extraData),\n        gasLimit: eth_util_1.toBuffer(jsonBlock.gasLimit),\n        gasUsed: eth_util_1.toBuffer(jsonBlock.gasUsed),\n        timestamp: eth_util_1.toBuffer(jsonBlock.timestamp),\n        transactions: jsonBlock.transactions,\n    };\n}\n"]},"metadata":{},"sourceType":"script"}