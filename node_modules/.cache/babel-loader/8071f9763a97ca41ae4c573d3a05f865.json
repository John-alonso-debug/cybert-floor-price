{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RevokeTokenRequest = void 0;\n/**\n * Represents a revoke token request.\n * For more information look at:\n * https://tools.ietf.org/html/rfc7009#section-2.1\n */\n\nvar RevokeTokenRequest =\n/** @class */\nfunction () {\n  function RevokeTokenRequest(request) {\n    this.token = request.token;\n    this.tokenTypeHint = request.token_type_hint;\n    this.clientId = request.client_id;\n    this.clientSecret = request.client_secret;\n  }\n  /**\n   * Serializes a TokenRequest to a JavaScript object.\n   */\n\n\n  RevokeTokenRequest.prototype.toJson = function () {\n    var json = {\n      token: this.token\n    };\n\n    if (this.tokenTypeHint) {\n      json['token_type_hint'] = this.tokenTypeHint;\n    }\n\n    if (this.clientId) {\n      json['client_id'] = this.clientId;\n    }\n\n    if (this.clientSecret) {\n      json['client_secret'] = this.clientSecret;\n    }\n\n    return json;\n  };\n\n  RevokeTokenRequest.prototype.toStringMap = function () {\n    var json = this.toJson(); // :(\n\n    return json;\n  };\n\n  return RevokeTokenRequest;\n}();\n\nexports.RevokeTokenRequest = RevokeTokenRequest;","map":{"version":3,"sources":["../src/revoke_token_request.ts"],"names":[],"mappings":";;;;;;AA+BA;;;;AAIG;;AACH,IAAA,kBAAA;AAAA;AAAA,YAAA;AAME,WAAA,kBAAA,CAAY,OAAZ,EAA2C;AACzC,SAAK,KAAL,GAAa,OAAO,CAAC,KAArB;AACA,SAAK,aAAL,GAAqB,OAAO,CAAC,eAA7B;AACA,SAAK,QAAL,GAAgB,OAAO,CAAC,SAAxB;AACA,SAAK,YAAL,GAAoB,OAAO,CAAC,aAA5B;AACD;AAED;;AAEG;;;AACH,EAAA,kBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,QAAI,IAAI,GAA2B;AAAC,MAAA,KAAK,EAAE,KAAK;AAAb,KAAnC;;AACA,QAAI,KAAK,aAAT,EAAwB;AACtB,MAAA,IAAI,CAAC,iBAAD,CAAJ,GAA0B,KAAK,aAA/B;AACD;;AACD,QAAI,KAAK,QAAT,EAAmB;AACjB,MAAA,IAAI,CAAC,WAAD,CAAJ,GAAoB,KAAK,QAAzB;AACD;;AACD,QAAI,KAAK,YAAT,EAAuB;AACrB,MAAA,IAAI,CAAC,eAAD,CAAJ,GAAwB,KAAK,YAA7B;AACD;;AACD,WAAO,IAAP;AACD,GAZD;;AAcA,EAAA,kBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,QAAI,IAAI,GAAG,KAAK,MAAL,EAAX,CADF,CAEE;;AACA,WAAQ,IAAR;AACD,GAJD;;AAKF,SAAA,kBAAA;AAAC,CAnCD,EAAA;;AAAa,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourcesContent":["import {StringMap} from './types';\n\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Supported token types\n */\nexport type TokenTypeHint = 'refresh_token'|'access_token';\n\n/**\n * Represents the Token Request as JSON.\n */\nexport interface RevokeTokenRequestJson {\n  token: string;\n  token_type_hint?: TokenTypeHint;\n  client_id?: string;\n  client_secret?: string;\n}\n\n/**\n * Represents a revoke token request.\n * For more information look at:\n * https://tools.ietf.org/html/rfc7009#section-2.1\n */\nexport class RevokeTokenRequest {\n  token: string;\n  tokenTypeHint: TokenTypeHint|undefined;\n  clientId: string|undefined;\n  clientSecret: string|undefined;\n\n  constructor(request: RevokeTokenRequestJson) {\n    this.token = request.token;\n    this.tokenTypeHint = request.token_type_hint;\n    this.clientId = request.client_id;\n    this.clientSecret = request.client_secret;\n  }\n\n  /**\n   * Serializes a TokenRequest to a JavaScript object.\n   */\n  toJson(): RevokeTokenRequestJson {\n    let json: RevokeTokenRequestJson = {token: this.token};\n    if (this.tokenTypeHint) {\n      json['token_type_hint'] = this.tokenTypeHint;\n    }\n    if (this.clientId) {\n      json['client_id'] = this.clientId;\n    }\n    if (this.clientSecret) {\n      json['client_secret'] = this.clientSecret;\n    }\n    return json;\n  }\n\n  toStringMap(): StringMap {\n    let json = this.toJson();\n    // :(\n    return (json as any);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}