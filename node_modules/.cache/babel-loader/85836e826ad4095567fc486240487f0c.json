{"ast":null,"code":"import { USER_KEY } from '../constants';\nimport { LocalStorageStore } from '../utils/localstorage-store';\nimport { User } from './user';\nexport class UserStore {\n  constructor(clientId, store) {\n    this.clientId = clientId;\n    this.store = store || new LocalStorageStore();\n    this.user = this.fetchUser();\n  }\n\n  get currentUser() {\n    return this.user || this.fetchUser();\n  }\n\n  get storageKey() {\n    return `${USER_KEY}.${this.clientId}`;\n  }\n\n  set(user) {\n    this.user = user;\n    this.cacheUser(user);\n  }\n\n  clear() {\n    this.user = undefined;\n    this.cacheUser(undefined);\n  }\n\n  fetchUser() {\n    const userData = this.store.getItem(this.storageKey);\n\n    if (userData) {\n      return User.fromString(userData);\n    }\n  }\n\n  cacheUser(user) {\n    if (user) {\n      this.store.setItem(this.storageKey, user.toStorageString());\n    } else {\n      this.store.clearItem(this.storageKey);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/node_modules/bitski/dist/esm/auth/user-store.js"],"names":["USER_KEY","LocalStorageStore","User","UserStore","constructor","clientId","store","user","fetchUser","currentUser","storageKey","set","cacheUser","clear","undefined","userData","getItem","fromString","setItem","toStorageString","clearItem"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAO,MAAMC,SAAN,CAAgB;AACnBC,EAAAA,WAAW,CAACC,QAAD,EAAWC,KAAX,EAAkB;AACzB,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAK,IAAI,IAAIL,iBAAJ,EAAtB;AACA,SAAKM,IAAL,GAAY,KAAKC,SAAL,EAAZ;AACH;;AACc,MAAXC,WAAW,GAAG;AACd,WAAO,KAAKF,IAAL,IAAa,KAAKC,SAAL,EAApB;AACH;;AACa,MAAVE,UAAU,GAAG;AACb,WAAQ,GAAEV,QAAS,IAAG,KAAKK,QAAS,EAApC;AACH;;AACDM,EAAAA,GAAG,CAACJ,IAAD,EAAO;AACN,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKK,SAAL,CAAeL,IAAf;AACH;;AACDM,EAAAA,KAAK,GAAG;AACJ,SAAKN,IAAL,GAAYO,SAAZ;AACA,SAAKF,SAAL,CAAeE,SAAf;AACH;;AACDN,EAAAA,SAAS,GAAG;AACR,UAAMO,QAAQ,GAAG,KAAKT,KAAL,CAAWU,OAAX,CAAmB,KAAKN,UAAxB,CAAjB;;AACA,QAAIK,QAAJ,EAAc;AACV,aAAOb,IAAI,CAACe,UAAL,CAAgBF,QAAhB,CAAP;AACH;AACJ;;AACDH,EAAAA,SAAS,CAACL,IAAD,EAAO;AACZ,QAAIA,IAAJ,EAAU;AACN,WAAKD,KAAL,CAAWY,OAAX,CAAmB,KAAKR,UAAxB,EAAoCH,IAAI,CAACY,eAAL,EAApC;AACH,KAFD,MAGK;AACD,WAAKb,KAAL,CAAWc,SAAX,CAAqB,KAAKV,UAA1B;AACH;AACJ;;AAjCkB","sourcesContent":["import { USER_KEY } from '../constants';\nimport { LocalStorageStore } from '../utils/localstorage-store';\nimport { User } from './user';\nexport class UserStore {\n    constructor(clientId, store) {\n        this.clientId = clientId;\n        this.store = store || new LocalStorageStore();\n        this.user = this.fetchUser();\n    }\n    get currentUser() {\n        return this.user || this.fetchUser();\n    }\n    get storageKey() {\n        return `${USER_KEY}.${this.clientId}`;\n    }\n    set(user) {\n        this.user = user;\n        this.cacheUser(user);\n    }\n    clear() {\n        this.user = undefined;\n        this.cacheUser(undefined);\n    }\n    fetchUser() {\n        const userData = this.store.getItem(this.storageKey);\n        if (userData) {\n            return User.fromString(userData);\n        }\n    }\n    cacheUser(user) {\n        if (user) {\n            this.store.setItem(this.storageKey, user.toStorageString());\n        }\n        else {\n            this.store.clearItem(this.storageKey);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}