{"ast":null,"code":"var _jsxFileName = \"/Users/helen/fi/protocol-demo/frontend/src/components/ERC20Icon.tsx\";\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport Icon from \"./Icon\";\nimport erc20 from \"../assets/erc20.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ERC20Icon = props => {\n  const src = `https://raw.githubusercontent.com/TrustWallet/tokens/master/tokens/${props.contractAddress.toLowerCase()}.png`;\n  return /*#__PURE__*/_jsxDEV(Icon, {\n    src: src,\n    fallback: erc20\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ERC20Icon;\nERC20Icon.propTypes = {\n  contractAddress: PropTypes.string,\n  size: PropTypes.number\n};\nERC20Icon.defaultProps = {\n  contractAddress: null,\n  size: 20\n};\nexport default ERC20Icon;\n\nvar _c;\n\n$RefreshReg$(_c, \"ERC20Icon\");","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/src/components/ERC20Icon.tsx"],"names":["React","PropTypes","Icon","ERC20Icon","props","src","contractAddress","toLowerCase","erc20","propTypes","string","size","number","defaultProps"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AAChC,QAAMC,GAAG,GAAI,sEAAqED,KAAK,CAACE,eAAN,CAAsBC,WAAtB,EAAoC,MAAtH;AACA,sBAAO,QAAC,IAAD;AAAM,IAAA,GAAG,EAAEF,GAAX;AAAgB,IAAA,QAAQ,EAAEG;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;KAAML,S;AAKNA,SAAS,CAACM,SAAV,GAAsB;AACpBH,EAAAA,eAAe,EAAEL,SAAS,CAACS,MADP;AAEpBC,EAAAA,IAAI,EAAEV,SAAS,CAACW;AAFI,CAAtB;AAKAT,SAAS,CAACU,YAAV,GAAyB;AACvBP,EAAAA,eAAe,EAAE,IADM;AAEvBK,EAAAA,IAAI,EAAE;AAFiB,CAAzB;AAKA,eAAeR,SAAf","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport Icon from \"./Icon\";\nimport erc20 from \"../assets/erc20.svg\";\n\nconst ERC20Icon = (props: any) => {\n  const src = `https://raw.githubusercontent.com/TrustWallet/tokens/master/tokens/${props.contractAddress.toLowerCase()}.png`;\n  return <Icon src={src} fallback={erc20} />;\n};\n\nERC20Icon.propTypes = {\n  contractAddress: PropTypes.string,\n  size: PropTypes.number,\n};\n\nERC20Icon.defaultProps = {\n  contractAddress: null,\n  size: 20,\n};\n\nexport default ERC20Icon;\n"]},"metadata":{},"sourceType":"module"}