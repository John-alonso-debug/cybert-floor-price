{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar subprovider_1 = __importDefault(require(\"../subprovider\"));\n\nvar eth_util_1 = require(\"../util/eth-util\");\n\nvar rpc_cache_utils_1 = require(\"../util/rpc-cache-utils\");\n\nvar block_strategy_1 = __importDefault(require(\"./cache-strategies/block-strategy\"));\n\nvar conditional_perma_strategy_1 = __importDefault(require(\"./cache-strategies/conditional-perma-strategy\"));\n\nvar BlockCacheProvider =\n/** @class */\nfunction (_super) {\n  __extends(BlockCacheProvider, _super);\n\n  function BlockCacheProvider() {\n    var _this = _super.call(this) || this;\n\n    _this.isEnabled = false;\n    _this.strategies = {\n      perma: new conditional_perma_strategy_1.default({\n        eth_getTransactionByHash: containsBlockhash,\n        eth_getTransactionReceipt: containsBlockhash\n      }),\n      block: new block_strategy_1.default(),\n      fork: new block_strategy_1.default()\n    };\n    return _this;\n  } // setup a block listener on 'setEngine'\n\n\n  BlockCacheProvider.prototype.setEngine = function (engine) {\n    var _this = this;\n\n    _super.prototype.setEngine.call(this, engine); // unblock initialization after first block\n\n\n    engine.once('block', function () {\n      _this.isEnabled = true; // from now on, empty old cache every block\n\n      engine.on('block', _this.clearOldCache.bind(_this));\n    });\n  };\n\n  BlockCacheProvider.prototype.handleRequest = function (payload, next, end) {\n    // skip cache if told to do so\n    if (payload.skipCache) {\n      // console.log('CACHE SKIP - skip cache if told to do so')\n      return next();\n    } // Ignore requests for the latest block\n\n\n    if (payload.method === 'eth_getBlockByNumber' && payload.params[0] === 'latest') {\n      // console.log('CACHE SKIP - Ignore block polling requests.')\n      return next();\n    } // Block cache should not start handling requests until blocks have been received.\n\n\n    if (!this.isEnabled) {\n      return next();\n    } // actually handle the request\n\n\n    this._handleRequest(payload, next, end);\n  };\n\n  BlockCacheProvider.prototype._handleRequest = function (payload, next, end) {\n    var type = rpc_cache_utils_1.cacheTypeForPayload(payload);\n    var strategy = this.strategies[type]; // If there's no strategy in place, pass it down the chain.\n\n    if (!strategy) {\n      return next();\n    } // If the strategy can't cache this request, ignore it.\n\n\n    if (!strategy.canCache(payload)) {\n      return next();\n    }\n\n    var blockTag = rpc_cache_utils_1.blockTagForPayload(payload);\n\n    if (!blockTag) {\n      blockTag = 'latest';\n    }\n\n    var requestedBlockNumber;\n\n    if (blockTag === 'earliest') {\n      requestedBlockNumber = '0x00';\n    } else if (blockTag === 'latest') {\n      requestedBlockNumber = eth_util_1.bufferToHex(this.currentBlock.number);\n    } else {\n      // We have a hex number\n      requestedBlockNumber = blockTag;\n    } // console.log('REQUEST at block 0x' + requestedBlockNumber.toString('hex'))\n    // end on a hit, continue on a miss\n\n\n    strategy.hitCheck(payload, requestedBlockNumber, end, function () {\n      // miss fallthrough to provider chain, caching the result on the way back up.\n      next(function (err, result, cb) {\n        // err is already handled by engine\n        if (err) {\n          return cb();\n        }\n\n        strategy.cacheResult(payload, result, requestedBlockNumber, cb);\n      });\n    });\n  };\n\n  BlockCacheProvider.prototype.clearOldCache = function (newBlock) {\n    var previousBlock = this.currentBlock;\n    this.currentBlock = newBlock;\n\n    if (!previousBlock) {\n      return;\n    }\n\n    this.strategies.block.cacheRollOff(previousBlock);\n    this.strategies.fork.cacheRollOff(previousBlock);\n  };\n\n  return BlockCacheProvider;\n}(subprovider_1.default);\n\nexports.default = BlockCacheProvider;\n\nfunction hexToBN(hex) {\n  return new bn_js_1.default(eth_util_1.toBuffer(hex));\n}\n\nfunction containsBlockhash(result) {\n  if (!result) {\n    return false;\n  }\n\n  if (!result.blockHash) {\n    return false;\n  }\n\n  var hasNonZeroHash = hexToBN(result.blockHash).gt(new bn_js_1.default(0));\n  return hasNonZeroHash;\n}","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/node_modules/@bitski/provider-engine/dist/subproviders/cache.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__importDefault","mod","__esModule","defineProperty","exports","value","bn_js_1","require","subprovider_1","eth_util_1","rpc_cache_utils_1","block_strategy_1","conditional_perma_strategy_1","BlockCacheProvider","_super","_this","call","isEnabled","strategies","perma","default","eth_getTransactionByHash","containsBlockhash","eth_getTransactionReceipt","block","fork","setEngine","engine","once","on","clearOldCache","bind","handleRequest","payload","next","end","skipCache","method","params","_handleRequest","type","cacheTypeForPayload","strategy","canCache","blockTag","blockTagForPayload","requestedBlockNumber","bufferToHex","currentBlock","number","hitCheck","err","result","cb","cacheResult","newBlock","previousBlock","cacheRollOff","hexToBN","hex","toBuffer","blockHash","hasNonZeroHash","gt"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar subprovider_1 = __importDefault(require(\"../subprovider\"));\nvar eth_util_1 = require(\"../util/eth-util\");\nvar rpc_cache_utils_1 = require(\"../util/rpc-cache-utils\");\nvar block_strategy_1 = __importDefault(require(\"./cache-strategies/block-strategy\"));\nvar conditional_perma_strategy_1 = __importDefault(require(\"./cache-strategies/conditional-perma-strategy\"));\nvar BlockCacheProvider = /** @class */ (function (_super) {\n    __extends(BlockCacheProvider, _super);\n    function BlockCacheProvider() {\n        var _this = _super.call(this) || this;\n        _this.isEnabled = false;\n        _this.strategies = {\n            perma: new conditional_perma_strategy_1.default({\n                eth_getTransactionByHash: containsBlockhash,\n                eth_getTransactionReceipt: containsBlockhash,\n            }),\n            block: new block_strategy_1.default(),\n            fork: new block_strategy_1.default(),\n        };\n        return _this;\n    }\n    // setup a block listener on 'setEngine'\n    BlockCacheProvider.prototype.setEngine = function (engine) {\n        var _this = this;\n        _super.prototype.setEngine.call(this, engine);\n        // unblock initialization after first block\n        engine.once('block', function () {\n            _this.isEnabled = true;\n            // from now on, empty old cache every block\n            engine.on('block', _this.clearOldCache.bind(_this));\n        });\n    };\n    BlockCacheProvider.prototype.handleRequest = function (payload, next, end) {\n        // skip cache if told to do so\n        if (payload.skipCache) {\n            // console.log('CACHE SKIP - skip cache if told to do so')\n            return next();\n        }\n        // Ignore requests for the latest block\n        if (payload.method === 'eth_getBlockByNumber' && payload.params[0] === 'latest') {\n            // console.log('CACHE SKIP - Ignore block polling requests.')\n            return next();\n        }\n        // Block cache should not start handling requests until blocks have been received.\n        if (!this.isEnabled) {\n            return next();\n        }\n        // actually handle the request\n        this._handleRequest(payload, next, end);\n    };\n    BlockCacheProvider.prototype._handleRequest = function (payload, next, end) {\n        var type = rpc_cache_utils_1.cacheTypeForPayload(payload);\n        var strategy = this.strategies[type];\n        // If there's no strategy in place, pass it down the chain.\n        if (!strategy) {\n            return next();\n        }\n        // If the strategy can't cache this request, ignore it.\n        if (!strategy.canCache(payload)) {\n            return next();\n        }\n        var blockTag = rpc_cache_utils_1.blockTagForPayload(payload);\n        if (!blockTag) {\n            blockTag = 'latest';\n        }\n        var requestedBlockNumber;\n        if (blockTag === 'earliest') {\n            requestedBlockNumber = '0x00';\n        }\n        else if (blockTag === 'latest') {\n            requestedBlockNumber = eth_util_1.bufferToHex(this.currentBlock.number);\n        }\n        else {\n            // We have a hex number\n            requestedBlockNumber = blockTag;\n        }\n        // console.log('REQUEST at block 0x' + requestedBlockNumber.toString('hex'))\n        // end on a hit, continue on a miss\n        strategy.hitCheck(payload, requestedBlockNumber, end, function () {\n            // miss fallthrough to provider chain, caching the result on the way back up.\n            next(function (err, result, cb) {\n                // err is already handled by engine\n                if (err) {\n                    return cb();\n                }\n                strategy.cacheResult(payload, result, requestedBlockNumber, cb);\n            });\n        });\n    };\n    BlockCacheProvider.prototype.clearOldCache = function (newBlock) {\n        var previousBlock = this.currentBlock;\n        this.currentBlock = newBlock;\n        if (!previousBlock) {\n            return;\n        }\n        this.strategies.block.cacheRollOff(previousBlock);\n        this.strategies.fork.cacheRollOff(previousBlock);\n    };\n    return BlockCacheProvider;\n}(subprovider_1.default));\nexports.default = BlockCacheProvider;\nfunction hexToBN(hex) {\n    return new bn_js_1.default(eth_util_1.toBuffer(hex));\n}\nfunction containsBlockhash(result) {\n    if (!result) {\n        return false;\n    }\n    if (!result.blockHash) {\n        return false;\n    }\n    var hasNonZeroHash = hexToBN(result.blockHash).gt(new bn_js_1.default(0));\n    return hasNonZeroHash;\n}\n"]},"metadata":{},"sourceType":"script"}