{"ast":null,"code":"export class User {\n  constructor(id, accounts, email, emailVerified, phone, phoneNumberVerified) {\n    this.id = id;\n    this.accounts = accounts;\n    this.email = email;\n    this.emailVerified = emailVerified;\n    this.phoneNumber = phone;\n    this.phoneNumberVerified = phoneNumberVerified;\n  }\n\n  static fromJson(json) {\n    return new User(json.sub, json.accounts, json.email, json.email_verified, json.phone_number, json.phone_number_verified);\n  }\n\n  static fromString(s) {\n    let parsed;\n\n    try {\n      parsed = JSON.parse(s);\n    } catch (e) {\n      return;\n    }\n\n    if (parsed.id) {\n      return new User(parsed.id, parsed.accounts, parsed.email, parsed.emailVerified, parsed.phoneNumber, parsed.phoneNumberVerified);\n    }\n\n    return;\n  }\n\n  toStorageString() {\n    return JSON.stringify({\n      accounts: this.accounts,\n      email: this.email,\n      emailVerified: this.emailVerified,\n      id: this.id,\n      phoneNumber: this.phoneNumber,\n      phoneNumberVerified: this.phoneNumberVerified\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/node_modules/bitski/dist/esm/auth/user.js"],"names":["User","constructor","id","accounts","email","emailVerified","phone","phoneNumberVerified","phoneNumber","fromJson","json","sub","email_verified","phone_number","phone_number_verified","fromString","s","parsed","JSON","parse","e","toStorageString","stringify"],"mappings":"AAAA,OAAO,MAAMA,IAAN,CAAW;AACdC,EAAAA,WAAW,CAACC,EAAD,EAAKC,QAAL,EAAeC,KAAf,EAAsBC,aAAtB,EAAqCC,KAArC,EAA4CC,mBAA5C,EAAiE;AACxE,SAAKL,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKG,WAAL,GAAmBF,KAAnB;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACH;;AACc,SAARE,QAAQ,CAACC,IAAD,EAAO;AAClB,WAAO,IAAIV,IAAJ,CAASU,IAAI,CAACC,GAAd,EAAmBD,IAAI,CAACP,QAAxB,EAAkCO,IAAI,CAACN,KAAvC,EAA8CM,IAAI,CAACE,cAAnD,EAAmEF,IAAI,CAACG,YAAxE,EAAsFH,IAAI,CAACI,qBAA3F,CAAP;AACH;;AACgB,SAAVC,UAAU,CAACC,CAAD,EAAI;AACjB,QAAIC,MAAJ;;AACA,QAAI;AACAA,MAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAX,CAAT;AACH,KAFD,CAGA,OAAOI,CAAP,EAAU;AACN;AACH;;AACD,QAAIH,MAAM,CAACf,EAAX,EAAe;AACX,aAAO,IAAIF,IAAJ,CAASiB,MAAM,CAACf,EAAhB,EAAoBe,MAAM,CAACd,QAA3B,EAAqCc,MAAM,CAACb,KAA5C,EAAmDa,MAAM,CAACZ,aAA1D,EAAyEY,MAAM,CAACT,WAAhF,EAA6FS,MAAM,CAACV,mBAApG,CAAP;AACH;;AACD;AACH;;AACDc,EAAAA,eAAe,GAAG;AACd,WAAOH,IAAI,CAACI,SAAL,CAAe;AAClBnB,MAAAA,QAAQ,EAAE,KAAKA,QADG;AAElBC,MAAAA,KAAK,EAAE,KAAKA,KAFM;AAGlBC,MAAAA,aAAa,EAAE,KAAKA,aAHF;AAIlBH,MAAAA,EAAE,EAAE,KAAKA,EAJS;AAKlBM,MAAAA,WAAW,EAAE,KAAKA,WALA;AAMlBD,MAAAA,mBAAmB,EAAE,KAAKA;AANR,KAAf,CAAP;AAQH;;AAlCa","sourcesContent":["export class User {\n    constructor(id, accounts, email, emailVerified, phone, phoneNumberVerified) {\n        this.id = id;\n        this.accounts = accounts;\n        this.email = email;\n        this.emailVerified = emailVerified;\n        this.phoneNumber = phone;\n        this.phoneNumberVerified = phoneNumberVerified;\n    }\n    static fromJson(json) {\n        return new User(json.sub, json.accounts, json.email, json.email_verified, json.phone_number, json.phone_number_verified);\n    }\n    static fromString(s) {\n        let parsed;\n        try {\n            parsed = JSON.parse(s);\n        }\n        catch (e) {\n            return;\n        }\n        if (parsed.id) {\n            return new User(parsed.id, parsed.accounts, parsed.email, parsed.emailVerified, parsed.phoneNumber, parsed.phoneNumberVerified);\n        }\n        return;\n    }\n    toStorageString() {\n        return JSON.stringify({\n            accounts: this.accounts,\n            email: this.email,\n            emailVerified: this.emailVerified,\n            id: this.id,\n            phoneNumber: this.phoneNumber,\n            phoneNumberVerified: this.phoneNumberVerified,\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}