{"ast":null,"code":"var _jsxFileName = \"/Users/helen/fi/protocol-demo/frontend/src/components/Header.tsx\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport * as PropTypes from \"prop-types\";\nimport Blockie from \"./Blockie\";\nimport Banner from \"./Banner\";\nimport { ellipseAddress, getChainData } from \"../helpers/utilities\";\nimport { transitions } from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SHeader = styled.div`\n  margin-top: -1px;\n  margin-bottom: 1px;\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 16px;\n`;\n_c = SHeader;\nconst SActiveAccount = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-weight: 500;\n`;\n_c2 = SActiveAccount;\nconst SActiveChain = styled(SActiveAccount)`\n  flex-direction: column;\n  text-align: left;\n  align-items: flex-start;\n  & p {\n    font-size: 0.8em;\n    margin: 0;\n    padding: 0;\n  }\n  & p:nth-child(2) {\n    font-weight: bold;\n  }\n`;\n_c3 = SActiveChain;\nconst SBlockie = styled(Blockie)`\n  margin-right: 10px;\n`;\n_c4 = SBlockie;\nconst SAddress = styled.p`\n  transition: ${transitions.base};\n  font-weight: bold;\n  margin: ${({\n  connected\n}) => connected ? \"-2px auto 0.7em\" : \"0\"};\n`;\n_c5 = SAddress;\nconst SDisconnect = styled.div`\n  transition: ${transitions.button};\n  font-size: 12px;\n  font-family: monospace;\n  position: absolute;\n  right: 0;\n  top: 20px;\n  opacity: 0.7;\n  cursor: pointer;\n\n  opacity: ${({\n  connected\n}) => connected ? 1 : 0};\n  visibility: ${({\n  connected\n}) => connected ? \"visible\" : \"hidden\"};\n  pointer-events: ${({\n  connected\n}) => connected ? \"auto\" : \"none\"};\n\n  &:hover {\n    transform: translateY(-1px);\n    opacity: 0.5;\n  }\n`;\n_c6 = SDisconnect;\n\nconst Header = props => {\n  const {\n    connected,\n    address,\n    chainId,\n    killSession\n  } = props;\n  const chainData = chainId ? getChainData(chainId) : null;\n  return /*#__PURE__*/_jsxDEV(SHeader, { ...props,\n    children: [connected && chainData ? /*#__PURE__*/_jsxDEV(SActiveChain, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Connected to`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: chainData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), address && /*#__PURE__*/_jsxDEV(SActiveAccount, {\n      children: [/*#__PURE__*/_jsxDEV(SBlockie, {\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SAddress, {\n        connected: connected,\n        children: ellipseAddress(address)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SDisconnect, {\n        connected: connected,\n        onClick: killSession,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_c7 = Header;\nHeader.propTypes = {\n  killSession: PropTypes.func.isRequired,\n  address: PropTypes.string\n};\nexport default Header;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"SHeader\");\n$RefreshReg$(_c2, \"SActiveAccount\");\n$RefreshReg$(_c3, \"SActiveChain\");\n$RefreshReg$(_c4, \"SBlockie\");\n$RefreshReg$(_c5, \"SAddress\");\n$RefreshReg$(_c6, \"SDisconnect\");\n$RefreshReg$(_c7, \"Header\");","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/src/components/Header.tsx"],"names":["React","styled","PropTypes","Blockie","Banner","ellipseAddress","getChainData","transitions","SHeader","div","SActiveAccount","SActiveChain","SBlockie","SAddress","p","base","connected","SDisconnect","button","Header","props","address","chainId","killSession","chainData","name","propTypes","func","isRequired","string"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,sBAA7C;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,O;AAWN,MAAME,cAAc,GAAGT,MAAM,CAACQ,GAAI;AAClC;AACA;AACA;AACA;AACA,CALA;MAAMC,c;AAON,MAAMC,YAAY,GAAGV,MAAM,CAACS,cAAD,CAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMC,Y;AAcN,MAAMC,QAAQ,GAAGX,MAAM,CAACE,OAAD,CAAU;AACjC;AACA,CAFA;MAAMS,Q;AAQN,MAAMC,QAAQ,GAAGZ,MAAM,CAACa,CAAgB;AACxC,gBAAgBP,WAAW,CAACQ,IAAK;AACjC;AACA,YAAY,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,iBAAH,GAAuB,GAAK;AACrE,CAJA;MAAMH,Q;AAMN,MAAMI,WAAW,GAAGhB,MAAM,CAACQ,GAAkB;AAC7C,gBAAgBF,WAAW,CAACW,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,CAAH,GAAO,CAAG;AACpD,gBAAgB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,SAAH,GAAe,QAAU;AACtE,oBAAoB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,MAAH,GAAY,MAAQ;AACrE;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMC,W;;AA2BN,MAAME,MAAM,GAAIC,KAAD,IAAyB;AACtC,QAAM;AAAEJ,IAAAA,SAAF;AAAaK,IAAAA,OAAb;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,MAA+CH,KAArD;AACA,QAAMI,SAAS,GAAGF,OAAO,GAAGhB,YAAY,CAACgB,OAAD,CAAf,GAA2B,IAApD;AACA,sBACE,QAAC,OAAD,OAAaF,KAAb;AAAA,eACGJ,SAAS,IAAIQ,SAAb,gBACC,QAAC,YAAD;AAAA,8BACE;AAAA,kBAAK;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIA,SAAS,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAMC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAPJ,EASGJ,OAAO,iBACN,QAAC,cAAD;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEL,SAArB;AAAA,kBAAiCX,cAAc,CAACgB,OAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEL,SAAxB;AAAmC,QAAA,OAAO,EAAEO,WAA5C;AAAA,kBACG;AADH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxBD;;MAAMJ,M;AA0BNA,MAAM,CAACO,SAAP,GAAmB;AACjBH,EAAAA,WAAW,EAAErB,SAAS,CAACyB,IAAV,CAAeC,UADX;AAEjBP,EAAAA,OAAO,EAAEnB,SAAS,CAAC2B;AAFF,CAAnB;AAKA,eAAeV,MAAf","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport * as PropTypes from \"prop-types\";\nimport Blockie from \"./Blockie\";\nimport Banner from \"./Banner\";\nimport { ellipseAddress, getChainData } from \"../helpers/utilities\";\nimport { transitions } from \"../styles\";\n\nconst SHeader = styled.div`\n  margin-top: -1px;\n  margin-bottom: 1px;\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 16px;\n`;\n\nconst SActiveAccount = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-weight: 500;\n`;\n\nconst SActiveChain = styled(SActiveAccount)`\n  flex-direction: column;\n  text-align: left;\n  align-items: flex-start;\n  & p {\n    font-size: 0.8em;\n    margin: 0;\n    padding: 0;\n  }\n  & p:nth-child(2) {\n    font-weight: bold;\n  }\n`;\n\nconst SBlockie = styled(Blockie)`\n  margin-right: 10px;\n`;\n\ninterface IHeaderStyle {\n  connected: boolean;\n}\n\nconst SAddress = styled.p<IHeaderStyle>`\n  transition: ${transitions.base};\n  font-weight: bold;\n  margin: ${({ connected }) => (connected ? \"-2px auto 0.7em\" : \"0\")};\n`;\n\nconst SDisconnect = styled.div<IHeaderStyle>`\n  transition: ${transitions.button};\n  font-size: 12px;\n  font-family: monospace;\n  position: absolute;\n  right: 0;\n  top: 20px;\n  opacity: 0.7;\n  cursor: pointer;\n\n  opacity: ${({ connected }) => (connected ? 1 : 0)};\n  visibility: ${({ connected }) => (connected ? \"visible\" : \"hidden\")};\n  pointer-events: ${({ connected }) => (connected ? \"auto\" : \"none\")};\n\n  &:hover {\n    transform: translateY(-1px);\n    opacity: 0.5;\n  }\n`;\n\ninterface IHeaderProps {\n  killSession: () => void;\n  connected: boolean;\n  address: string;\n  chainId: number;\n}\n\nconst Header = (props: IHeaderProps) => {\n  const { connected, address, chainId, killSession } = props;\n  const chainData = chainId ? getChainData(chainId) : null;\n  return (\n    <SHeader {...props}>\n      {connected && chainData ? (\n        <SActiveChain>\n          <p>{`Connected to`}</p>\n          <p>{chainData.name}</p>\n        </SActiveChain>\n      ) : (\n        <Banner />\n      )}\n      {address && (\n        <SActiveAccount>\n          <SBlockie address={address} />\n          <SAddress connected={connected}>{ellipseAddress(address)}</SAddress>\n          <SDisconnect connected={connected} onClick={killSession}>\n            {\"Disconnect\"}\n          </SDisconnect>\n        </SActiveAccount>\n      )}\n    </SHeader>\n  );\n};\n\nHeader.propTypes = {\n  killSession: PropTypes.func.isRequired,\n  address: PropTypes.string,\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}