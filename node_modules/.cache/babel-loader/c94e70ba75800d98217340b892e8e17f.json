{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BasicQueryStringUtils = void 0;\n\nvar BasicQueryStringUtils =\n/** @class */\nfunction () {\n  function BasicQueryStringUtils() {}\n\n  BasicQueryStringUtils.prototype.parse = function (input, useHash) {\n    if (useHash) {\n      return this.parseQueryString(input.hash);\n    } else {\n      return this.parseQueryString(input.search);\n    }\n  };\n\n  BasicQueryStringUtils.prototype.parseQueryString = function (query) {\n    var result = {}; // if anything starts with ?, # or & remove it\n\n    query = query.trim().replace(/^(\\?|#|&)/, '');\n    var params = query.split('&');\n\n    for (var i = 0; i < params.length; i += 1) {\n      var param = params[i]; // looks something like a=b\n\n      var parts = param.split('=');\n\n      if (parts.length >= 2) {\n        var key = decodeURIComponent(parts.shift());\n        var value = parts.length > 0 ? parts.join('=') : null;\n\n        if (value) {\n          result[key] = decodeURIComponent(value);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  BasicQueryStringUtils.prototype.stringify = function (input) {\n    var encoded = [];\n\n    for (var key in input) {\n      if (input.hasOwnProperty(key) && input[key]) {\n        encoded.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(input[key]));\n      }\n    }\n\n    return encoded.join('&');\n  };\n\n  return BasicQueryStringUtils;\n}();\n\nexports.BasicQueryStringUtils = BasicQueryStringUtils;","map":{"version":3,"sources":["../src/query_string_utils.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;AAYG;;;;;;;AAcH,IAAA,qBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,qBAAA,GAAA,CAqCC;;AApCC,EAAA,qBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,KAAN,EAA2B,OAA3B,EAA4C;AAC1C,QAAI,OAAJ,EAAa;AACX,aAAO,KAAK,gBAAL,CAAsB,KAAK,CAAC,IAA5B,CAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAK,gBAAL,CAAsB,KAAK,CAAC,MAA5B,CAAP;AACD;AACF,GAND;;AAQA,EAAA,qBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,KAAjB,EAA8B;AAC5B,QAAI,MAAM,GAAc,EAAxB,CAD4B,CAE5B;;AACA,IAAA,KAAK,GAAG,KAAK,CAAC,IAAN,GAAa,OAAb,CAAqB,WAArB,EAAkC,EAAlC,CAAR;AACA,QAAI,MAAM,GAAG,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAb;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,IAAI,CAAxC,EAA2C;AACzC,UAAI,KAAK,GAAG,MAAM,CAAC,CAAD,CAAlB,CADyC,CACjB;;AACxB,UAAI,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAZ;;AACA,UAAI,KAAK,CAAC,MAAN,IAAgB,CAApB,EAAuB;AACrB,YAAI,GAAG,GAAG,kBAAkB,CAAC,KAAK,CAAC,KAAN,EAAD,CAA5B;AACA,YAAI,KAAK,GAAG,KAAK,CAAC,MAAN,GAAe,CAAf,GAAmB,KAAK,CAAC,IAAN,CAAW,GAAX,CAAnB,GAAqC,IAAjD;;AACA,YAAI,KAAJ,EAAW;AACT,UAAA,MAAM,CAAC,GAAD,CAAN,GAAc,kBAAkB,CAAC,KAAD,CAAhC;AACD;AACF;AACF;;AACD,WAAO,MAAP;AACD,GAjBD;;AAmBA,EAAA,qBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,KAAV,EAA0B;AACxB,QAAI,OAAO,GAAa,EAAxB;;AACA,SAAK,IAAI,GAAT,IAAgB,KAAhB,EAAuB;AACrB,UAAI,KAAK,CAAC,cAAN,CAAqB,GAArB,KAA6B,KAAK,CAAC,GAAD,CAAtC,EAA6C;AAC3C,QAAA,OAAO,CAAC,IAAR,CAAgB,kBAAkB,CAAC,GAAD,CAAlB,GAAuB,GAAvB,GAA2B,kBAAkB,CAAC,KAAK,CAAC,GAAD,CAAN,CAA7D;AACD;AACF;;AACD,WAAO,OAAO,CAAC,IAAR,CAAa,GAAb,CAAP;AACD,GARD;;AASF,SAAA,qBAAA;AAAC,CArCD,EAAA;;AAAa,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourcesContent":["/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LocationLike, StringMap} from './types';\n\n\n/**\n * Query String Utilities.\n */\nexport interface QueryStringUtils {\n  stringify(input: StringMap): string;\n  parse(query: LocationLike, useHash?: boolean): StringMap;\n  parseQueryString(query: string): StringMap;\n}\n\nexport class BasicQueryStringUtils implements QueryStringUtils {\n  parse(input: LocationLike, useHash?: boolean) {\n    if (useHash) {\n      return this.parseQueryString(input.hash);\n    } else {\n      return this.parseQueryString(input.search);\n    }\n  }\n\n  parseQueryString(query: string): StringMap {\n    let result: StringMap = {};\n    // if anything starts with ?, # or & remove it\n    query = query.trim().replace(/^(\\?|#|&)/, '');\n    let params = query.split('&');\n    for (let i = 0; i < params.length; i += 1) {\n      let param = params[i];  // looks something like a=b\n      let parts = param.split('=');\n      if (parts.length >= 2) {\n        let key = decodeURIComponent(parts.shift()!);\n        let value = parts.length > 0 ? parts.join('=') : null;\n        if (value) {\n          result[key] = decodeURIComponent(value);\n        }\n      }\n    }\n    return result;\n  }\n\n  stringify(input: StringMap) {\n    let encoded: string[] = [];\n    for (let key in input) {\n      if (input.hasOwnProperty(key) && input[key]) {\n        encoded.push(`${encodeURIComponent(key)}=${encodeURIComponent(input[key])}`)\n      }\n    }\n    return encoded.join('&');\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}