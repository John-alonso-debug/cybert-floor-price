{"ast":null,"code":"var _jsxFileName = \"/Users/helen/fi/protocol-demo/frontend/src/components/AccountAssets.tsx\";\nimport * as React from \"react\";\nimport Column from \"./Column\";\nimport AssetRow from \"./AssetRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountAssets = props => {\n  const {\n    assets,\n    chainId\n  } = props;\n  const defaultNativeCurrency = chainId === 100 ? {\n    contractAddress: \"\",\n    symbol: \"xDAI\",\n    name: \"xDAI\",\n    decimals: \"18\",\n    balance: \"0\"\n  } : {\n    contractAddress: \"\",\n    name: \"Ethereum\",\n    symbol: \"ETH\",\n    decimals: \"18\",\n    balance: \"0\"\n  };\n  let nativeCurrency = defaultNativeCurrency;\n  let tokens = [];\n\n  if (assets && assets.length) {\n    const filteredNativeCurrency = assets.filter(asset => asset && asset.symbol ? asset.symbol.toLowerCase() === nativeCurrency.symbol.toLowerCase() : false);\n    nativeCurrency = filteredNativeCurrency && filteredNativeCurrency.length ? filteredNativeCurrency[0] : defaultNativeCurrency;\n    tokens = assets.filter(asset => asset && asset.symbol ? asset.symbol.toLowerCase() !== nativeCurrency.symbol.toLowerCase() : false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Column, {\n    center: true,\n    children: [/*#__PURE__*/_jsxDEV(AssetRow, {\n      asset: nativeCurrency\n    }, nativeCurrency.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), tokens.map(token => /*#__PURE__*/_jsxDEV(AssetRow, {\n      asset: token\n    }, token.symbol, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AccountAssets;\nexport default AccountAssets;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountAssets\");","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/src/components/AccountAssets.tsx"],"names":["React","Column","AssetRow","AccountAssets","props","assets","chainId","defaultNativeCurrency","contractAddress","symbol","name","decimals","balance","nativeCurrency","tokens","length","filteredNativeCurrency","filter","asset","toLowerCase","map","token"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAgB;AACpC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBF,KAA5B;AACA,QAAMG,qBAAiC,GACrCD,OAAO,KAAK,GAAZ,GACI;AACEE,IAAAA,eAAe,EAAE,EADnB;AAEEC,IAAAA,MAAM,EAAE,MAFV;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIEC,IAAAA,QAAQ,EAAE,IAJZ;AAKEC,IAAAA,OAAO,EAAE;AALX,GADJ,GAQI;AACEJ,IAAAA,eAAe,EAAE,EADnB;AAEEE,IAAAA,IAAI,EAAE,UAFR;AAGED,IAAAA,MAAM,EAAE,KAHV;AAIEE,IAAAA,QAAQ,EAAE,IAJZ;AAKEC,IAAAA,OAAO,EAAE;AALX,GATN;AAiBA,MAAIC,cAA0B,GAAGN,qBAAjC;AACA,MAAIO,MAAoB,GAAG,EAA3B;;AACA,MAAIT,MAAM,IAAIA,MAAM,CAACU,MAArB,EAA6B;AAC3B,UAAMC,sBAAsB,GAAGX,MAAM,CAACY,MAAP,CAAeC,KAAD,IAC3CA,KAAK,IAAIA,KAAK,CAACT,MAAf,GACIS,KAAK,CAACT,MAAN,CAAaU,WAAb,OAA+BN,cAAc,CAACJ,MAAf,CAAsBU,WAAtB,EADnC,GAEI,KAHyB,CAA/B;AAKAN,IAAAA,cAAc,GACZG,sBAAsB,IAAIA,sBAAsB,CAACD,MAAjD,GACIC,sBAAsB,CAAC,CAAD,CAD1B,GAEIT,qBAHN;AAIAO,IAAAA,MAAM,GAAGT,MAAM,CAACY,MAAP,CAAeC,KAAD,IACrBA,KAAK,IAAIA,KAAK,CAACT,MAAf,GACIS,KAAK,CAACT,MAAN,CAAaU,WAAb,OAA+BN,cAAc,CAACJ,MAAf,CAAsBU,WAAtB,EADnC,GAEI,KAHG,CAAT;AAKD;;AACD,sBACE,QAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA,4BACE,QAAC,QAAD;AAAoC,MAAA,KAAK,EAAEN;AAA3C,OAAeA,cAAc,CAACH,IAA9B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGI,MAAM,CAACM,GAAP,CAAYC,KAAD,iBACV,QAAC,QAAD;AAA6B,MAAA,KAAK,EAAEA;AAApC,OAAeA,KAAK,CAACZ,MAArB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7CD;;KAAMN,a;AA+CN,eAAeA,aAAf","sourcesContent":["import * as React from \"react\";\nimport Column from \"./Column\";\nimport AssetRow from \"./AssetRow\";\nimport { IAssetData } from \"../helpers/types\";\n\nconst AccountAssets = (props: any) => {\n  const { assets, chainId } = props;\n  const defaultNativeCurrency: IAssetData =\n    chainId === 100\n      ? {\n          contractAddress: \"\",\n          symbol: \"xDAI\",\n          name: \"xDAI\",\n          decimals: \"18\",\n          balance: \"0\",\n        }\n      : {\n          contractAddress: \"\",\n          name: \"Ethereum\",\n          symbol: \"ETH\",\n          decimals: \"18\",\n          balance: \"0\",\n        };\n\n  let nativeCurrency: IAssetData = defaultNativeCurrency;\n  let tokens: IAssetData[] = [];\n  if (assets && assets.length) {\n    const filteredNativeCurrency = assets.filter((asset: IAssetData) =>\n      asset && asset.symbol\n        ? asset.symbol.toLowerCase() === nativeCurrency.symbol.toLowerCase()\n        : false\n    );\n    nativeCurrency =\n      filteredNativeCurrency && filteredNativeCurrency.length\n        ? filteredNativeCurrency[0]\n        : defaultNativeCurrency;\n    tokens = assets.filter((asset: IAssetData) =>\n      asset && asset.symbol\n        ? asset.symbol.toLowerCase() !== nativeCurrency.symbol.toLowerCase()\n        : false\n    );\n  }\n  return (\n    <Column center>\n      <AssetRow key={nativeCurrency.name} asset={nativeCurrency} />\n      {tokens.map((token) => (\n        <AssetRow key={token.symbol} asset={token} />\n      ))}\n    </Column>\n  );\n};\n\nexport default AccountAssets;\n"]},"metadata":{},"sourceType":"module"}