{"ast":null,"code":"var _jsxFileName = \"/Users/helen/fi/protocol-demo/frontend/src/App.tsx\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\"; // @ts-ignore\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"; // @ts-ignore\n\nimport Fortmatic from \"fortmatic\";\nimport Torus from \"@toruslabs/torus-embed\";\nimport Authereum from \"authereum\";\nimport { Bitski } from \"bitski\";\nimport Button from \"./components/Button\";\nimport Column from \"./components/Column\";\nimport Wrapper from \"./components/Wrapper\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport ModalResult from \"./components/ModalResult\";\nimport AccountAssets from \"./components/AccountAssets\";\nimport ConnectButton from \"./components/ConnectButton\";\nimport { getChainData } from \"./helpers/utilities\";\nimport { fonts } from \"./styles\";\nimport { ethers, utils } from 'ethers';\nimport { convertAmountFromRawNumber } from \"./helpers/bignumber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StrategyCurve3CRVv2_ABI = require(\"./abi/StrategyCurve3CRVv2.json\");\n\nconst ControllerV4_ABI = require(\"./abi/ControllerV4.json\");\n\nconst Instabrine_ABI = require(\"./abi/Instabrine.json\");\n\nconst USDC = \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\";\nconst USDT = \"0xdac17f958d2ee523a2206206994597c13d831ec7\";\nconst DAI = \"0x6b175474e89094c44da98b954eedeac495271d0f\";\nconst pDAI = \"0x6949Bb624E8e8A90F87cD2058139fcd77D2F3F87\";\nconst three_crv = \"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\";\nconst Three_gauge = \"0xbFcF63294aD7105dEa65aA58F8AE5BE2D9d0952A\";\nconst three_pool = \"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7\";\nconst pool3 = \"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\";\nconst CRV = \"0xD533a949740bb3306d119CC777fa900bA034cd52\";\nconst Vaults = \"0xB54aE04A1472FCdd0f3C122cF716c56415F4D853\";\nconst StrategyCurve3CRVv2 = \"0x6E7622518572571aFf70c66440B82f3Dcfef1C5D\";\nconst ControllerV4 = \"0x4801F0559606C4cfDe29360D82A3836Aa2fa915d\";\nconst Instabrine = \"0x36B466533d6bfF320E05Be310803e8b906eF9f79\";\nconst Invite = \"0x4B63e9C4f245fE52Cb693a27a746949FDb91d510\";\nconst univ2Router2 = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nconst inviter = \"0x7dd599A6B01B4C97D98117f8675DE47B6Ef0Bb5A\";\nconst {\n  parseUnits\n} = ethers.utils;\nconst {\n  Zero,\n  MaxUint256\n} = ethers.constants;\nconst {\n  parseEther\n} = ethers.utils;\nconst SLayout = styled.div`\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  text-align: center;\n`;\n_c = SLayout;\nconst SContent = styled(Wrapper)`\n  width: 100%;\n  height: 100%;\n  padding: 0 16px;\n`;\n_c2 = SContent;\nconst SContainer = styled.div`\n  height: 100%;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  word-break: break-word;\n`;\n_c3 = SContainer;\nconst SLanding = styled(Column)`\n  height: 600px;\n`;\n_c4 = SLanding;\nconst SModalContainer = styled.div`\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n_c5 = SModalContainer;\nconst SModalTitle = styled.div`\n  margin: 1em 0;\n  font-size: 20px;\n  font-weight: 700;\n`;\n_c6 = SModalTitle;\nconst SModalParagraph = styled.p`\n  margin-top: 30px;\n`; // @ts-ignore\n\n_c7 = SModalParagraph;\nconst SBalances = styled(SLanding)`\n  height: 100%;\n  & h3 {\n    padding-top: 30px;\n  }\n`;\n_c8 = SBalances;\nconst STestButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n_c9 = STestButtonContainer;\nconst STestButton = styled(Button)`\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  height: 44px;\n  width: 100%;\n  max-width: 175px;\n  margin: 12px;\n`;\n_c10 = STestButton;\nconst INITIAL_STATE = {\n  fetching: false,\n  address: \"\",\n  web3: null,\n  provider: null,\n  connected: false,\n  chainId: 1,\n  networkId: 1,\n  assets: [],\n  assets2: [],\n  showModal: false,\n  pendingRequest: false,\n  result: null\n};\n\nfunction initWeb3(provider) {\n  const web3 = new Web3(provider);\n  web3.eth.extend({\n    methods: [{\n      name: \"chainId\",\n      call: \"eth_chainId\",\n      outputFormatter: web3.utils.hexToNumber\n    }]\n  });\n  return web3;\n}\n\nclass App extends React.Component {\n  // @ts-ignore\n  constructor(props) {\n    super(props);\n    this.web3Modal = void 0;\n    this.state = void 0;\n    this.claim = \"0x5aa37930cbe5f4b04d617f71f78abc6c21be4cc0\";\n\n    this.onConnect = async () => {\n      const provider = await this.web3Modal.connect();\n      await this.subscribeProvider(provider);\n      const web3 = initWeb3(provider);\n      const accounts = await web3.eth.getAccounts();\n      const address = accounts[0];\n      const networkId = await web3.eth.net.getId();\n      const chainId = await web3.eth.chainId();\n      console.log(`chainId is ${chainId}  networkId ${networkId}`);\n      await this.setState({\n        web3,\n        provider,\n        connected: true,\n        address,\n        chainId,\n        networkId\n      });\n      await this.getAccountAssets(provider);\n    };\n\n    this.subscribeProvider = async provider => {\n      if (!provider.on) {\n        return;\n      }\n\n      provider.on(\"close\", () => this.resetApp());\n      provider.on(\"accountsChanged\", async accounts => {\n        await this.setState({\n          address: accounts[0]\n        });\n        await this.getAccountAssets(provider);\n      });\n      provider.on(\"chainChanged\", async chainId => {\n        const {\n          web3\n        } = this.state;\n        const networkId = await web3.eth.net.getId();\n        await this.setState({\n          chainId,\n          networkId\n        });\n        await this.getAccountAssets(provider);\n      });\n      provider.on(\"networkChanged\", async networkId => {\n        const {\n          web3\n        } = this.state;\n        const chainId = await web3.eth.chainId();\n        await this.setState({\n          chainId,\n          networkId\n        });\n        await this.getAccountAssets(provider);\n      });\n    };\n\n    this.getNetwork = () => getChainData(this.state.chainId).network;\n\n    this.getProviderOptions = () => {\n      const providerOptions = {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId: process.env.REACT_APP_INFURA_ID\n          }\n        },\n        torus: {\n          package: Torus\n        },\n        fortmatic: {\n          package: Fortmatic,\n          options: {\n            key: process.env.REACT_APP_FORTMATIC_KEY\n          }\n        },\n        authereum: {\n          package: Authereum\n        },\n        bitski: {\n          package: Bitski,\n          options: {\n            clientId: process.env.REACT_APP_BITSKI_CLIENT_ID,\n            callbackUrl: window.location.href + \"bitski-callback.html\"\n          }\n        }\n      };\n      return providerOptions;\n    };\n\n    this.getAccountAssets = async provider => {\n      const {\n        address,\n        chainId\n      } = this.state;\n      this.setState({\n        fetching: false\n      });\n\n      try {\n        const prov = new ethers.providers.Web3Provider(provider);\n        let balance = await prov.getBalance(address);\n        console.log('[wa]:', balance.toString(), \",\", balance);\n        let assets = [];\n        let assets2 = [];\n        let ethAsset = {\n          \"symbol\": \"ETH\",\n          \"name\": \"Ether\",\n          \"decimals\": \"18\",\n          \"contractAddress\": \"\",\n          \"balance\": balance\n        };\n        assets.push(ethAsset); // A Human-Readable ABI; any supported ABI format could be used\n\n        this.setState({\n          fetching: false,\n          assets\n        });\n      } catch (error) {\n        console.error(error); // tslint:disable-line\n\n        this.setState({\n          fetching: false\n        });\n      }\n    };\n\n    this.toggleModal = () => this.setState({\n      showModal: !this.state.showModal\n    });\n\n    this.setController = async () => {\n      let web3 = new Web3(Web3.givenProvider);\n      const accounts = await web3.eth.getAccounts();\n      let controller = new web3.eth.Contract(ControllerV4_ABI, ControllerV4);\n      let rep = await controller.methods.setValut(three_crv, Vaults).send({\n        from: accounts[0]\n      });\n      console.log(`controller.methods.setJar  response :`, JSON.stringify(rep));\n      rep = await controller.methods.approveStrategy(three_crv, StrategyCurve3CRVv2).send({\n        from: accounts[0]\n      });\n      console.log(`approveStrategy rep is ${JSON.stringify(rep)}`);\n      rep = await controller.methods.setStrategy(three_crv, StrategyCurve3CRVv2).send({\n        from: accounts[0]\n      });\n      console.log(`setStrategy rep is ${JSON.stringify(rep)}`);\n      rep = await controller.methods.setInvite(Invite, Vaults).send({\n        from: accounts[0]\n      });\n      console.log(`controller.setInvite  response :`, JSON.stringify(rep));\n    };\n\n    this.setStragy = async () => {\n      let web3 = new Web3(Web3.givenProvider);\n      const accounts = await web3.eth.getAccounts();\n      let stragy = new web3.eth.Contract(StrategyCurve3CRVv2_ABI, StrategyCurve3CRVv2); //设置保留的crv，之后会除以10000，设置1000，等于十分之一\n\n      let rep = await stragy.methods.setKeepCRV(1000).send({\n        from: accounts[0]\n      });\n      console.log(`stragy.methods.setKeepCRV(1000)  response :`, JSON.stringify(rep));\n    };\n\n    this.testBlockNumber = async () => {\n      let web3 = new Web3(Web3.givenProvider);\n      let rep = await web3.eth.getBlockNumber();\n      console.log(`setStrategy rep is ${JSON.stringify(rep)}`);\n      const accounts = await web3.eth.getAccounts();\n      const provider = new ethers.providers.JsonRpcProvider();\n      const signer = provider.getSigner();\n    };\n\n    this.testApprove = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function approve(address spender, uint256 amount) returns (bool)\"];\n      const test1 = new ethers.Contract(three_crv, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let rep = await test1.approve(Vaults, utils.parseUnits('0', 18).toString());\n      rep = await test1.approve(Vaults, utils.parseUnits('1000000000000', 18).toString());\n      console.log(`approve DAI rep is ${JSON.stringify(rep)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testDeposit = async () => {\n      // let web3 = new Web3(Web3.givenProvider);\n      // const accounts = await web3.eth.getAccounts();\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \" function deposit(uint256 _amount) public\", \"function totalSupply() view returns (uint256)\", \"function balance() public view returns (uint256)\"];\n      const test1 = new ethers.Contract(Vaults, abi, prov.getSigner());\n      console.log('xxx:', test1);\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let balance = await test1.balance();\n      console.log(`test1.balance  response :`, JSON.stringify(balance.toString())); // const rep = await test1.totalSupply()\n\n      let rep = await test1.deposit(utils.parseUnits('2800', 18).toString());\n      console.log(`jar.methods.deposi  response :`, JSON.stringify(rep));\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testBalance = async () => {\n      let assets2 = [];\n      let web3 = new Web3(Web3.givenProvider);\n      const accounts = await web3.eth.getAccounts();\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function deposit(uint256 _amount) public\", \"function totalSupply() view returns (uint256)\", \"function balanceOf(address account) external view returns (uint256)\", \"function balance() public view returns (uint256)\", \"function available() public view returns (uint256)\", \"function balanceOfPool() public override view returns (uint256)\"];\n      const threecrv = new ethers.Contract(three_crv, abi, prov.getSigner());\n      const jar = new ethers.Contract(Vaults, abi, prov.getSigner());\n      const controller = new ethers.Contract(ControllerV4, abi, prov.getSigner());\n      const threegauge = new ethers.Contract(Three_gauge, abi, prov.getSigner());\n      const stragy = new ethers.Contract(StrategyCurve3CRVv2, abi, prov.getSigner());\n      const usdc = new ethers.Contract(USDC, abi, prov.getSigner());\n      const usdt = new ethers.Contract(USDT, abi, prov.getSigner());\n      const dai = new ethers.Contract(DAI, abi, prov.getSigner());\n      const threepool = new ethers.Contract(three_pool, abi, prov.getSigner());\n      const invite = new ethers.Contract(Invite, abi, prov.getSigner());\n      const crv = new ethers.Contract(CRV, abi, prov.getSigner());\n      this.toggleModal();\n      this.setState({\n        pendingRequest: true\n      }); // let threepool_bal = await threepool.balanceOf(StrategyCurve3CRVv2)\n      // let threepool_bal_p = convertAmountFromRawNumber(threepool_bal.toString(), 18)\n      // console.log(`threepool_bal_p is ${threepool_bal_p}`)\n      //\n      //\n      // const ethAsset113 = {\n      //     \"symbol\": \"threepool_bal\",\n      //     \"name\": \"threepool_bal\",\n      //     \"decimals\": \"18\",\n      //     \"contractAddress\": three_pool,\n      //     \"balance\": threepool_bal\n      // };\n      // assets2.push(ethAsset113);\n\n      let crv_bal = await crv.balanceOf(StrategyCurve3CRVv2);\n      let crv_bal_p = convertAmountFromRawNumber(crv_bal.toString(), 18);\n      console.log(`crv_bal_p is ${crv_bal_p}`);\n      const ethAsset115 = {\n        \"symbol\": \"Crv\",\n        \"name\": \"Crv-Stragy\",\n        \"decimals\": \"18\",\n        \"contractAddress\": CRV,\n        \"balance\": crv_bal\n      };\n      assets2.push(ethAsset115);\n      let crv_bal1 = await crv.balanceOf(ControllerV4);\n      let crv_bal_p1 = convertAmountFromRawNumber(crv_bal1.toString(), 18);\n      console.log(`crv_bal_p  is ${crv_bal_p1}`);\n      const ethAsset116 = {\n        \"symbol\": \"Crv-c\",\n        \"name\": \"Crv-Controller\",\n        \"decimals\": \"18\",\n        \"contractAddress\": CRV,\n        \"balance\": crv_bal1\n      };\n      assets2.push(ethAsset116);\n      let threecrv_bal = await threecrv.balanceOf(accounts[0]); //threecrv_bal = convertAmountFromRawNumber(threecrv_bal.toString(), 18)\n\n      console.log(`threecrv_bal is ${threecrv_bal}`);\n      const ethAsset = {\n        \"symbol\": \"3Crv\",\n        \"name\": \"3Crv\",\n        \"decimals\": \"18\",\n        \"contractAddress\": three_crv,\n        \"balance\": threecrv_bal\n      };\n      assets2.push(ethAsset);\n      let dai_bal = await dai.balanceOf(accounts[0]);\n      let dai_bal_p = convertAmountFromRawNumber(dai_bal.toString(), 6);\n      const ethAsset110 = {\n        \"symbol\": \"DAI-account\",\n        \"name\": \"DAI-account\",\n        \"decimals\": \"18\",\n        \"contractAddress\": DAI,\n        \"balance\": dai_bal\n      };\n      assets2.push(ethAsset110);\n      let usdc_bal = await usdc.balanceOf(accounts[0]);\n      let usdc_bal_p = convertAmountFromRawNumber(usdc_bal.toString(), 6);\n      const ethAsset111 = {\n        \"symbol\": \"USDC-account\",\n        \"name\": \"USDC-account\",\n        \"decimals\": \"6\",\n        \"contractAddress\": USDC,\n        \"balance\": usdc_bal\n      };\n      assets2.push(ethAsset111);\n      let usdt_bal = await usdt.balanceOf(accounts[0]);\n      let usdt_bal_p = convertAmountFromRawNumber(usdt_bal.toString(), 6);\n      const ethAsset112 = {\n        \"symbol\": \"USDT-account\",\n        \"name\": \"USDT-account\",\n        \"decimals\": \"6\",\n        \"contractAddress\": USDT,\n        \"balance\": usdt_bal\n      };\n      assets2.push(ethAsset112);\n      console.log(`account usdt: ${usdt_bal_p},usdc: ${usdc_bal_p},dai: ${dai_bal_p}`);\n      let jar_bal = await threecrv.balanceOf(Vaults); //jar_bal = convertAmountFromRawNumber(jar_bal.toString(), 18)\n\n      const ethAsset1 = {\n        \"symbol\": \"3Crv-Jar\",\n        \"name\": \"3Crv-Jar\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": jar_bal\n      };\n      assets2.push(ethAsset1);\n      let invite_bal = await threecrv.balanceOf(Invite); //jar_bal = convertAmountFromRawNumber(jar_bal.toString(), 18)\n\n      const ethAsset1111 = {\n        \"symbol\": \"3Crv-Invite\",\n        \"name\": \"3Crv-Invite\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": invite_bal\n      };\n      assets2.push(ethAsset1111);\n      let p3crv_bal = await jar.balanceOf(accounts[0]); //jar_bal = convertAmountFromRawNumber(jar_bal.toString(), 18)\n\n      const ethAsset10 = {\n        \"symbol\": \"p3crv_bal\",\n        \"name\": \"p3crv_bal\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": p3crv_bal\n      };\n      assets2.push(ethAsset10);\n      let available = await jar.available(); // available = convertAmountFromRawNumber(available.toString(), 18)\n\n      const ethAsset3 = {\n        \"symbol\": \"3Crv-jar.available\",\n        \"name\": \"3Crv-jar.available\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": available\n      };\n      assets2.push(ethAsset3);\n      let balance = await jar.balance(); // balance = convertAmountFromRawNumber(balance.toString(), 18)\n\n      const ethAsset4 = {\n        \"symbol\": \"3Crv-jar.jar.balance\",\n        \"name\": \"3Crv-jar.jar.balance\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": balance\n      };\n      assets2.push(ethAsset4);\n      let strage1 = await threegauge.balanceOf(StrategyCurve3CRVv2); // balance = convertAmountFromRawNumber(balance.toString(), 18)\n\n      const ethAsset6 = {\n        \"symbol\": \"guage-3crv-stragy.balance\",\n        \"name\": \"guage-3crv-stragy.balance\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": strage1\n      };\n      assets2.push(ethAsset6);\n      let strage2 = await threecrv.balanceOf(StrategyCurve3CRVv2); // balance = convertAmountFromRawNumber(balance.toString(), 18)\n\n      const ethAsset7 = {\n        \"symbol\": \"3crv-stragy.balance\",\n        \"name\": \"3crv-stragy.balance\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": strage2\n      };\n      assets2.push(ethAsset7);\n      let guage = await threegauge.balanceOf(ControllerV4); // balance = convertAmountFromRawNumber(balance.toString(), 18)\n\n      const ethAsset5 = {\n        \"symbol\": \"guage-3crv-controller.balance\",\n        \"name\": \"guage-3crv-controller.balance\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": guage\n      };\n      assets2.push(ethAsset5);\n      let balance_controller = await controller.balanceOf(three_crv);\n      balance_controller = convertAmountFromRawNumber(balance_controller.toString(), 18);\n      const ethAsset2 = {\n        \"symbol\": \"3Crv-controller\",\n        \"name\": \"3Crv-controller\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": balance_controller\n      };\n      assets2.push(ethAsset2); // console.log(`jar.methods.testController  response :`,JSON.stringify(rep.toString()))\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null,\n        assets2\n      });\n    };\n\n    this.testWithdraw = async () => {\n      // let web3 = new Web3(Web3.givenProvider);\n      // const accounts = await web3.eth.getAccounts();\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function withdrawAll() external\", \" function withdraw(uint256 _shares) public\"];\n      const test1 = new ethers.Contract(Vaults, abi, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      }); // await test1.withdraw(utils.parseUnits('100', 18).toString())\n\n      const rep = await test1.withdrawAll(); // console.log(`jar.methods.withdrawAll  response :`, JSON.stringify(rep))\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testEarn = async () => {\n      let min = 100; //最小的crv 个数\n      // let web3 = new Web3(Web3.givenProvider);\n      // const accounts = await web3.eth.getAccounts();\n\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      // \"function earn() public\",\n      \"function earn(address _token, uint256 _amount) public\", \" function balance() public view returns (uint256)\", \"function available() public view returns (uint256)\", \"function balanceOf(address _token) external view returns (uint256)\", \"function approve(address spender, uint256 amount) returns (bool)\", \"function approveStrategy(address _token, address _strategy) public\", \"function deposit() public override\", \"function totalSupply() view returns (uint256)\"];\n      const abi1 = [// Authenticated Functions\n      \"function earn() public\"];\n      const three_gauge = \"0xbFcF63294aD7105dEa65aA58F8AE5BE2D9d0952A\";\n      const jar = new ethers.Contract(Vaults, abi1, prov.getSigner());\n      const controller = new ethers.Contract(ControllerV4, abi, prov.getSigner());\n      const threecrv = new ethers.Contract(three_crv, abi, prov.getSigner());\n      const gauge = new ethers.Contract(three_gauge, abi, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let rep1 = await jar.earn(); //let strategy_depoist_rep = await stragy.deposit()\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testHarvest = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function harvest() public \", \"function getMostPremium() public override view returns (address, uint256)\", \"function approve(address spender, uint256 amount) returns (bool)\"];\n      const stragy = new ethers.Contract(StrategyCurve3CRVv2, abi, prov.getSigner());\n      const test_crv = new ethers.Contract(CRV, abi, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let rep = await stragy.getMostPremium();\n      console.log(`getMostPremium rep is ${rep[0]}, ${JSON.stringify(rep[1].toString())}`); // rep = await test_crv.approve(univ2Router2, utils.parseUnits('0', 18).toString())\n      // rep = await test_crv.approve(univ2Router2, MaxUint256)\n      //\n      //rep = await test_crv.approve(StrategyCurve3CRVv2, utils.parseUnits('0', 18).toString())\n      // rep = await test_crv.approve(StrategyCurve3CRVv2, utils.parseUnits('100000000', 18).toString())\n\n      rep = await stragy.harvest();\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.resetApp = async () => {\n      const {\n        web3\n      } = this.state;\n\n      if (web3 && web3.currentProvider && web3.currentProvider.close) {\n        await web3.currentProvider.close();\n      }\n\n      await this.web3Modal.clearCachedProvider();\n      this.setState({ ...INITIAL_STATE\n      });\n    };\n\n    this.testUniApprove = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function approve(address spender, uint256 amount) returns (bool)\"];\n      const usdc = new ethers.Contract(USDC, abi, prov.getSigner());\n      const test_crv = new ethers.Contract(CRV, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      }); //let rep = await usdc.approve(Instabrine, utils.parseUnits('0', 6).toString());\n\n      let rep1 = await usdc.approve(Instabrine, utils.parseUnits('1000000000000', 6).toString());\n      console.log(`approve DAI rep is ${JSON.stringify(rep1)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.primitiveToCurveSkyVault_3 = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function approve(address spender, uint256 amount) returns (bool)\", \"function primitiveToCurveSkyVault_3(address curve,address[3] memory underlying,uint256[3] memory underlyingAmounts,address curveLp,address skyVault,address inviter) public returns (uint256)\"];\n      const inst = new ethers.Contract(Instabrine, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      const amount = parseUnits(\"10000000\", 6);\n      let rep = await inst.primitiveToCurveSkyVault_3(three_pool, [DAI, USDC, USDT], // [utils.parseUnits('3000', 18).toString(),utils.parseUnits('0', 6).toString(),utils.parseUnits('0', 6).toString()],\n      [Zero, amount, Zero], three_crv, Vaults, inviter);\n      console.log(`primitiveToCurveSkyVault_3 rep is ${JSON.stringify(rep)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.getHarvestable = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function approve(address spender, uint256 amount) returns (bool)\", \"function primitiveToCurvePickleJar_3(address curve,address[3] memory underlying,uint256[3] memory underlyingAmounts,address curveLp,address pickleJar) public returns (uint256)\", \"function getHarvestable() external returns (uint256)\"];\n      const inst = new ethers.Contract(StrategyCurve3CRVv2, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      }); //const amount = parseUnits(\"60000\", 6);\n\n      let rep = await inst.getHarvestable();\n      console.log(`getHarvestable rep is ${JSON.stringify(rep)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testApprovePtoken = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function approve(address spender, uint256 amount) returns (bool)\"];\n      const pjar = new ethers.Contract(Vaults, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let rep = await pjar.approve(Instabrine, utils.parseUnits('0', 18).toString());\n      rep = await pjar.approve(Instabrine, MaxUint256);\n      console.log(`approve pjar rep is ${JSON.stringify(rep)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.curveSkyVaultToPrimitive_1 = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function curveSkyVaultToPrimitive_1(address skyVault,uint256 amount,address curveLp,address curve,int128 index,address underlying) public returns (uint256) \"];\n      const inst = new ethers.Contract(Instabrine, abi, prov.getSigner()); // DAI = 0, USDC = 1, USDT = 2\n\n      const tokenIndex = ethers.BigNumber.from(0); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      const amount = parseUnits(\"100000\");\n      let rep = await inst.curvePickleJarToPrimitive_1(Vaults, amount, three_crv, three_pool, tokenIndex, USDT);\n      console.log(`curvePickleJarToPrimitive_1 rep is ${JSON.stringify(rep)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testgetReward = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [\"function rewards(address) public view returns (uint256) \", \"function rewardPerTokenStored() public view returns (uint256) \", \"function inviter(address) public view returns (address) \", \" function getReward() public\", \" function _totalSupply() public view returns(uint256)\"];\n      const invite = new ethers.Contract(Invite, abi, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let rep = await invite.rewards(inviter);\n      console.log(`invite.rewards(inviter) rep is ${JSON.stringify(rep)}`);\n      rep = await invite.rewardPerTokenStored();\n      console.log(`invite.rewardPerTokenStored() rep is ${JSON.stringify(rep)}`);\n      rep = await invite.inviter(\"0xD90D00101E1Cf4729f02A5598f4288E00001FC04\");\n      console.log(`invite.inviter() rep is ${JSON.stringify(rep)}`);\n      rep = await invite._totalSupply();\n      console.log(`invite._totalSupply() rep is ${JSON.stringify(rep)}`);\n      console.log(`invite._totalSupply() rep is ${convertAmountFromRawNumber(rep.toString(), 18)}`);\n      rep = await invite.getReward();\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.render = () => {\n      const {\n        assets,\n        assets2,\n        address,\n        connected,\n        chainId,\n        fetching,\n        showModal,\n        pendingRequest,\n        result\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(SLayout, {\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          maxWidth: 1000,\n          spanHeight: true,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            connected: connected,\n            address: address,\n            chainId: chainId,\n            killSession: this.resetApp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SContent, {\n            children: fetching ? /*#__PURE__*/_jsxDEV(Column, {\n              center: true,\n              children: /*#__PURE__*/_jsxDEV(SContainer, {\n                children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 996,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 29\n            }, this) : !!assets && !!assets.length ? /*#__PURE__*/_jsxDEV(SBalances, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Admin Setting Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1001,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.setController(),\n                    children: \"setController\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1007,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.setStragy(),\n                    children: \"setStragy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1011,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testBlockNumber(),\n                    children: \"testBlockNumber\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1015,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testBalance(),\n                    children: \"testBalance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1019,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1004,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Strategist :Deposite 3Crv\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testEarn(),\n                    children: \"testEarn\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1029,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testHarvest(),\n                    children: \"testHarvest\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1032,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.getHarvestable(),\n                    children: \"getHarvestable--test good uni stablecoin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1036,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testApprove(),\n                    children: \"testApprove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1040,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testDeposit(),\n                    children: \"testDeposit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1045,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testWithdraw(),\n                    children: \"testWithdraw\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1050,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1028,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"USER \\uFF1ADeposite from uni stablecoin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testUniApprove(),\n                    children: \"testUniApprove-USDC-3crv\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1061,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.primitiveToCurveSkyVault_3(),\n                    children: \"primitiveToCurvePickleJar_3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1064,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1060,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"USER \\uFF1AWithdraw to uni stablecoin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testApprovePtoken(),\n                    children: \"testApprovePtoken\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1074,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.curveSkyVaultToPrimitive_1(),\n                    children: \"curvePickleJarToPrimitive_1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1077,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1073,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1071,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Inviter \\uFF1AWithdraw \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testgetReward(),\n                    children: \"testgetReward\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1088,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1087,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Balances\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AccountAssets, {\n                chainId: chainId,\n                assets: assets\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Valuts Balances\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AccountAssets, {\n                chainId: chainId,\n                assets: assets2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1098,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(SLanding, {\n              center: true,\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: `Test Web3Modal`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {\n                onClick: this.onConnect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: showModal,\n          toggleModal: this.toggleModal,\n          children: pendingRequest ? /*#__PURE__*/_jsxDEV(SModalContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SModalTitle, {\n              children: \"Pending Call Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SContainer, {\n              children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SModalParagraph, {\n                children: \"Approve or reject request using your wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1114,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 25\n          }, this) : result ? /*#__PURE__*/_jsxDEV(SModalContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SModalTitle, {\n              children: \"Call Request Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ModalResult, {\n              children: result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(SModalContainer, {\n            children: /*#__PURE__*/_jsxDEV(SModalTitle, {\n              children: \"Call Request Rejected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n    this.web3Modal = new Web3Modal({\n      network: this.getNetwork(),\n      cacheProvider: true,\n      providerOptions: this.getProviderOptions()\n    });\n  }\n\n  componentDidMount() {\n    if (this.web3Modal.cachedProvider) {\n      this.onConnect();\n    }\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"SLayout\");\n$RefreshReg$(_c2, \"SContent\");\n$RefreshReg$(_c3, \"SContainer\");\n$RefreshReg$(_c4, \"SLanding\");\n$RefreshReg$(_c5, \"SModalContainer\");\n$RefreshReg$(_c6, \"SModalTitle\");\n$RefreshReg$(_c7, \"SModalParagraph\");\n$RefreshReg$(_c8, \"SBalances\");\n$RefreshReg$(_c9, \"STestButtonContainer\");\n$RefreshReg$(_c10, \"STestButton\");","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/src/App.tsx"],"names":["React","styled","Web3","Web3Modal","WalletConnectProvider","Fortmatic","Torus","Authereum","Bitski","Button","Column","Wrapper","Modal","Header","Loader","ModalResult","AccountAssets","ConnectButton","getChainData","fonts","ethers","utils","convertAmountFromRawNumber","StrategyCurve3CRVv2_ABI","require","ControllerV4_ABI","Instabrine_ABI","USDC","USDT","DAI","pDAI","three_crv","Three_gauge","three_pool","pool3","CRV","Vaults","StrategyCurve3CRVv2","ControllerV4","Instabrine","Invite","univ2Router2","inviter","parseUnits","Zero","MaxUint256","constants","parseEther","SLayout","div","SContent","SContainer","SLanding","SModalContainer","SModalTitle","SModalParagraph","p","SBalances","STestButtonContainer","STestButton","size","medium","INITIAL_STATE","fetching","address","web3","provider","connected","chainId","networkId","assets","assets2","showModal","pendingRequest","result","initWeb3","eth","extend","methods","name","call","outputFormatter","hexToNumber","App","Component","constructor","props","web3Modal","state","claim","onConnect","connect","subscribeProvider","accounts","getAccounts","net","getId","console","log","setState","getAccountAssets","on","resetApp","getNetwork","network","getProviderOptions","providerOptions","walletconnect","package","options","infuraId","process","env","REACT_APP_INFURA_ID","torus","fortmatic","key","REACT_APP_FORTMATIC_KEY","authereum","bitski","clientId","REACT_APP_BITSKI_CLIENT_ID","callbackUrl","window","location","href","prov","providers","Web3Provider","balance","getBalance","toString","ethAsset","push","error","toggleModal","setController","givenProvider","controller","Contract","rep","setValut","send","from","JSON","stringify","approveStrategy","setStrategy","setInvite","setStragy","stragy","setKeepCRV","testBlockNumber","getBlockNumber","JsonRpcProvider","signer","getSigner","testApprove","abi","test1","approve","testDeposit","deposit","testBalance","threecrv","jar","threegauge","usdc","usdt","dai","threepool","invite","crv","crv_bal","balanceOf","crv_bal_p","ethAsset115","crv_bal1","crv_bal_p1","ethAsset116","threecrv_bal","dai_bal","dai_bal_p","ethAsset110","usdc_bal","usdc_bal_p","ethAsset111","usdt_bal","usdt_bal_p","ethAsset112","jar_bal","ethAsset1","invite_bal","ethAsset1111","p3crv_bal","ethAsset10","available","ethAsset3","ethAsset4","strage1","ethAsset6","strage2","ethAsset7","guage","ethAsset5","balance_controller","ethAsset2","testWithdraw","withdrawAll","testEarn","min","abi1","three_gauge","gauge","rep1","earn","testHarvest","test_crv","getMostPremium","harvest","currentProvider","close","clearCachedProvider","testUniApprove","primitiveToCurveSkyVault_3","inst","amount","getHarvestable","testApprovePtoken","pjar","curveSkyVaultToPrimitive_1","tokenIndex","BigNumber","curvePickleJarToPrimitive_1","testgetReward","rewards","rewardPerTokenStored","_totalSupply","getReward","render","length","cacheProvider","componentDidMount","cachedProvider"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\n\nimport Web3Modal from \"web3modal\";\n// @ts-ignore\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n// @ts-ignore\nimport Fortmatic from \"fortmatic\";\nimport Torus from \"@toruslabs/torus-embed\";\nimport Authereum from \"authereum\";\nimport {Bitski} from \"bitski\";\n\nimport Button from \"./components/Button\";\nimport Column from \"./components/Column\";\nimport Wrapper from \"./components/Wrapper\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport ModalResult from \"./components/ModalResult\";\nimport AccountAssets from \"./components/AccountAssets\";\nimport ConnectButton from \"./components/ConnectButton\";\nimport {getChainData} from \"./helpers/utilities\";\nimport {IAssetData} from \"./helpers/types\";\nimport {fonts} from \"./styles\";\nimport {ethers, utils} from 'ethers';\nimport {convertAmountFromRawNumber} from \"./helpers/bignumber\";\n\n\nconst StrategyCurve3CRVv2_ABI = require(\"./abi/StrategyCurve3CRVv2.json\");\nconst ControllerV4_ABI = require(\"./abi/ControllerV4.json\");\n\nconst Instabrine_ABI = require(\"./abi/Instabrine.json\");\n\nconst USDC = \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\";\nconst USDT = \"0xdac17f958d2ee523a2206206994597c13d831ec7\";\nconst DAI = \"0x6b175474e89094c44da98b954eedeac495271d0f\";\nconst pDAI = \"0x6949Bb624E8e8A90F87cD2058139fcd77D2F3F87\";\nconst three_crv = \"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\";\nconst Three_gauge = \"0xbFcF63294aD7105dEa65aA58F8AE5BE2D9d0952A\";\nconst three_pool = \"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7\"\nconst pool3 = \"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\";\nconst CRV = \"0xD533a949740bb3306d119CC777fa900bA034cd52\";\n\nconst Vaults = \"0xB54aE04A1472FCdd0f3C122cF716c56415F4D853\";\nconst StrategyCurve3CRVv2 = \"0x6E7622518572571aFf70c66440B82f3Dcfef1C5D\";\nconst ControllerV4 = \"0x4801F0559606C4cfDe29360D82A3836Aa2fa915d\";\nconst Instabrine = \"0x36B466533d6bfF320E05Be310803e8b906eF9f79\";\nconst Invite = \"0x4B63e9C4f245fE52Cb693a27a746949FDb91d510\";\n\n\nconst univ2Router2 = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nconst inviter = \"0x7dd599A6B01B4C97D98117f8675DE47B6Ef0Bb5A\";\n\nconst {parseUnits} = ethers.utils;\nconst {Zero, MaxUint256} = ethers.constants;\nconst {parseEther} = ethers.utils;\n\n\nconst SLayout = styled.div`\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  text-align: center;\n`;\n\nconst SContent = styled(Wrapper)`\n  width: 100%;\n  height: 100%;\n  padding: 0 16px;\n`;\n\nconst SContainer = styled.div`\n  height: 100%;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  word-break: break-word;\n`;\n\nconst SLanding = styled(Column)`\n  height: 600px;\n`;\n\nconst SModalContainer = styled.div`\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n\nconst SModalTitle = styled.div`\n  margin: 1em 0;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nconst SModalParagraph = styled.p`\n  margin-top: 30px;\n`;\n\n// @ts-ignore\nconst SBalances = styled(SLanding)`\n  height: 100%;\n  & h3 {\n    padding-top: 30px;\n  }\n`;\n\nconst STestButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst STestButton = styled(Button)`\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  height: 44px;\n  width: 100%;\n  max-width: 175px;\n  margin: 12px;\n`;\n\ninterface IAppState {\n    fetching: boolean;\n    address: string;\n    web3: any;\n    provider: any;\n    connected: boolean;\n    chainId: number;\n    networkId: number;\n    assets: IAssetData[];\n    assets2: IAssetData[];\n    showModal: boolean;\n    pendingRequest: boolean;\n    result: any | null;\n}\n\nconst INITIAL_STATE: IAppState = {\n    fetching: false,\n    address: \"\",\n    web3: null,\n    provider: null,\n    connected: false,\n    chainId: 1,\n    networkId: 1,\n    assets: [],\n    assets2: [],\n    showModal: false,\n    pendingRequest: false,\n    result: null\n};\n\nfunction initWeb3(provider: any) {\n    const web3: any = new Web3(provider);\n\n    web3.eth.extend({\n        methods: [\n            {\n                name: \"chainId\",\n                call: \"eth_chainId\",\n                outputFormatter: web3.utils.hexToNumber\n            }\n        ]\n    });\n\n    return web3;\n}\n\nclass App extends React.Component<any, any> {\n    // @ts-ignore\n    public web3Modal: Web3Modal;\n    public state: IAppState;\n\n    public claim: string = \"0x5aa37930cbe5f4b04d617f71f78abc6c21be4cc0\";\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            ...INITIAL_STATE\n        };\n\n        this.web3Modal = new Web3Modal({\n            network: this.getNetwork(),\n            cacheProvider: true,\n            providerOptions: this.getProviderOptions()\n        });\n    }\n\n    public componentDidMount() {\n        if (this.web3Modal.cachedProvider) {\n            this.onConnect();\n        }\n    }\n\n    public onConnect = async () => {\n        const provider = await this.web3Modal.connect();\n\n        await this.subscribeProvider(provider);\n\n        const web3: any = initWeb3(provider);\n\n        const accounts = await web3.eth.getAccounts();\n\n        const address = accounts[0];\n\n        const networkId = await web3.eth.net.getId();\n\n        const chainId = await web3.eth.chainId();\n\n        console.log(`chainId is ${chainId}  networkId ${networkId}`)\n\n        await this.setState({\n            web3,\n            provider,\n            connected: true,\n            address,\n            chainId,\n            networkId\n        });\n\n        await this.getAccountAssets(provider);\n    };\n\n    public subscribeProvider = async (provider: any) => {\n        if (!provider.on) {\n            return;\n        }\n        provider.on(\"close\", () => this.resetApp());\n        provider.on(\"accountsChanged\", async (accounts: string[]) => {\n            await this.setState({address: accounts[0]});\n            await this.getAccountAssets(provider);\n        });\n        provider.on(\"chainChanged\", async (chainId: number) => {\n            const {web3} = this.state;\n            const networkId = await web3.eth.net.getId();\n            await this.setState({chainId, networkId});\n            await this.getAccountAssets(provider);\n        });\n\n        provider.on(\"networkChanged\", async (networkId: number) => {\n            const {web3} = this.state;\n            const chainId = await web3.eth.chainId();\n            await this.setState({chainId, networkId});\n            await this.getAccountAssets(provider);\n        });\n    };\n\n    public getNetwork = () => getChainData(this.state.chainId).network;\n\n    public getProviderOptions = () => {\n        const providerOptions = {\n            walletconnect: {\n                package: WalletConnectProvider,\n                options: {\n                    infuraId: process.env.REACT_APP_INFURA_ID\n                }\n            },\n            torus: {\n                package: Torus\n            },\n            fortmatic: {\n                package: Fortmatic,\n                options: {\n                    key: process.env.REACT_APP_FORTMATIC_KEY\n                }\n            },\n            authereum: {\n                package: Authereum\n            },\n            bitski: {\n                package: Bitski,\n                options: {\n                    clientId: process.env.REACT_APP_BITSKI_CLIENT_ID,\n                    callbackUrl: window.location.href + \"bitski-callback.html\"\n                }\n            }\n        };\n        return providerOptions;\n    };\n\n    public getAccountAssets = async (provider: any) => {\n        const {address, chainId} = this.state;\n        this.setState({fetching: false});\n        try {\n            const prov = new ethers.providers.Web3Provider(provider)\n            let balance = await prov.getBalance(address);\n            console.log('[wa]:', balance.toString(), \",\", balance)\n            let assets = [];\n            let assets2 = [];\n            let ethAsset = {\n                \"symbol\": \"ETH\",\n                \"name\": \"Ether\",\n                \"decimals\": \"18\",\n                \"contractAddress\": \"\",\n                \"balance\": balance\n            };\n            assets.push(ethAsset);\n            // A Human-Readable ABI; any supported ABI format could be used\n\n\n            this.setState({fetching: false, assets});\n        } catch (error) {\n            console.error(error); // tslint:disable-line\n            this.setState({fetching: false});\n        }\n\n    };\n\n    public toggleModal = () =>\n        this.setState({showModal: !this.state.showModal});\n\n\n    public setController = async () => {\n        let web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n\n        let controller = new web3.eth.Contract(\n            ControllerV4_ABI,\n            ControllerV4,\n        );\n\n        let rep = await controller.methods.setValut(three_crv, Vaults).send({from: accounts[0]})\n        console.log(`controller.methods.setJar  response :`, JSON.stringify(rep))\n\n\n        rep = await controller.methods.approveStrategy(three_crv, StrategyCurve3CRVv2).send({from: accounts[0]})\n\n        console.log(`approveStrategy rep is ${JSON.stringify(rep)}`)\n\n        rep = await controller.methods.setStrategy(three_crv, StrategyCurve3CRVv2).send({from: accounts[0]})\n\n        console.log(`setStrategy rep is ${JSON.stringify(rep)}`)\n\n        rep = await controller.methods.setInvite(Invite, Vaults).send({from: accounts[0]})\n        console.log(`controller.setInvite  response :`, JSON.stringify(rep))\n\n\n    }\n\n    public setStragy = async () => {\n        let web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n\n        let stragy = new web3.eth.Contract(\n            StrategyCurve3CRVv2_ABI,\n            StrategyCurve3CRVv2,\n        );\n\n        //设置保留的crv，之后会除以10000，设置1000，等于十分之一\n        let rep = await stragy.methods.setKeepCRV(1000).send({from: accounts[0]})\n        console.log(`stragy.methods.setKeepCRV(1000)  response :`, JSON.stringify(rep))\n\n\n    }\n\n    public testBlockNumber = async () => {\n        let web3 = new Web3(Web3.givenProvider);\n        let rep = await web3.eth.getBlockNumber()\n        console.log(`setStrategy rep is ${JSON.stringify(rep)}`)\n        const accounts = await web3.eth.getAccounts();\n\n\n        const provider = new ethers.providers.JsonRpcProvider();\n\n        const signer = provider.getSigner()\n\n\n    }\n\n\n    public testApprove = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n        ];\n        const test1 = new ethers.Contract(three_crv, abi, prov.getSigner());\n\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n        let rep = await test1.approve(Vaults, utils.parseUnits('0', 18).toString())\n        rep = await test1.approve(Vaults, utils.parseUnits('1000000000000', 18).toString())\n        console.log(`approve DAI rep is ${JSON.stringify(rep)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n    // 测试交易match A地址300TEST2币  B地址200TEST1币  交易match\n    public testDeposit = async () => {\n        // let web3 = new Web3(Web3.givenProvider);\n        // const accounts = await web3.eth.getAccounts();\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \" function deposit(uint256 _amount) public\",\n            \"function totalSupply() view returns (uint256)\",\n            \"function balance() public view returns (uint256)\",\n        ];\n        const test1 = new ethers.Contract(Vaults, abi, prov.getSigner());\n        console.log('xxx:', test1)\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        let balance = await test1.balance()\n        console.log(`test1.balance  response :`, JSON.stringify(balance.toString()))\n        // const rep = await test1.totalSupply()\n        let rep = await test1.deposit(utils.parseUnits('2800', 18).toString())\n\n\n        console.log(`jar.methods.deposi  response :`, JSON.stringify(rep))\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null,\n\n\n        });\n\n\n    }\n\n    public testBalance = async () => {\n        let assets2 = [];\n        let web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function deposit(uint256 _amount) public\",\n            \"function totalSupply() view returns (uint256)\",\n            \"function balanceOf(address account) external view returns (uint256)\",\n            \"function balance() public view returns (uint256)\",\n            \"function available() public view returns (uint256)\",\n            \"function balanceOfPool() public override view returns (uint256)\"\n        ];\n        const threecrv = new ethers.Contract(three_crv, abi, prov.getSigner());\n        const jar = new ethers.Contract(Vaults, abi, prov.getSigner());\n        const controller = new ethers.Contract(ControllerV4, abi, prov.getSigner());\n        const threegauge = new ethers.Contract(Three_gauge, abi, prov.getSigner());\n        const stragy = new ethers.Contract(StrategyCurve3CRVv2, abi, prov.getSigner())\n        const usdc = new ethers.Contract(USDC, abi, prov.getSigner())\n        const usdt = new ethers.Contract(USDT, abi, prov.getSigner())\n        const dai = new ethers.Contract(DAI, abi, prov.getSigner())\n        const threepool = new ethers.Contract(three_pool, abi, prov.getSigner())\n        const invite = new ethers.Contract(Invite, abi, prov.getSigner())\n\n        const crv = new ethers.Contract(CRV, abi, prov.getSigner())\n\n        this.toggleModal();\n        this.setState({pendingRequest: true});\n        // let threepool_bal = await threepool.balanceOf(StrategyCurve3CRVv2)\n        // let threepool_bal_p = convertAmountFromRawNumber(threepool_bal.toString(), 18)\n        // console.log(`threepool_bal_p is ${threepool_bal_p}`)\n        //\n        //\n        // const ethAsset113 = {\n        //     \"symbol\": \"threepool_bal\",\n        //     \"name\": \"threepool_bal\",\n        //     \"decimals\": \"18\",\n        //     \"contractAddress\": three_pool,\n        //     \"balance\": threepool_bal\n        // };\n        // assets2.push(ethAsset113);\n        let crv_bal = await crv.balanceOf(StrategyCurve3CRVv2)\n        let crv_bal_p = convertAmountFromRawNumber(crv_bal.toString(), 18)\n        console.log(`crv_bal_p is ${crv_bal_p}`)\n\n\n        const ethAsset115 = {\n            \"symbol\": \"Crv\",\n            \"name\": \"Crv-Stragy\",\n            \"decimals\": \"18\",\n            \"contractAddress\": CRV,\n            \"balance\": crv_bal\n        };\n        assets2.push(ethAsset115);\n\n        let crv_bal1 = await crv.balanceOf(ControllerV4)\n        let crv_bal_p1 = convertAmountFromRawNumber(crv_bal1.toString(), 18)\n        console.log(`crv_bal_p  is ${crv_bal_p1}`)\n\n\n        const ethAsset116 = {\n            \"symbol\": \"Crv-c\",\n            \"name\": \"Crv-Controller\",\n            \"decimals\": \"18\",\n            \"contractAddress\": CRV,\n            \"balance\": crv_bal1\n        };\n        assets2.push(ethAsset116);\n\n        let threecrv_bal = await threecrv.balanceOf(accounts[0])\n        //threecrv_bal = convertAmountFromRawNumber(threecrv_bal.toString(), 18)\n        console.log(`threecrv_bal is ${threecrv_bal}`)\n\n\n        const ethAsset = {\n            \"symbol\": \"3Crv\",\n            \"name\": \"3Crv\",\n            \"decimals\": \"18\",\n            \"contractAddress\": three_crv,\n            \"balance\": threecrv_bal\n        };\n        assets2.push(ethAsset);\n\n        let dai_bal = await dai.balanceOf(accounts[0])\n        let dai_bal_p = convertAmountFromRawNumber(dai_bal.toString(), 6)\n        const ethAsset110 = {\n            \"symbol\": \"DAI-account\",\n            \"name\": \"DAI-account\",\n            \"decimals\": \"18\",\n            \"contractAddress\": DAI,\n            \"balance\": dai_bal\n        };\n        assets2.push(ethAsset110);\n\n        let usdc_bal = await usdc.balanceOf(accounts[0])\n        let usdc_bal_p = convertAmountFromRawNumber(usdc_bal.toString(), 6)\n        const ethAsset111 = {\n            \"symbol\": \"USDC-account\",\n            \"name\": \"USDC-account\",\n            \"decimals\": \"6\",\n            \"contractAddress\": USDC,\n            \"balance\": usdc_bal\n        };\n        assets2.push(ethAsset111);\n        let usdt_bal = await usdt.balanceOf(accounts[0])\n        let usdt_bal_p = convertAmountFromRawNumber(usdt_bal.toString(), 6)\n        const ethAsset112 = {\n            \"symbol\": \"USDT-account\",\n            \"name\": \"USDT-account\",\n            \"decimals\": \"6\",\n            \"contractAddress\": USDT,\n            \"balance\": usdt_bal\n        };\n        assets2.push(ethAsset112);\n        console.log(`account usdt: ${usdt_bal_p},usdc: ${usdc_bal_p},dai: ${dai_bal_p}`)\n\n        let jar_bal = await threecrv.balanceOf(Vaults)\n        //jar_bal = convertAmountFromRawNumber(jar_bal.toString(), 18)\n        const ethAsset1 = {\n            \"symbol\": \"3Crv-Jar\",\n            \"name\": \"3Crv-Jar\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": jar_bal\n        };\n        assets2.push(ethAsset1);\n\n        let invite_bal = await threecrv.balanceOf(Invite)\n        //jar_bal = convertAmountFromRawNumber(jar_bal.toString(), 18)\n        const ethAsset1111 = {\n            \"symbol\": \"3Crv-Invite\",\n            \"name\": \"3Crv-Invite\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": invite_bal\n        };\n        assets2.push(ethAsset1111);\n\n        let p3crv_bal = await jar.balanceOf(accounts[0])\n        //jar_bal = convertAmountFromRawNumber(jar_bal.toString(), 18)\n        const ethAsset10 = {\n            \"symbol\": \"p3crv_bal\",\n            \"name\": \"p3crv_bal\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": p3crv_bal\n        };\n        assets2.push(ethAsset10);\n\n\n        let available = await jar.available()\n        // available = convertAmountFromRawNumber(available.toString(), 18)\n        const ethAsset3 = {\n            \"symbol\": \"3Crv-jar.available\",\n            \"name\": \"3Crv-jar.available\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": available\n        };\n        assets2.push(ethAsset3);\n\n        let balance = await jar.balance()\n        // balance = convertAmountFromRawNumber(balance.toString(), 18)\n\n        const ethAsset4 = {\n            \"symbol\": \"3Crv-jar.jar.balance\",\n            \"name\": \"3Crv-jar.jar.balance\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": balance\n        };\n        assets2.push(ethAsset4);\n\n\n        let strage1 = await threegauge.balanceOf(StrategyCurve3CRVv2)\n        // balance = convertAmountFromRawNumber(balance.toString(), 18)\n\n        const ethAsset6 = {\n            \"symbol\": \"guage-3crv-stragy.balance\",\n            \"name\": \"guage-3crv-stragy.balance\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": strage1\n        };\n        assets2.push(ethAsset6);\n\n        let strage2 = await threecrv.balanceOf(StrategyCurve3CRVv2)\n        // balance = convertAmountFromRawNumber(balance.toString(), 18)\n\n        const ethAsset7 = {\n            \"symbol\": \"3crv-stragy.balance\",\n            \"name\": \"3crv-stragy.balance\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": strage2\n        };\n        assets2.push(ethAsset7);\n\n        let guage = await threegauge.balanceOf(ControllerV4)\n        // balance = convertAmountFromRawNumber(balance.toString(), 18)\n\n        const ethAsset5 = {\n            \"symbol\": \"guage-3crv-controller.balance\",\n            \"name\": \"guage-3crv-controller.balance\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": guage\n        };\n        assets2.push(ethAsset5);\n\n        let balance_controller = await controller.balanceOf(three_crv)\n        balance_controller = convertAmountFromRawNumber(balance_controller.toString(), 18)\n        const ethAsset2 = {\n            \"symbol\": \"3Crv-controller\",\n            \"name\": \"3Crv-controller\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": balance_controller\n        };\n        assets2.push(ethAsset2);\n\n        // console.log(`jar.methods.testController  response :`,JSON.stringify(rep.toString()))\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null,\n            assets2\n        });\n    }\n\n    public testWithdraw = async () => {\n\n        // let web3 = new Web3(Web3.givenProvider);\n        // const accounts = await web3.eth.getAccounts();\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function withdrawAll() external\",\n            \" function withdraw(uint256 _shares) public\"\n        ];\n        const test1 = new ethers.Contract(Vaults, abi, prov.getSigner());\n\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n\n        // await test1.withdraw(utils.parseUnits('100', 18).toString())\n        const rep = await test1.withdrawAll()\n\n        // console.log(`jar.methods.withdrawAll  response :`, JSON.stringify(rep))\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n\n\n    }\n\n    public testEarn = async () => {\n        let min = 100 //最小的crv 个数\n        // let web3 = new Web3(Web3.givenProvider);\n        // const accounts = await web3.eth.getAccounts();\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n\n            // \"function earn() public\",\n            \"function earn(address _token, uint256 _amount) public\",\n            \" function balance() public view returns (uint256)\",\n            \"function available() public view returns (uint256)\",\n            \"function balanceOf(address _token) external view returns (uint256)\",\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n            \"function approveStrategy(address _token, address _strategy) public\",\n            \"function deposit() public override\",\n            \"function totalSupply() view returns (uint256)\",\n        ];\n\n        const abi1 = [\n            // Authenticated Functions\n            \"function earn() public\",\n        ];\n        const three_gauge = \"0xbFcF63294aD7105dEa65aA58F8AE5BE2D9d0952A\";\n        const jar = new ethers.Contract(Vaults, abi1, prov.getSigner());\n        const controller = new ethers.Contract(ControllerV4, abi, prov.getSigner());\n        const threecrv = new ethers.Contract(three_crv, abi, prov.getSigner());\n\n        const gauge = new ethers.Contract(three_gauge, abi, prov.getSigner());\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n        let rep1 = await jar.earn()\n\n        //let strategy_depoist_rep = await stragy.deposit()\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n\n    }\n    public testHarvest = async () => {\n\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function harvest() public \",\n            \"function getMostPremium() public override view returns (address, uint256)\",\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n        ];\n\n        const stragy = new ethers.Contract(StrategyCurve3CRVv2, abi, prov.getSigner());\n        const test_crv = new ethers.Contract(CRV, abi, prov.getSigner());\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        let rep = await stragy.getMostPremium()\n        console.log(`getMostPremium rep is ${rep[0]}, ${JSON.stringify(rep[1].toString())}`,);\n        // rep = await test_crv.approve(univ2Router2, utils.parseUnits('0', 18).toString())\n        // rep = await test_crv.approve(univ2Router2, MaxUint256)\n        //\n        //rep = await test_crv.approve(StrategyCurve3CRVv2, utils.parseUnits('0', 18).toString())\n        // rep = await test_crv.approve(StrategyCurve3CRVv2, utils.parseUnits('100000000', 18).toString())\n\n\n        rep = await stragy.harvest()\n\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n\n    }\n\n\n    public resetApp = async () => {\n        const {web3} = this.state;\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        await this.web3Modal.clearCachedProvider();\n        this.setState({...INITIAL_STATE});\n    };\n\n\n    public testUniApprove = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n        ];\n        const usdc = new ethers.Contract(USDC, abi, prov.getSigner());\n        const test_crv = new ethers.Contract(CRV, abi, prov.getSigner());\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n\n        //let rep = await usdc.approve(Instabrine, utils.parseUnits('0', 6).toString());\n        let rep1 = await usdc.approve(Instabrine, utils.parseUnits('1000000000000', 6).toString())\n        console.log(`approve DAI rep is ${JSON.stringify(rep1)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n    public primitiveToCurveSkyVault_3 = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n            \"function primitiveToCurveSkyVault_3(address curve,address[3] memory underlying,uint256[3] memory underlyingAmounts,address curveLp,address skyVault,address inviter) public returns (uint256)\",\n        ];\n        const inst = new ethers.Contract(Instabrine, abi, prov.getSigner());\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        const amount = parseUnits(\"10000000\", 6);\n        let rep = await inst.primitiveToCurveSkyVault_3(\n            three_pool,\n            [DAI, USDC, USDT],\n            // [utils.parseUnits('3000', 18).toString(),utils.parseUnits('0', 6).toString(),utils.parseUnits('0', 6).toString()],\n            [Zero, amount, Zero],\n            three_crv,\n            Vaults,\n            inviter\n        )\n        console.log(`primitiveToCurveSkyVault_3 rep is ${JSON.stringify(rep)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n\n    public getHarvestable = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n            \"function primitiveToCurvePickleJar_3(address curve,address[3] memory underlying,uint256[3] memory underlyingAmounts,address curveLp,address pickleJar) public returns (uint256)\",\n            \"function getHarvestable() external returns (uint256)\"\n        ];\n        const inst = new ethers.Contract(StrategyCurve3CRVv2, abi, prov.getSigner());\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        //const amount = parseUnits(\"60000\", 6);\n        let rep = await inst.getHarvestable()\n\n        console.log(`getHarvestable rep is ${JSON.stringify(rep)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n\n    public testApprovePtoken = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n        ];\n        const pjar = new ethers.Contract(Vaults, abi, prov.getSigner());\n\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        let rep = await pjar.approve(Instabrine, utils.parseUnits('0', 18).toString())\n        rep = await pjar.approve(Instabrine, MaxUint256)\n\n\n        console.log(`approve pjar rep is ${JSON.stringify(rep)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n\n    public curveSkyVaultToPrimitive_1 = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function curveSkyVaultToPrimitive_1(address skyVault,uint256 amount,address curveLp,address curve,int128 index,address underlying) public returns (uint256) \",\n        ];\n        const inst = new ethers.Contract(Instabrine, abi, prov.getSigner());\n        // DAI = 0, USDC = 1, USDT = 2\n        const tokenIndex = ethers.BigNumber.from(0);\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        const amount = parseUnits(\"100000\");\n        let rep = await inst.curvePickleJarToPrimitive_1(\n            Vaults,\n            amount,\n            three_crv,\n            three_pool,\n            tokenIndex,\n            USDT\n        )\n        console.log(`curvePickleJarToPrimitive_1 rep is ${JSON.stringify(rep)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n    public testgetReward = async () => {\n\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            \"function rewards(address) public view returns (uint256) \",\n            \"function rewardPerTokenStored() public view returns (uint256) \",\n            \"function inviter(address) public view returns (address) \",\n            \" function getReward() public\",\n            \" function _totalSupply() public view returns(uint256)\"\n        ];\n        const invite = new ethers.Contract(Invite, abi, prov.getSigner());\n\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n        let rep = await invite.rewards(inviter)\n        console.log(`invite.rewards(inviter) rep is ${JSON.stringify(rep)}`)\n        rep = await invite.rewardPerTokenStored()\n        console.log(`invite.rewardPerTokenStored() rep is ${JSON.stringify(rep)}`)\n        rep = await invite.inviter(\"0xD90D00101E1Cf4729f02A5598f4288E00001FC04\")\n        console.log(`invite.inviter() rep is ${JSON.stringify(rep)}`)\n        rep = await invite._totalSupply()\n        console.log(`invite._totalSupply() rep is ${JSON.stringify(rep)}`);\n        console.log(`invite._totalSupply() rep is ${convertAmountFromRawNumber(rep.toString(), 18)}`)\n        rep = await invite.getReward()\n\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n\n\n    }\n\n    public render = () => {\n        const {\n            assets,\n            assets2,\n            address,\n            connected,\n            chainId,\n            fetching,\n            showModal,\n            pendingRequest,\n            result\n        } = this.state;\n        return (\n            <SLayout>\n                <Column maxWidth={1000} spanHeight>\n                    <Header\n                        connected={connected}\n                        address={address}\n                        chainId={chainId}\n                        killSession={this.resetApp}\n                    />\n                    <SContent>\n                        {fetching ? (\n                            <Column center>\n                                <SContainer>\n                                    <Loader/>\n                                </SContainer>\n                            </Column>\n                        ) : !!assets && !!assets.length ? (\n                            <SBalances>\n                                <h6>Admin Setting Actions</h6>\n                                <Column center>\n\n                                    <STestButtonContainer>\n\n\n                                        <STestButton left onClick={() => this.setController()}>\n                                            setController\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.setStragy()}>\n                                            setStragy\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.testBlockNumber()}>\n                                            testBlockNumber\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.testBalance()}>\n                                            testBalance\n                                        </STestButton>\n\n                                    </STestButtonContainer>\n                                </Column>\n                                <h6>Strategist :Deposite 3Crv</h6>\n                                <Column center>\n\n                                    <STestButtonContainer>\n                                        <STestButton left onClick={() => this.testEarn()}>\n                                            testEarn\n                                        </STestButton>\n                                        <STestButton left onClick={() => this.testHarvest()}>\n                                            testHarvest\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.getHarvestable()}>\n                                            getHarvestable--test good uni stablecoin\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.testApprove()}>\n                                            testApprove\n                                        </STestButton>\n\n\n                                        <STestButton left onClick={() => this.testDeposit()}>\n                                            testDeposit\n                                        </STestButton>\n\n\n                                        <STestButton left onClick={() => this.testWithdraw()}>\n                                            testWithdraw\n                                        </STestButton>\n\n\n                                    </STestButtonContainer>\n                                </Column>\n                                <h6>USER ：Deposite from uni stablecoin</h6>\n                                <Column center>\n\n                                    <STestButtonContainer>\n                                        <STestButton left onClick={() => this.testUniApprove()}>\n                                            testUniApprove-USDC-3crv\n                                        </STestButton>\n                                        <STestButton left onClick={() => this.primitiveToCurveSkyVault_3()}>\n                                            primitiveToCurvePickleJar_3\n                                        </STestButton>\n\n                                    </STestButtonContainer>\n                                </Column>\n                                <h6>USER ：Withdraw to uni stablecoin</h6>\n                                <Column center>\n\n                                    <STestButtonContainer>\n                                        <STestButton left onClick={() => this.testApprovePtoken()}>\n                                            testApprovePtoken\n                                        </STestButton>\n                                        <STestButton left onClick={() => this.curveSkyVaultToPrimitive_1()}>\n                                            curvePickleJarToPrimitive_1\n                                        </STestButton>\n\n\n                                    </STestButtonContainer>\n                                </Column>\n                                <h6>Inviter ：Withdraw </h6>\n                                <Column center>\n\n                                    <STestButtonContainer>\n                                        <STestButton left onClick={() => this.testgetReward()}>\n                                            testgetReward\n                                        </STestButton>\n\n\n                                    </STestButtonContainer>\n                                </Column>\n                                <h6>Balances</h6>\n                                <AccountAssets chainId={chainId} assets={assets}/>{\" \"}\n                                <h6>Valuts Balances</h6>\n                                <AccountAssets chainId={chainId} assets={assets2}/>{\" \"}\n                            </SBalances>\n                        ) : (\n                            <SLanding center>\n                                <h6>{`Test Web3Modal`}</h6>\n                                <ConnectButton onClick={this.onConnect}/>\n                            </SLanding>\n                        )}\n                    </SContent>\n                </Column>\n                <Modal show={showModal} toggleModal={this.toggleModal}>\n                    {pendingRequest ? (\n                        <SModalContainer>\n                            <SModalTitle>{\"Pending Call Request\"}</SModalTitle>\n                            <SContainer>\n                                <Loader/>\n                                <SModalParagraph>\n                                    {\"Approve or reject request using your wallet\"}\n                                </SModalParagraph>\n                            </SContainer>\n                        </SModalContainer>\n                    ) : result ? (\n                        <SModalContainer>\n                            <SModalTitle>{\"Call Request Approved\"}</SModalTitle>\n                            <ModalResult>{result}</ModalResult>\n                        </SModalContainer>\n                    ) : (\n                        <SModalContainer>\n                            <SModalTitle>{\"Call Request Rejected\"}</SModalTitle>\n                        </SModalContainer>\n                    )}\n                </Modal>\n            </SLayout>\n        );\n    };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}