{"ast":null,"code":"var _jsxFileName = \"/Users/helen/fi/protocol-demo/frontend/src/components/Modal.tsx\";\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { colors, transitions } from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SLightbox = styled.div`\n  transition: opacity 0.1s ease-in-out;\n  text-align: center;\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  margin-left: -50vw;\n  top: ${({\n  offset\n}) => offset ? `-${offset}px` : 0};\n  left: 50%;\n  z-index: 2;\n  will-change: opacity;\n  background-color: ${({\n  opacity\n}) => {\n  let alpha = 0.4;\n\n  if (typeof opacity === \"number\") {\n    alpha = opacity;\n  }\n\n  return `rgba(0, 0, 0, ${alpha})`;\n}};\n  opacity: ${({\n  show\n}) => show ? 1 : 0};\n  visibility: ${({\n  show\n}) => show ? \"visible\" : \"hidden\"};\n  pointer-events: ${({\n  show\n}) => show ? \"auto\" : \"none\"};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c = SLightbox;\nconst SModalContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c2 = SModalContainer;\nconst SHitbox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n_c3 = SHitbox;\nconst SCloseButton = styled.div`\n  transition: ${transitions.short};\n  position: absolute;\n  width: ${({\n  size\n}) => `${size}px`};\n  height: ${({\n  size\n}) => `${size}px`};\n  right: ${({\n  size\n}) => `${size / 1.6667}px`};\n  top: ${({\n  size\n}) => `${size / 1.6667}px`};\n  opacity: 0.5;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n  &:before,\n  &:after {\n    position: absolute;\n    content: \" \";\n    height: ${({\n  size\n}) => `${size}px`};\n    width: 2px;\n    background: ${({\n  color\n}) => `rgb(${colors[color]})`};\n  }\n  &:before {\n    transform: rotate(45deg);\n  }\n  &:after {\n    transform: rotate(-45deg);\n  }\n`;\n_c4 = SCloseButton;\nconst SCard = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  padding: 25px;\n  background-color: rgb(${colors.white});\n  border-radius: 6px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n_c5 = SCard;\nconst SModalContent = styled.div`\n  position: relative;\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n_c6 = SModalContent;\nconst INITIAL_STATE = {\n  offset: 0\n};\n\nclass Modal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.lightbox = void 0;\n    this.state = { ...INITIAL_STATE\n    };\n\n    this.toggleModal = async () => {\n      const d = typeof window !== \"undefined\" ? document : \"\";\n      const body = d ? d.body || d.getElementsByTagName(\"body\")[0] : \"\";\n\n      if (body) {\n        if (this.props.show) {\n          body.style.position = \"\";\n        } else {\n          body.style.position = \"fixed\";\n        }\n      }\n\n      this.props.toggleModal();\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.lightbox) {\n      const lightboxRect = this.lightbox.getBoundingClientRect();\n      const offset = lightboxRect.top > 0 ? lightboxRect.top : 0;\n\n      if (offset !== INITIAL_STATE.offset && offset !== this.state.offset) {\n        this.setState({\n          offset\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      offset\n    } = this.state;\n    const {\n      children,\n      show,\n      opacity\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SLightbox, {\n      show: show,\n      offset: offset,\n      opacity: opacity,\n      ref: c => this.lightbox = c,\n      children: /*#__PURE__*/_jsxDEV(SModalContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SHitbox, {\n          onClick: this.toggleModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SCard, {\n          children: [/*#__PURE__*/_jsxDEV(SCloseButton, {\n            size: 25,\n            color: \"dark\",\n            onClick: this.toggleModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SModalContent, {\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  show: PropTypes.bool.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  opacity: PropTypes.number\n};\nexport default Modal;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SLightbox\");\n$RefreshReg$(_c2, \"SModalContainer\");\n$RefreshReg$(_c3, \"SHitbox\");\n$RefreshReg$(_c4, \"SCloseButton\");\n$RefreshReg$(_c5, \"SCard\");\n$RefreshReg$(_c6, \"SModalContent\");","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/src/components/Modal.tsx"],"names":["React","PropTypes","styled","colors","transitions","SLightbox","div","offset","opacity","alpha","show","SModalContainer","SHitbox","SCloseButton","short","size","color","SCard","white","SModalContent","INITIAL_STATE","Modal","Component","lightbox","state","toggleModal","d","window","document","body","getElementsByTagName","props","style","position","componentDidUpdate","lightboxRect","getBoundingClientRect","top","setState","render","children","c","propTypes","node","isRequired","bool","func","number"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { colors, transitions } from \"../styles\";\n\ninterface ILightboxStyleProps {\n  show: boolean;\n  offset: number;\n  opacity?: number;\n}\n\nconst SLightbox = styled.div<ILightboxStyleProps>`\n  transition: opacity 0.1s ease-in-out;\n  text-align: center;\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  margin-left: -50vw;\n  top: ${({ offset }) => (offset ? `-${offset}px` : 0)};\n  left: 50%;\n  z-index: 2;\n  will-change: opacity;\n  background-color: ${({ opacity }) => {\n    let alpha = 0.4;\n    if (typeof opacity === \"number\") {\n      alpha = opacity;\n    }\n    return `rgba(0, 0, 0, ${alpha})`;\n  }};\n  opacity: ${({ show }) => (show ? 1 : 0)};\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\n  pointer-events: ${({ show }) => (show ? \"auto\" : \"none\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SModalContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SHitbox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\ninterface ICloseButtonStyleProps {\n  size: number;\n  color: string;\n  onClick?: any;\n}\n\nconst SCloseButton = styled.div<ICloseButtonStyleProps>`\n  transition: ${transitions.short};\n  position: absolute;\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  right: ${({ size }) => `${size / 1.6667}px`};\n  top: ${({ size }) => `${size / 1.6667}px`};\n  opacity: 0.5;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n  &:before,\n  &:after {\n    position: absolute;\n    content: \" \";\n    height: ${({ size }) => `${size}px`};\n    width: 2px;\n    background: ${({ color }) => `rgb(${colors[color]})`};\n  }\n  &:before {\n    transform: rotate(45deg);\n  }\n  &:after {\n    transform: rotate(-45deg);\n  }\n`;\n\nconst SCard = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  padding: 25px;\n  background-color: rgb(${colors.white});\n  border-radius: 6px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SModalContent = styled.div`\n  position: relative;\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n\ninterface IModalState {\n  offset: number;\n}\n\ninterface IModalProps {\n  children: React.ReactNode;\n  show: boolean;\n  toggleModal: any;\n  opacity?: number;\n}\n\nconst INITIAL_STATE: IModalState = {\n  offset: 0,\n};\n\nclass Modal extends React.Component<IModalProps, IModalState> {\n  public static propTypes = {\n    children: PropTypes.node.isRequired,\n    show: PropTypes.bool.isRequired,\n    toggleModal: PropTypes.func.isRequired,\n    opacity: PropTypes.number,\n  };\n\n  public lightbox?: HTMLDivElement | null;\n\n  public state: IModalState = {\n    ...INITIAL_STATE,\n  };\n\n  public componentDidUpdate() {\n    if (this.lightbox) {\n      const lightboxRect = this.lightbox.getBoundingClientRect();\n      const offset = lightboxRect.top > 0 ? lightboxRect.top : 0;\n\n      if (offset !== INITIAL_STATE.offset && offset !== this.state.offset) {\n        this.setState({ offset });\n      }\n    }\n  }\n\n  public toggleModal = async () => {\n    const d = typeof window !== \"undefined\" ? document : \"\";\n    const body = d ? d.body || d.getElementsByTagName(\"body\")[0] : \"\";\n    if (body) {\n      if (this.props.show) {\n        body.style.position = \"\";\n      } else {\n        body.style.position = \"fixed\";\n      }\n    }\n    this.props.toggleModal();\n  };\n\n  public render() {\n    const { offset } = this.state;\n    const { children, show, opacity } = this.props;\n    return (\n      <SLightbox\n        show={show}\n        offset={offset}\n        opacity={opacity}\n        ref={(c) => (this.lightbox = c)}\n      >\n        <SModalContainer>\n          <SHitbox onClick={this.toggleModal} />\n\n          <SCard>\n            <SCloseButton size={25} color={\"dark\"} onClick={this.toggleModal} />\n            <SModalContent>{children}</SModalContent>\n          </SCard>\n        </SModalContainer>\n      </SLightbox>\n    );\n  }\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}