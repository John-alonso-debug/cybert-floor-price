{"ast":null,"code":"var _jsxFileName = \"/Users/helen/fi/protocol-demo/frontend/src/App_bsc.tsx\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\"; // @ts-ignore\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"; // @ts-ignore\n\nimport Fortmatic from \"fortmatic\";\nimport Torus from \"@toruslabs/torus-embed\";\nimport Authereum from \"authereum\";\nimport { Bitski } from \"bitski\";\nimport Button from \"./components/Button\";\nimport Column from \"./components/Column\";\nimport Wrapper from \"./components/Wrapper\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport ModalResult from \"./components/ModalResult\";\nimport AccountAssets from \"./components/AccountAssets\";\nimport ConnectButton from \"./components/ConnectButton\";\nimport { getChainData } from \"./helpers/utilities\";\nimport { fonts } from \"./styles\";\nimport { ethers, utils } from 'ethers';\nimport { convertAmountFromRawNumber } from \"./helpers/bignumber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StrategyCurve3CRVv2_ABI = require(\"./abi/StrategyCurve3CRVv2.json\");\n\nconst ControllerV4_ABI = require(\"./abi/ControllerV4.json\");\n\nconst Instabrine_ABI = require(\"./abi/Instabrine.json\");\n\nconst USDC = \"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\";\nconst USDT = \"0x55d398326f99059fF775485246999027B3197955\";\nconst DAI = \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\";\nconst CAKE = \"0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\";\nconst BUNNY = \"0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51\"; //3crv\n// const three_crv = \"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\";\n// const Three_gauge = \"0xbFcF63294aD7105dEa65aA58F8AE5BE2D9d0952A\";\n// const three_pool = \"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7\"\n//usdp group\n\nconst three_crv = \"0x7Eb40E450b9655f4B3cC4259BCC731c63ff55ae6\";\nconst usdt_gauge = \"0x0Ba950F0f099229828c10a9B307280a450133FFc\";\nconst CRV = \"0xD533a949740bb3306d119CC777fa900bA034cd52\";\nconst Bunny = \"0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51\";\nconst Vaults = \"0xB54aE04A1472FCdd0f3C122cF716c56415F4D853\";\nconst StrategyCurve3CRVv2 = \"0x6E7622518572571aFf70c66440B82f3Dcfef1C5D\";\nconst ControllerV4 = \"0x4801F0559606C4cfDe29360D82A3836Aa2fa915d\";\nconst Instabrine = \"0x36B466533d6bfF320E05Be310803e8b906eF9f79\";\nconst Invite = \"0x4B63e9C4f245fE52Cb693a27a746949FDb91d510\";\nconst _treasury = \"0xF2bb9641694Baa6848338CD40993681Fee936a12\";\nconst inviter = \"0x6d96E5266d662D7ed607CB8D88dC6447632bB298\";\nconst BunnyChef = \"0x40e31876c4322bd033BAb028474665B12c4d04CE\";\nconst {\n  parseUnits\n} = ethers.utils;\nconst {\n  Zero,\n  MaxUint256\n} = ethers.constants;\nconst {\n  parseEther\n} = ethers.utils;\nconst SLayout = styled.div`\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  text-align: center;\n`;\n_c = SLayout;\nconst SContent = styled(Wrapper)`\n  width: 100%;\n  height: 100%;\n  padding: 0 16px;\n`;\n_c2 = SContent;\nconst SContainer = styled.div`\n  height: 100%;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  word-break: break-word;\n`;\n_c3 = SContainer;\nconst SLanding = styled(Column)`\n  height: 600px;\n`;\n_c4 = SLanding;\nconst SModalContainer = styled.div`\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n_c5 = SModalContainer;\nconst SModalTitle = styled.div`\n  margin: 1em 0;\n  font-size: 20px;\n  font-weight: 700;\n`;\n_c6 = SModalTitle;\nconst SModalParagraph = styled.p`\n  margin-top: 30px;\n`; // @ts-ignore\n\n_c7 = SModalParagraph;\nconst SBalances = styled(SLanding)`\n  height: 100%;\n  & h3 {\n    padding-top: 30px;\n  }\n`;\n_c8 = SBalances;\nconst STestButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n_c9 = STestButtonContainer;\nconst STestButton = styled(Button)`\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  height: 44px;\n  width: 100%;\n  max-width: 175px;\n  margin: 12px;\n`;\n_c10 = STestButton;\nconst INITIAL_STATE = {\n  fetching: false,\n  address: \"\",\n  web3: null,\n  provider: null,\n  connected: false,\n  chainId: 1,\n  networkId: 1,\n  assets: [],\n  assets2: [],\n  showModal: false,\n  pendingRequest: false,\n  result: null\n};\n\nfunction initWeb3(provider) {\n  const web3 = new Web3(provider);\n  web3.eth.extend({\n    methods: [{\n      name: \"chainId\",\n      call: \"eth_chainId\",\n      outputFormatter: web3.utils.hexToNumber\n    }]\n  });\n  return web3;\n}\n\nclass App extends React.Component {\n  // @ts-ignore\n  constructor(props) {\n    super(props);\n    this.web3Modal = void 0;\n    this.state = void 0;\n    this.claim = \"0x5aa37930cbe5f4b04d617f71f78abc6c21be4cc0\";\n\n    this.onConnect = async () => {\n      const provider = await this.web3Modal.connect();\n      await this.subscribeProvider(provider);\n      const web3 = initWeb3(provider);\n      const accounts = await web3.eth.getAccounts();\n      const address = accounts[0];\n      const networkId = await web3.eth.net.getId();\n      const chainId = await web3.eth.chainId();\n      console.log(`chainId is ${chainId}  networkId ${networkId}`);\n      await this.setState({\n        web3,\n        provider,\n        connected: true,\n        address,\n        chainId,\n        networkId\n      });\n      await this.getAccountAssets(provider);\n    };\n\n    this.subscribeProvider = async provider => {\n      if (!provider.on) {\n        return;\n      }\n\n      provider.on(\"close\", () => this.resetApp());\n      provider.on(\"accountsChanged\", async accounts => {\n        await this.setState({\n          address: accounts[0]\n        });\n        await this.getAccountAssets(provider);\n      });\n      provider.on(\"chainChanged\", async chainId => {\n        const {\n          web3\n        } = this.state;\n        const networkId = await web3.eth.net.getId();\n        await this.setState({\n          chainId,\n          networkId\n        });\n        await this.getAccountAssets(provider);\n      });\n      provider.on(\"networkChanged\", async networkId => {\n        const {\n          web3\n        } = this.state;\n        const chainId = await web3.eth.chainId();\n        await this.setState({\n          chainId,\n          networkId\n        });\n        await this.getAccountAssets(provider);\n      });\n    };\n\n    this.getNetwork = () => getChainData(this.state.chainId).network;\n\n    this.getProviderOptions = () => {\n      const providerOptions = {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId: process.env.REACT_APP_INFURA_ID\n          }\n        },\n        torus: {\n          package: Torus\n        },\n        fortmatic: {\n          package: Fortmatic,\n          options: {\n            key: process.env.REACT_APP_FORTMATIC_KEY\n          }\n        },\n        authereum: {\n          package: Authereum\n        },\n        bitski: {\n          package: Bitski,\n          options: {\n            clientId: process.env.REACT_APP_BITSKI_CLIENT_ID,\n            callbackUrl: window.location.href + \"bitski-callback.html\"\n          }\n        }\n      };\n      return providerOptions;\n    };\n\n    this.getAccountAssets = async provider => {\n      const {\n        address,\n        chainId\n      } = this.state;\n      this.setState({\n        fetching: false\n      });\n\n      try {\n        const prov = new ethers.providers.Web3Provider(provider);\n        let balance = await prov.getBalance(address);\n        console.log('[wa]:', balance.toString(), \",\", balance);\n        let assets = [];\n        let assets2 = [];\n        let ethAsset = {\n          \"symbol\": \"ETH\",\n          \"name\": \"Ether\",\n          \"decimals\": \"18\",\n          \"contractAddress\": \"\",\n          \"balance\": balance\n        };\n        assets.push(ethAsset); // A Human-Readable ABI; any supported ABI format could be used\n\n        this.setState({\n          fetching: false,\n          assets\n        });\n      } catch (error) {\n        console.error(error); // tslint:disable-line\n\n        this.setState({\n          fetching: false\n        });\n      }\n    };\n\n    this.toggleModal = () => this.setState({\n      showModal: !this.state.showModal\n    });\n\n    this.testBalance = async () => {\n      let assets2 = [];\n      let web3 = new Web3(Web3.givenProvider);\n      const accounts = await web3.eth.getAccounts();\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function deposit(uint256 _amount) public\", \"function totalSupply() public override view returns (uint256)\", \"function balanceOf(address account) external view returns (uint256)\", \"function balance() public view returns (uint256)\", \"function available() public view returns (uint256)\", \"function balanceOfPool() public override view returns (uint256)\", \"function withdrawableBalanceOf(address account) public  view returns (uint256)\", \"function principalOf(address account) public  view returns (uint256)\"];\n      const usdt = new ethers.Contract(USDT, abi, prov.getSigner());\n      const bunny = new ethers.Contract(Bunny, abi, prov.getSigner());\n      const vaults = new ethers.Contract(Vaults, abi, prov.getSigner());\n      const gauge = new ethers.Contract(usdt_gauge, abi, prov.getSigner());\n      const stra = new ethers.Contract(StrategyCurve3CRVv2, abi, prov.getSigner());\n      this.toggleModal();\n      this.setState({\n        pendingRequest: true\n      });\n      let total = await vaults.totalSupply();\n      let ba = await vaults.balance();\n      let total_p = convertAmountFromRawNumber(total.toString(), 18);\n      let ba_p = convertAmountFromRawNumber(ba.toString(), 18);\n      console.log(` vaults  total is ${total_p} , ${ba_p}`);\n      let crv_bal = await usdt.balanceOf(Vaults);\n      let crv_bal_p = convertAmountFromRawNumber(crv_bal.toString(), 18);\n      console.log(`usdt vaults is ${crv_bal_p}`);\n      const ethAsset115 = {\n        \"symbol\": \"usdt-vaults\",\n        \"name\": \"usdt-vaults\",\n        \"decimals\": \"18\",\n        \"contractAddress\": USDT,\n        \"balance\": crv_bal\n      };\n      assets2.push(ethAsset115);\n      let str_bal = await usdt.balanceOf(StrategyCurve3CRVv2);\n      let str_bal_p = convertAmountFromRawNumber(str_bal.toString(), 18);\n      console.log(`usdt str_bal is ${str_bal_p}`);\n      const ethAsset1 = {\n        \"symbol\": \"usdt-str_bal\",\n        \"name\": \"usdt-str_bal\",\n        \"decimals\": \"18\",\n        \"contractAddress\": USDT,\n        \"balance\": str_bal\n      };\n      assets2.push(ethAsset1);\n      let g = await gauge.balanceOf(StrategyCurve3CRVv2);\n      let g_p = convertAmountFromRawNumber(g.toString(), 18);\n      let g2 = await gauge.withdrawableBalanceOf(StrategyCurve3CRVv2);\n      let g_p2 = convertAmountFromRawNumber(g2.toString(), 18);\n      let g1 = await stra.balanceOfPool();\n      let g_p1 = convertAmountFromRawNumber(g1.toString(), 18);\n      let g3 = await gauge.principalOf(StrategyCurve3CRVv2);\n      let g_p3 = convertAmountFromRawNumber(g1.toString(), 18);\n      console.log(` gauge.balanceOf(StrategyCurve3CRVv2)  is ${g_p},stra.balanceOfPool() ${g_p1}，gauge.withdrawableBalanceOf(StrategyCurve3CRVv2) ${g_p2}，stra.principalOf(StrategyCurve3CRVv2) ${g_p3}`);\n      const ethAsset2 = {\n        \"symbol\": \"bunny_gauge_bal\",\n        \"name\": \"bunny_gauge_bal\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": g\n      };\n      assets2.push(ethAsset2);\n      let b = await bunny.balanceOf(StrategyCurve3CRVv2);\n      let b_p = convertAmountFromRawNumber(b.toString(), 18);\n      console.log(`StrategyCurve3CRVv2 bunny   is ${b_p}`);\n      const ethAsset3 = {\n        \"symbol\": \"bunny_str_bal\",\n        \"name\": \"bunny__str_bal\",\n        \"decimals\": \"18\",\n        \"contractAddress\": \"\",\n        \"balance\": b\n      };\n      assets2.push(ethAsset3); // console.log(`jar.methods.testController  response :`,JSON.stringify(rep.toString()))\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null,\n        assets2\n      });\n    };\n\n    this.setController = async () => {\n      let web3 = new Web3(Web3.givenProvider);\n      const accounts = await web3.eth.getAccounts();\n      let controller = new web3.eth.Contract(ControllerV4_ABI, ControllerV4);\n      let rep = await controller.methods.setValut(USDT, Vaults).send({\n        from: accounts[0]\n      });\n      console.log(`controller.methods.setJar  response :`, JSON.stringify(rep));\n      rep = await controller.methods.approveStrategy(USDT, StrategyCurve3CRVv2).send({\n        from: accounts[0]\n      });\n      console.log(`approveStrategy rep is ${JSON.stringify(rep)}`);\n      rep = await controller.methods.setStrategy(USDT, StrategyCurve3CRVv2).send({\n        from: accounts[0]\n      });\n      console.log(`setStrategy rep is ${JSON.stringify(rep)}`);\n      rep = await controller.methods.setInvite(Invite, Vaults).send({\n        from: accounts[0]\n      });\n      console.log(`controller.setInvite  response :`, JSON.stringify(rep));\n    };\n\n    this.setStragy = async () => {\n      let web3 = new Web3(Web3.givenProvider);\n      const accounts = await web3.eth.getAccounts();\n      let stragy = new web3.eth.Contract(StrategyCurve3CRVv2_ABI, StrategyCurve3CRVv2); //设置保留的crv，之后会除以10000，设置1000，等于十分之一\n\n      let rep = await stragy.methods.setKeepCRV(0).send({\n        from: accounts[0]\n      });\n      console.log(`stragy.methods.setKeepCRV(1000)  response :`, JSON.stringify(rep));\n    };\n\n    this.testBlockNumber = async () => {\n      let web3 = new Web3(Web3.givenProvider);\n      let rep = await web3.eth.getBlockNumber();\n      console.log(`setStrategy rep is ${JSON.stringify(rep)}`);\n      const accounts = await web3.eth.getAccounts();\n      const provider = new ethers.providers.JsonRpcProvider();\n      const signer = provider.getSigner();\n    };\n\n    this.testApprove = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function approve(address spender, uint256 amount) returns (bool)\"];\n      const test = new ethers.Contract(USDT, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      }); // let rep = await test.approve(\"0x6aDA6bFaCAE91444C01bBc568C9E4D5ff116b6de\", utils.parseUnits('0', 18).toString())\n\n      let rep = await test.approve(\"0x0Ba950F0f099229828c10a9B307280a450133FFc\", utils.parseUnits('1000000000000000000000', 18).toString());\n      console.log(`approve u rep is ${JSON.stringify(rep)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testDeposit = async () => {\n      // let web3 = new Web3(Web3.givenProvider);\n      // const accounts = await web3.eth.getAccounts();\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \" function deposit(uint256 _amount) public\", \"function totalSupply() view returns (uint256)\", \"function balance() public view returns (uint256)\"];\n      const test1 = new ethers.Contract(\"0x0Ba950F0f099229828c10a9B307280a450133FFc\", abi, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let balance = await test1.balance();\n      console.log(`test1.balance  response :`, JSON.stringify(balance.toString())); // const rep = await test1.totalSupply()\n\n      const amount = parseUnits(\"10000\", 18);\n      let rep = await test1.deposit(amount);\n      console.log(`jar.methods.deposi  response :`, JSON.stringify(rep));\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testWithdraw = async () => {\n      // let web3 = new Web3(Web3.givenProvider);\n      // const accounts = await web3.eth.getAccounts();\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function withdrawAll() external\", \" function withdrawUnderlying(uint _amount) external\"];\n      const test1 = new ethers.Contract(usdt_gauge, abi, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      await test1.withdrawUnderlying(utils.parseUnits('10000', 18).toString()); // console.log(`jar.methods.withdrawAll  response :`, JSON.stringify(rep))\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testLock = async () => {\n      // let web3 = new Web3(Web3.givenProvider);\n      // const accounts = await web3.eth.getAccounts();\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function reEntrancyMutex()  view returns (bool)\", \"function emergencySetMutex(bool lock) public view returns (bool)\"];\n      const test1 = new ethers.Contract(Instabrine, abi, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let rep = await test1.reEntrancyMutex();\n      console.log(`test1.reEntrancyMutex()  response :`, JSON.stringify(rep));\n      rep = await test1.emergencySetMutex(0);\n      rep = await test1.reEntrancyMutex();\n      console.log(`test1.emergencySetMutex(true)  response :`, JSON.stringify(rep)); //\n      // rep = await test1.emergencySetMutex(false);\n      // rep = await test1.reEntrancyMutex()\n      // console.log(`test1.emergencySetMutex(false)  response :`, JSON.stringify(rep))\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testgetRatio = async () => {\n      // let web3 = new Web3(Web3.givenProvider);\n      // const accounts = await web3.eth.getAccounts();\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function getRatio() public view returns (uint256)\", \"function emergencySetMutex(bool lock) public view returns (bool)\"];\n      const test1 = new ethers.Contract(Vaults, abi, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let rep = await test1.getRatio();\n      console.log(`test1.reEntrancyMutex()  response :`, JSON.stringify(rep.toString())); // rep = await test1.emergencySetMutex(true);\n      // rep = await test1.reEntrancyMutex()\n      // console.log(`test1.emergencySetMutex(true)  response :`, JSON.stringify(rep))\n      //\n      // rep = await test1.emergencySetMutex(false);\n      // rep = await test1.reEntrancyMutex()\n      // console.log(`test1.emergencySetMutex(false)  response :`, JSON.stringify(rep))\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testEarn = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      // \"function earn() public\",\n      \"function earn(address _token, uint256 _amount) public\", \" function balance() public view returns (uint256)\", \"function available() public view returns (uint256)\", \"function balanceOf(address _token) external view returns (uint256)\", \"function approve(address spender, uint256 amount) returns (bool)\", \"function approveStrategy(address _token, address _strategy) public\", \"function deposit() public override\", \"function totalSupply() view returns (uint256)\"];\n      const abi1 = [// Authenticated Functions\n      \"function earn() public\"];\n      const jar = new ethers.Contract(Vaults, abi1, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let rep1 = await jar.earn(); //let strategy_depoist_rep = await stragy.deposit()\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testHarvest = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function harvest() public \", \"function usdp_pool() public view returns (address)\", \"function gauge() public view returns (address)\", \"function getMostPremium() public  view returns (address, uint256)\", \"function approve(address spender, uint256 amount) returns (bool)\"];\n      const strategy = new ethers.Contract(StrategyCurve3CRVv2, abi, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      }); // let rep = await strategy.gauge()\n      // console.log(`getMostPremium rep is ${rep}, coin index is :`,);\n\n      let rep1 = await strategy.harvest();\n      console.log(`testHarvest rep is ${JSON.stringify(rep1)}`);\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.resetApp = async () => {\n      const {\n        web3\n      } = this.state;\n\n      if (web3 && web3.currentProvider && web3.currentProvider.close) {\n        await web3.currentProvider.close();\n      }\n\n      await this.web3Modal.clearCachedProvider();\n      this.setState({ ...INITIAL_STATE\n      });\n    };\n\n    this.testUniApprove = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function approve(address spender, uint256 amount) returns (bool)\"];\n      const usdt = new ethers.Contract(USDT, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      }); //let rep = await usdt.approve(Instabrine, utils.parseUnits('0', 18).toString());\n\n      let rep1 = await usdt.approve(Instabrine, utils.parseUnits('10000000000000000000', 18).toString());\n      console.log(`approve USDT rep is ${JSON.stringify(rep1)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.primitiveToCurveSkyVault_1 = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [\"function primitiveToSkyVault(address underlying,uint256 amount,address vault,address inviter) public returns (uint256)\"];\n      const inst = new ethers.Contract(Instabrine, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      const amount = parseUnits(\"1000000\", 18);\n      let rep = await inst.primitiveToSkyVault(USDT, amount, Vaults, inviter);\n      console.log(`primitiveToSkyVault rep is ${JSON.stringify(rep)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.getPendingBunny = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      let web3 = new Web3(Web3.givenProvider);\n      const accounts = await web3.eth.getAccounts();\n      const abi = [// Authenticated Functions\n      \"function pendingBunny(address vault, address user) public view override returns (uint)\", \"function vaultUserInfoOf(address vault, address user) external view override returns (uint,uint,uint)\"];\n      const chef = new ethers.Contract(BunnyChef, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      }); //const amount = parseUnits(\"60000\", 6);\n\n      let rep = await chef.pendingBunny(usdt_gauge, StrategyCurve3CRVv2);\n      console.log(`getPendingBunny rep is ${JSON.stringify(rep)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.vaultUserInfoOf = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      let web3 = new Web3(Web3.givenProvider);\n      const accounts = await web3.eth.getAccounts();\n      const abi = [// Authenticated Functions\n      \"function pendingBunny(address vault, address user) public view override returns (uint)\", \"function vaultUserInfoOf(address vault, address user) external view override returns (uint,uint,uint)\"];\n      const chef = new ethers.Contract(BunnyChef, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      }); //const amount = parseUnits(\"60000\", 6);\n\n      let rep = await chef.vaultUserInfoOf(usdt_gauge, StrategyCurve3CRVv2);\n      console.log(`getPendingBunny rep is balance ${convertAmountFromRawNumber(rep[0].toString(), 18)},pending ${convertAmountFromRawNumber(rep[1].toString(), 18)},rewardPaid :${convertAmountFromRawNumber(rep[2].toString(), 18)}`);\n      rep = await chef.vaultUserInfoOf(usdt_gauge, StrategyCurve3CRVv2); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testApprovePtoken = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function approve(address spender, uint256 amount) returns (bool)\"];\n      const pjar = new ethers.Contract(Vaults, abi, prov.getSigner()); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      }); //let rep = await pjar.approve(Instabrine, utils.parseUnits('0', 18).toString())\n\n      let rep = await pjar.approve(Instabrine, MaxUint256);\n      console.log(`approve pjar rep is ${JSON.stringify(rep)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.curveSkyVaultToPrimitive_1 = async () => {\n      let web3 = new Web3(Web3.givenProvider);\n      const accounts = await web3.eth.getAccounts();\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [// Authenticated Functions\n      \"function balanceOf(address _token) external view returns (uint256)\", \"function bunnySkyVaultToPrimitive_1coin(address skyVault,uint256 amount,address underlying) public returns (uint256) \"];\n      const pjar = new ethers.Contract(Vaults, abi, prov.getSigner());\n      const inst = new ethers.Contract(Instabrine, abi, prov.getSigner()); //USDP=0 , DAI = 1, USDC = 2, USDT = 3\n\n      const tokenIndex = ethers.BigNumber.from(0); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      }); // let balanceRaw = await pjar.balanceOf(accounts[0]);\n      //\n      // const rawAmount = ethers.utils.formatEther(balanceRaw);\n      // // @ts-ignore\n      // const amount = parseUnits(rawAmount);\n\n      const amount = parseUnits(\"1000000\", 18);\n      let rep = await inst.bunnySkyVaultToPrimitive_1coin(Vaults, amount, USDT);\n      console.log(`curveSkyVaultToPrimitive_1 rep is ${JSON.stringify(amount)}`); // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.testgetReward = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider);\n      const abi = [\"function rewards(address) public view returns (uint256) \", \"function rewardPerTokenStored() public view returns (uint256) \", \"function inviter(address) public view returns (address) \", \" function getReward() public\", \" function _totalSupply() public view returns(uint256)\"];\n      const invite = new ethers.Contract(Invite, abi, prov.getSigner());\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      let rep = await invite.rewards(inviter);\n      console.log(`invite.rewards(inviter) rep is ${JSON.stringify(rep)}`);\n      rep = await invite.rewardPerTokenStored();\n      console.log(`invite.rewardPerTokenStored() rep is ${JSON.stringify(rep)}`);\n      rep = await invite.inviter(\"0xD90D00101E1Cf4729f02A5598f4288E00001FC04\");\n      console.log(`invite.inviter() rep is ${JSON.stringify(rep)}`);\n      rep = await invite._totalSupply();\n      console.log(`invite._totalSupply() rep is ${JSON.stringify(rep)}`);\n      console.log(`invite._totalSupply() rep is ${convertAmountFromRawNumber(rep.toString(), 18)}`);\n      rep = await invite.getReward();\n      this.setState({\n        pendingRequest: false,\n        result: \"ok\" || null\n      });\n    };\n\n    this.render = () => {\n      const {\n        assets,\n        assets2,\n        address,\n        connected,\n        chainId,\n        fetching,\n        showModal,\n        pendingRequest,\n        result\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(SLayout, {\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          maxWidth: 1000,\n          spanHeight: true,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            connected: connected,\n            address: address,\n            chainId: chainId,\n            killSession: this.resetApp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SContent, {\n            children: fetching ? /*#__PURE__*/_jsxDEV(Column, {\n              center: true,\n              children: /*#__PURE__*/_jsxDEV(SContainer, {\n                children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1004,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1002,\n              columnNumber: 29\n            }, this) : !!assets && !!assets.length ? /*#__PURE__*/_jsxDEV(SBalances, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Admin Setting Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.setController(),\n                    children: \"setController\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1015,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.setStragy(),\n                    children: \"setStragy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1019,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testBlockNumber(),\n                    children: \"testBlockNumber\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testBalance(),\n                    children: \"testBalance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1027,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Strategist :Deposite 3Crv\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1033,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testEarn(),\n                    children: \"testEarn\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1037,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testHarvest(),\n                    children: \"testHarvest\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1040,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.getPendingBunny(),\n                    children: \"getPendingBunny--test bunny pending balance of vault\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1044,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.vaultUserInfoOf(),\n                    children: \"vaultUserInfoOf--test bunny pending balance of vault\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1048,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testLock(),\n                    children: \"testLock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1052,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testgetRatio(),\n                    children: \"testgetRatio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1056,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testApprove(),\n                    children: \"testApprove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testDeposit(),\n                    children: \"testDeposit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1065,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testWithdraw(),\n                    children: \"testWithdraw\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1070,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1036,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"USER \\uFF1ADeposite from uni stablecoin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testUniApprove(),\n                    children: \"testUniApprove-USDC-3crv\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1081,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.primitiveToCurveSkyVault_1(),\n                    children: \"bunny-USDT\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1086,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1080,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"USER \\uFF1AWithdraw to uni stablecoin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1092,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testApprovePtoken(),\n                    children: \"testApprovePtoken\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1096,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.curveSkyVaultToPrimitive_1(),\n                    children: \"curvePickleJarToPrimitive_1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1099,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1095,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Inviter \\uFF1AWithdraw \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.testgetReward(),\n                    children: \"testgetReward\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1110,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1109,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Balances\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AccountAssets, {\n                chainId: chainId,\n                assets: assets\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1118,\n                columnNumber: 33\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Valuts Balances\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AccountAssets, {\n                chainId: chainId,\n                assets: assets2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 33\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1008,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(SLanding, {\n              center: true,\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: `Test Web3Modal`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {\n                onClick: this.onConnect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: showModal,\n          toggleModal: this.toggleModal,\n          children: pendingRequest ? /*#__PURE__*/_jsxDEV(SModalContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SModalTitle, {\n              children: \"Pending Call Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SContainer, {\n              children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SModalParagraph, {\n                children: \"Approve or reject request using your wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1132,\n            columnNumber: 25\n          }, this) : result ? /*#__PURE__*/_jsxDEV(SModalContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SModalTitle, {\n              children: \"Call Request Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ModalResult, {\n              children: result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(SModalContainer, {\n            children: /*#__PURE__*/_jsxDEV(SModalTitle, {\n              children: \"Call Request Rejected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n    this.web3Modal = new Web3Modal({\n      network: this.getNetwork(),\n      cacheProvider: true,\n      providerOptions: this.getProviderOptions()\n    });\n  }\n\n  componentDidMount() {\n    if (this.web3Modal.cachedProvider) {\n      this.onConnect();\n    }\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"SLayout\");\n$RefreshReg$(_c2, \"SContent\");\n$RefreshReg$(_c3, \"SContainer\");\n$RefreshReg$(_c4, \"SLanding\");\n$RefreshReg$(_c5, \"SModalContainer\");\n$RefreshReg$(_c6, \"SModalTitle\");\n$RefreshReg$(_c7, \"SModalParagraph\");\n$RefreshReg$(_c8, \"SBalances\");\n$RefreshReg$(_c9, \"STestButtonContainer\");\n$RefreshReg$(_c10, \"STestButton\");","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/src/App_bsc.tsx"],"names":["React","styled","Web3","Web3Modal","WalletConnectProvider","Fortmatic","Torus","Authereum","Bitski","Button","Column","Wrapper","Modal","Header","Loader","ModalResult","AccountAssets","ConnectButton","getChainData","fonts","ethers","utils","convertAmountFromRawNumber","StrategyCurve3CRVv2_ABI","require","ControllerV4_ABI","Instabrine_ABI","USDC","USDT","DAI","CAKE","BUNNY","three_crv","usdt_gauge","CRV","Bunny","Vaults","StrategyCurve3CRVv2","ControllerV4","Instabrine","Invite","_treasury","inviter","BunnyChef","parseUnits","Zero","MaxUint256","constants","parseEther","SLayout","div","SContent","SContainer","SLanding","SModalContainer","SModalTitle","SModalParagraph","p","SBalances","STestButtonContainer","STestButton","size","medium","INITIAL_STATE","fetching","address","web3","provider","connected","chainId","networkId","assets","assets2","showModal","pendingRequest","result","initWeb3","eth","extend","methods","name","call","outputFormatter","hexToNumber","App","Component","constructor","props","web3Modal","state","claim","onConnect","connect","subscribeProvider","accounts","getAccounts","net","getId","console","log","setState","getAccountAssets","on","resetApp","getNetwork","network","getProviderOptions","providerOptions","walletconnect","package","options","infuraId","process","env","REACT_APP_INFURA_ID","torus","fortmatic","key","REACT_APP_FORTMATIC_KEY","authereum","bitski","clientId","REACT_APP_BITSKI_CLIENT_ID","callbackUrl","window","location","href","prov","providers","Web3Provider","balance","getBalance","toString","ethAsset","push","error","toggleModal","testBalance","givenProvider","abi","usdt","Contract","getSigner","bunny","vaults","gauge","stra","total","totalSupply","ba","total_p","ba_p","crv_bal","balanceOf","crv_bal_p","ethAsset115","str_bal","str_bal_p","ethAsset1","g","g_p","g2","withdrawableBalanceOf","g_p2","g1","balanceOfPool","g_p1","g3","principalOf","g_p3","ethAsset2","b","b_p","ethAsset3","setController","controller","rep","setValut","send","from","JSON","stringify","approveStrategy","setStrategy","setInvite","setStragy","stragy","setKeepCRV","testBlockNumber","getBlockNumber","JsonRpcProvider","signer","testApprove","test","approve","testDeposit","test1","amount","deposit","testWithdraw","withdrawUnderlying","testLock","reEntrancyMutex","emergencySetMutex","testgetRatio","getRatio","testEarn","abi1","jar","rep1","earn","testHarvest","strategy","harvest","currentProvider","close","clearCachedProvider","testUniApprove","primitiveToCurveSkyVault_1","inst","primitiveToSkyVault","getPendingBunny","chef","pendingBunny","vaultUserInfoOf","testApprovePtoken","pjar","curveSkyVaultToPrimitive_1","tokenIndex","BigNumber","bunnySkyVaultToPrimitive_1coin","testgetReward","invite","rewards","rewardPerTokenStored","_totalSupply","getReward","render","length","cacheProvider","componentDidMount","cachedProvider"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\n\nimport Web3Modal from \"web3modal\";\n// @ts-ignore\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n// @ts-ignore\nimport Fortmatic from \"fortmatic\";\nimport Torus from \"@toruslabs/torus-embed\";\nimport Authereum from \"authereum\";\nimport {Bitski} from \"bitski\";\n\nimport Button from \"./components/Button\";\nimport Column from \"./components/Column\";\nimport Wrapper from \"./components/Wrapper\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport ModalResult from \"./components/ModalResult\";\nimport AccountAssets from \"./components/AccountAssets\";\nimport ConnectButton from \"./components/ConnectButton\";\nimport {getChainData} from \"./helpers/utilities\";\nimport {IAssetData} from \"./helpers/types\";\nimport {fonts} from \"./styles\";\nimport {ethers, utils} from 'ethers';\nimport {convertAmountFromRawNumber} from \"./helpers/bignumber\";\nimport accounts from \"web3/eth/accounts\";\n\n\nconst StrategyCurve3CRVv2_ABI = require(\"./abi/StrategyCurve3CRVv2.json\");\nconst ControllerV4_ABI = require(\"./abi/ControllerV4.json\");\n\nconst Instabrine_ABI = require(\"./abi/Instabrine.json\");\n\nconst USDC = \"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d\";\nconst USDT = \"0x55d398326f99059fF775485246999027B3197955\";\nconst DAI = \"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3\";\nconst CAKE = \"0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\";\nconst BUNNY = \"0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51\";\n\n//3crv\n// const three_crv = \"0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490\";\n// const Three_gauge = \"0xbFcF63294aD7105dEa65aA58F8AE5BE2D9d0952A\";\n// const three_pool = \"0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7\"\n//usdp group\nconst three_crv = \"0x7Eb40E450b9655f4B3cC4259BCC731c63ff55ae6\";\nconst usdt_gauge = \"0x0Ba950F0f099229828c10a9B307280a450133FFc\";\n\n\n\nconst CRV = \"0xD533a949740bb3306d119CC777fa900bA034cd52\";\nconst Bunny = \"0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51\";\n\nconst Vaults = \"0xB54aE04A1472FCdd0f3C122cF716c56415F4D853\";\nconst StrategyCurve3CRVv2 = \"0x6E7622518572571aFf70c66440B82f3Dcfef1C5D\";\nconst ControllerV4 = \"0x4801F0559606C4cfDe29360D82A3836Aa2fa915d\";\nconst Instabrine = \"0x36B466533d6bfF320E05Be310803e8b906eF9f79\";\nconst Invite = \"0x4B63e9C4f245fE52Cb693a27a746949FDb91d510\";\nconst _treasury = \"0xF2bb9641694Baa6848338CD40993681Fee936a12\"\n\nconst inviter = \"0x6d96E5266d662D7ed607CB8D88dC6447632bB298\";\nconst BunnyChef =\"0x40e31876c4322bd033BAb028474665B12c4d04CE\";\n\nconst {parseUnits} = ethers.utils;\nconst {Zero, MaxUint256} = ethers.constants;\nconst {parseEther} = ethers.utils;\n\n\nconst SLayout = styled.div`\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  text-align: center;\n`;\n\nconst SContent = styled(Wrapper)`\n  width: 100%;\n  height: 100%;\n  padding: 0 16px;\n`;\n\nconst SContainer = styled.div`\n  height: 100%;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  word-break: break-word;\n`;\n\nconst SLanding = styled(Column)`\n  height: 600px;\n`;\n\nconst SModalContainer = styled.div`\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n\nconst SModalTitle = styled.div`\n  margin: 1em 0;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nconst SModalParagraph = styled.p`\n  margin-top: 30px;\n`;\n\n// @ts-ignore\nconst SBalances = styled(SLanding)`\n  height: 100%;\n  & h3 {\n    padding-top: 30px;\n  }\n`;\n\nconst STestButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst STestButton = styled(Button)`\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  height: 44px;\n  width: 100%;\n  max-width: 175px;\n  margin: 12px;\n`;\n\ninterface IAppState {\n    fetching: boolean;\n    address: string;\n    web3: any;\n    provider: any;\n    connected: boolean;\n    chainId: number;\n    networkId: number;\n    assets: IAssetData[];\n    assets2: IAssetData[];\n    showModal: boolean;\n    pendingRequest: boolean;\n    result: any | null;\n}\n\nconst INITIAL_STATE: IAppState = {\n    fetching: false,\n    address: \"\",\n    web3: null,\n    provider: null,\n    connected: false,\n    chainId: 1,\n    networkId: 1,\n    assets: [],\n    assets2: [],\n    showModal: false,\n    pendingRequest: false,\n    result: null\n};\n\nfunction initWeb3(provider: any) {\n    const web3: any = new Web3(provider);\n\n    web3.eth.extend({\n        methods: [\n            {\n                name: \"chainId\",\n                call: \"eth_chainId\",\n                outputFormatter: web3.utils.hexToNumber\n            }\n        ]\n    });\n\n    return web3;\n}\n\nclass App extends React.Component<any, any> {\n    // @ts-ignore\n    public web3Modal: Web3Modal;\n    public state: IAppState;\n\n    public claim: string = \"0x5aa37930cbe5f4b04d617f71f78abc6c21be4cc0\";\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            ...INITIAL_STATE\n        };\n\n        this.web3Modal = new Web3Modal({\n            network: this.getNetwork(),\n            cacheProvider: true,\n            providerOptions: this.getProviderOptions()\n        });\n    }\n\n    public componentDidMount() {\n        if (this.web3Modal.cachedProvider) {\n            this.onConnect();\n        }\n    }\n\n    public onConnect = async () => {\n        const provider = await this.web3Modal.connect();\n\n        await this.subscribeProvider(provider);\n\n        const web3: any = initWeb3(provider);\n\n        const accounts = await web3.eth.getAccounts();\n\n        const address = accounts[0];\n\n        const networkId = await web3.eth.net.getId();\n\n        const chainId = await web3.eth.chainId();\n\n        console.log(`chainId is ${chainId}  networkId ${networkId}`)\n\n        await this.setState({\n            web3,\n            provider,\n            connected: true,\n            address,\n            chainId,\n            networkId\n        });\n\n        await this.getAccountAssets(provider);\n    };\n\n    public subscribeProvider = async (provider: any) => {\n        if (!provider.on) {\n            return;\n        }\n        provider.on(\"close\", () => this.resetApp());\n        provider.on(\"accountsChanged\", async (accounts: string[]) => {\n            await this.setState({address: accounts[0]});\n            await this.getAccountAssets(provider);\n        });\n        provider.on(\"chainChanged\", async (chainId: number) => {\n            const {web3} = this.state;\n            const networkId = await web3.eth.net.getId();\n            await this.setState({chainId, networkId});\n            await this.getAccountAssets(provider);\n        });\n\n        provider.on(\"networkChanged\", async (networkId: number) => {\n            const {web3} = this.state;\n            const chainId = await web3.eth.chainId();\n            await this.setState({chainId, networkId});\n            await this.getAccountAssets(provider);\n        });\n    };\n\n    public getNetwork = () => getChainData(this.state.chainId).network;\n\n    public getProviderOptions = () => {\n        const providerOptions = {\n            walletconnect: {\n                package: WalletConnectProvider,\n                options: {\n                    infuraId: process.env.REACT_APP_INFURA_ID\n                }\n            },\n            torus: {\n                package: Torus\n            },\n            fortmatic: {\n                package: Fortmatic,\n                options: {\n                    key: process.env.REACT_APP_FORTMATIC_KEY\n                }\n            },\n            authereum: {\n                package: Authereum\n            },\n            bitski: {\n                package: Bitski,\n                options: {\n                    clientId: process.env.REACT_APP_BITSKI_CLIENT_ID,\n                    callbackUrl: window.location.href + \"bitski-callback.html\"\n                }\n            }\n        };\n        return providerOptions;\n    };\n\n    public getAccountAssets = async (provider: any) => {\n        const {address, chainId} = this.state;\n        this.setState({fetching: false});\n        try {\n            const prov = new ethers.providers.Web3Provider(provider)\n            let balance = await prov.getBalance(address);\n            console.log('[wa]:', balance.toString(), \",\", balance)\n            let assets = [];\n            let assets2 = [];\n            let ethAsset = {\n                \"symbol\": \"ETH\",\n                \"name\": \"Ether\",\n                \"decimals\": \"18\",\n                \"contractAddress\": \"\",\n                \"balance\": balance\n            };\n            assets.push(ethAsset);\n            // A Human-Readable ABI; any supported ABI format could be used\n\n\n            this.setState({fetching: false, assets});\n        } catch (error) {\n            console.error(error); // tslint:disable-line\n            this.setState({fetching: false});\n        }\n\n    };\n\n    public toggleModal = () =>\n        this.setState({showModal: !this.state.showModal});\n\n    public testBalance = async () => {\n        let assets2 = [];\n        let web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function deposit(uint256 _amount) public\",\n            \"function totalSupply() public override view returns (uint256)\",\n            \"function balanceOf(address account) external view returns (uint256)\",\n            \"function balance() public view returns (uint256)\",\n            \"function available() public view returns (uint256)\",\n            \"function balanceOfPool() public override view returns (uint256)\",\n            \"function withdrawableBalanceOf(address account) public  view returns (uint256)\",\n            \"function principalOf(address account) public  view returns (uint256)\",\n        ];\n        const usdt = new ethers.Contract(USDT, abi, prov.getSigner());\n        const bunny = new ethers.Contract(Bunny, abi, prov.getSigner());\n        const vaults = new ethers.Contract(Vaults, abi, prov.getSigner());\n        const gauge = new ethers.Contract(usdt_gauge,abi,prov.getSigner());\n        const stra = new ethers.Contract(StrategyCurve3CRVv2,abi,prov.getSigner());\n\n\n        this.toggleModal();\n        this.setState({pendingRequest: true});\n\n\n        let total = await vaults.totalSupply()\n        let ba = await vaults.balance()\n        let total_p = convertAmountFromRawNumber(total.toString(), 18)\n        let ba_p = convertAmountFromRawNumber(ba.toString(), 18)\n        console.log(` vaults  total is ${total_p} , ${ba_p}`)\n\n        let crv_bal = await usdt.balanceOf(Vaults)\n        let crv_bal_p = convertAmountFromRawNumber(crv_bal.toString(), 18)\n        console.log(`usdt vaults is ${crv_bal_p}`)\n\n\n        const ethAsset115 = {\n            \"symbol\": \"usdt-vaults\",\n            \"name\": \"usdt-vaults\",\n            \"decimals\": \"18\",\n            \"contractAddress\": USDT,\n            \"balance\": crv_bal\n        };\n        assets2.push(ethAsset115);\n\n        let str_bal = await usdt.balanceOf(StrategyCurve3CRVv2)\n        let str_bal_p = convertAmountFromRawNumber(str_bal.toString(), 18)\n        console.log(`usdt str_bal is ${str_bal_p}`)\n\n\n        const ethAsset1 = {\n            \"symbol\": \"usdt-str_bal\",\n            \"name\": \"usdt-str_bal\",\n            \"decimals\": \"18\",\n            \"contractAddress\": USDT,\n            \"balance\": str_bal\n        };\n        assets2.push(ethAsset1);\n\n        let g = await gauge.balanceOf(StrategyCurve3CRVv2)\n        let g_p = convertAmountFromRawNumber(g.toString(), 18)\n\n        let g2 = await gauge.withdrawableBalanceOf(StrategyCurve3CRVv2)\n        let g_p2 = convertAmountFromRawNumber(g2.toString(), 18)\n\n        let g1 = await stra.balanceOfPool()\n        let g_p1 = convertAmountFromRawNumber(g1.toString(), 18)\n\n        let g3 = await gauge.principalOf(StrategyCurve3CRVv2)\n        let g_p3 = convertAmountFromRawNumber(g1.toString(), 18)\n        console.log(` gauge.balanceOf(StrategyCurve3CRVv2)  is ${g_p},stra.balanceOfPool() ${g_p1}，gauge.withdrawableBalanceOf(StrategyCurve3CRVv2) ${g_p2}，stra.principalOf(StrategyCurve3CRVv2) ${g_p3}`)\n\n\n        const ethAsset2 = {\n            \"symbol\": \"bunny_gauge_bal\",\n            \"name\": \"bunny_gauge_bal\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": g\n        };\n        assets2.push(ethAsset2);\n\n\n        let b = await bunny.balanceOf(StrategyCurve3CRVv2);\n        let b_p = convertAmountFromRawNumber(b.toString(), 18)\n        console.log(`StrategyCurve3CRVv2 bunny   is ${b_p}`)\n\n\n        const ethAsset3 = {\n            \"symbol\": \"bunny_str_bal\",\n            \"name\": \"bunny__str_bal\",\n            \"decimals\": \"18\",\n            \"contractAddress\": \"\",\n            \"balance\": b\n        };\n        assets2.push(ethAsset3);\n\n\n\n\n\n        // console.log(`jar.methods.testController  response :`,JSON.stringify(rep.toString()))\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null,\n            assets2\n        });\n    }\n    public setController = async () => {\n        let web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n\n        let controller = new web3.eth.Contract(\n            ControllerV4_ABI,\n            ControllerV4,\n        );\n\n        let rep = await controller.methods.setValut(USDT, Vaults).send({from: accounts[0]})\n        console.log(`controller.methods.setJar  response :`, JSON.stringify(rep))\n\n\n        rep = await controller.methods.approveStrategy(USDT, StrategyCurve3CRVv2).send({from: accounts[0]})\n\n        console.log(`approveStrategy rep is ${JSON.stringify(rep)}`)\n\n        rep = await controller.methods.setStrategy(USDT, StrategyCurve3CRVv2).send({from: accounts[0]})\n\n        console.log(`setStrategy rep is ${JSON.stringify(rep)}`)\n\n        rep = await controller.methods.setInvite(Invite, Vaults).send({from: accounts[0]})\n        console.log(`controller.setInvite  response :`, JSON.stringify(rep))\n\n\n    }\n\n    public setStragy = async () => {\n        let web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n\n        let stragy = new web3.eth.Contract(\n            StrategyCurve3CRVv2_ABI,\n            StrategyCurve3CRVv2,\n        );\n\n        //设置保留的crv，之后会除以10000，设置1000，等于十分之一\n        let rep = await stragy.methods.setKeepCRV(0).send({from: accounts[0]})\n        console.log(`stragy.methods.setKeepCRV(1000)  response :`, JSON.stringify(rep))\n\n\n    }\n\n    public testBlockNumber = async () => {\n        let web3 = new Web3(Web3.givenProvider);\n        let rep = await web3.eth.getBlockNumber()\n        console.log(`setStrategy rep is ${JSON.stringify(rep)}`)\n        const accounts = await web3.eth.getAccounts();\n\n\n        const provider = new ethers.providers.JsonRpcProvider();\n\n        const signer = provider.getSigner()\n\n\n    }\n\n\n    public testApprove = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n        ];\n        const test = new ethers.Contract(USDT, abi, prov.getSigner());\n\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n       // let rep = await test.approve(\"0x6aDA6bFaCAE91444C01bBc568C9E4D5ff116b6de\", utils.parseUnits('0', 18).toString())\n        let  rep = await test.approve(\"0x0Ba950F0f099229828c10a9B307280a450133FFc\", utils.parseUnits('1000000000000000000000', 18).toString())\n        console.log(`approve u rep is ${JSON.stringify(rep)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n    // 测试交易match A地址300TEST2币  B地址200TEST1币  交易match\n    public testDeposit = async () => {\n        // let web3 = new Web3(Web3.givenProvider);\n        // const accounts = await web3.eth.getAccounts();\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \" function deposit(uint256 _amount) public\",\n            \"function totalSupply() view returns (uint256)\",\n            \"function balance() public view returns (uint256)\",\n        ];\n        const test1 = new ethers.Contract(\"0x0Ba950F0f099229828c10a9B307280a450133FFc\", abi, prov.getSigner());\n\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        let balance = await test1.balance()\n        console.log(`test1.balance  response :`, JSON.stringify(balance.toString()))\n        // const rep = await test1.totalSupply()\n        const amount = parseUnits(\"10000\", 18);\n        let rep = await test1.deposit(amount)\n\n\n        console.log(`jar.methods.deposi  response :`, JSON.stringify(rep))\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null,\n\n\n        });\n\n\n    }\n\n    public testWithdraw = async () => {\n\n        // let web3 = new Web3(Web3.givenProvider);\n        // const accounts = await web3.eth.getAccounts();\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function withdrawAll() external\",\n            \" function withdrawUnderlying(uint _amount) external\"\n        ];\n        const test1 = new ethers.Contract(usdt_gauge, abi, prov.getSigner());\n\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n\n        await test1.withdrawUnderlying(utils.parseUnits('10000', 18).toString())\n\n\n        // console.log(`jar.methods.withdrawAll  response :`, JSON.stringify(rep))\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n\n\n    }\n\n    public testLock = async () => {\n\n        // let web3 = new Web3(Web3.givenProvider);\n        // const accounts = await web3.eth.getAccounts();\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function reEntrancyMutex()  view returns (bool)\",\n            \"function emergencySetMutex(bool lock) public view returns (bool)\",\n\n        ];\n        const test1 = new ethers.Contract(Instabrine, abi, prov.getSigner());\n\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n\n        let rep = await test1.reEntrancyMutex()\n        console.log(`test1.reEntrancyMutex()  response :`, JSON.stringify(rep))\n\n        rep = await test1.emergencySetMutex(0);\n        rep = await test1.reEntrancyMutex()\n        console.log(`test1.emergencySetMutex(true)  response :`, JSON.stringify(rep))\n        //\n        // rep = await test1.emergencySetMutex(false);\n        // rep = await test1.reEntrancyMutex()\n        // console.log(`test1.emergencySetMutex(false)  response :`, JSON.stringify(rep))\n\n\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n\n\n    }\n\n    public testgetRatio = async () => {\n\n        // let web3 = new Web3(Web3.givenProvider);\n        // const accounts = await web3.eth.getAccounts();\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function getRatio() public view returns (uint256)\",\n            \"function emergencySetMutex(bool lock) public view returns (bool)\",\n\n        ];\n        const test1 = new ethers.Contract(Vaults, abi, prov.getSigner());\n\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n\n        let rep = await test1.getRatio()\n        console.log(`test1.reEntrancyMutex()  response :`, JSON.stringify(rep.toString()))\n\n        // rep = await test1.emergencySetMutex(true);\n        // rep = await test1.reEntrancyMutex()\n        // console.log(`test1.emergencySetMutex(true)  response :`, JSON.stringify(rep))\n        //\n        // rep = await test1.emergencySetMutex(false);\n        // rep = await test1.reEntrancyMutex()\n        // console.log(`test1.emergencySetMutex(false)  response :`, JSON.stringify(rep))\n\n\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n\n\n    }\n\n\n\n\n    public testEarn = async () => {\n\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n\n            // \"function earn() public\",\n            \"function earn(address _token, uint256 _amount) public\",\n            \" function balance() public view returns (uint256)\",\n            \"function available() public view returns (uint256)\",\n            \"function balanceOf(address _token) external view returns (uint256)\",\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n            \"function approveStrategy(address _token, address _strategy) public\",\n            \"function deposit() public override\",\n            \"function totalSupply() view returns (uint256)\",\n        ];\n\n        const abi1 = [\n            // Authenticated Functions\n            \"function earn() public\",\n        ];\n\n        const jar = new ethers.Contract(Vaults, abi1, prov.getSigner());\n\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n        let rep1 = await jar.earn()\n\n        //let strategy_depoist_rep = await stragy.deposit()\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n\n    }\n    public testHarvest = async () => {\n\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function harvest() public \",\n            \"function usdp_pool() public view returns (address)\",\n            \"function gauge() public view returns (address)\",\n            \"function getMostPremium() public  view returns (address, uint256)\",\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n        ];\n\n        const strategy = new ethers.Contract(StrategyCurve3CRVv2, abi, prov.getSigner());\n\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        // let rep = await strategy.gauge()\n        // console.log(`getMostPremium rep is ${rep}, coin index is :`,);\n\n        let rep1 = await strategy.harvest()\n        console.log(`testHarvest rep is ${JSON.stringify(rep1)}`,);\n\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n\n    }\n\n\n    public resetApp = async () => {\n        const {web3} = this.state;\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        await this.web3Modal.clearCachedProvider();\n        this.setState({...INITIAL_STATE});\n    };\n\n\n    public testUniApprove = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n        ];\n        const usdt = new ethers.Contract(USDT, abi, prov.getSigner());\n\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n\n        //let rep = await usdt.approve(Instabrine, utils.parseUnits('0', 18).toString());\n        let rep1 = await usdt.approve(Instabrine, utils.parseUnits('10000000000000000000', 18).toString())\n        console.log(`approve USDT rep is ${JSON.stringify(rep1)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n\n\n\n    public primitiveToCurveSkyVault_1 = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n\n\n            \"function primitiveToSkyVault(address underlying,uint256 amount,address vault,address inviter) public returns (uint256)\",\n        ];\n        const inst = new ethers.Contract(Instabrine, abi, prov.getSigner());\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        const amount = parseUnits(\"1000000\", 18);\n        let rep = await inst.primitiveToSkyVault(\n            USDT,\n            amount,\n            Vaults,\n            inviter\n        )\n        console.log(`primitiveToSkyVault rep is ${JSON.stringify(rep)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n\n    public getPendingBunny= async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        let web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n        const abi = [\n            // Authenticated Functions\n            \"function pendingBunny(address vault, address user) public view override returns (uint)\",\n            \"function vaultUserInfoOf(address vault, address user) external view override returns (uint,uint,uint)\"\n\n        ];\n        const chef = new ethers.Contract(BunnyChef, abi, prov.getSigner());\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        //const amount = parseUnits(\"60000\", 6);\n\n        let rep = await chef.pendingBunny(usdt_gauge,StrategyCurve3CRVv2)\n\n        console.log(`getPendingBunny rep is ${JSON.stringify(rep)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n    public vaultUserInfoOf= async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        let web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n        const abi = [\n            // Authenticated Functions\n            \"function pendingBunny(address vault, address user) public view override returns (uint)\",\n            \"function vaultUserInfoOf(address vault, address user) external view override returns (uint,uint,uint)\"\n\n        ];\n        const chef = new ethers.Contract(BunnyChef, abi, prov.getSigner());\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        //const amount = parseUnits(\"60000\", 6);\n\n        let rep = await chef.vaultUserInfoOf(usdt_gauge,StrategyCurve3CRVv2)\n\n        console.log(`getPendingBunny rep is balance ${convertAmountFromRawNumber(rep[0].toString(), 18)},pending ${convertAmountFromRawNumber(rep[1].toString(),\n            18)},rewardPaid :${convertAmountFromRawNumber(rep[2].toString(), 18)}`)\n        rep = await chef.vaultUserInfoOf(usdt_gauge,StrategyCurve3CRVv2)\n\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n\n    public testApprovePtoken = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function approve(address spender, uint256 amount) returns (bool)\",\n        ];\n        const pjar = new ethers.Contract(Vaults, abi, prov.getSigner());\n\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n        //let rep = await pjar.approve(Instabrine, utils.parseUnits('0', 18).toString())\n        let rep = await pjar.approve(Instabrine, MaxUint256)\n\n\n        console.log(`approve pjar rep is ${JSON.stringify(rep)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n\n    public curveSkyVaultToPrimitive_1 = async () => {\n        let web3 = new Web3(Web3.givenProvider);\n        const accounts = await web3.eth.getAccounts();\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            // Authenticated Functions\n            \"function balanceOf(address _token) external view returns (uint256)\",\n            \"function bunnySkyVaultToPrimitive_1coin(address skyVault,uint256 amount,address underlying) public returns (uint256) \",\n        ];\n        const pjar = new ethers.Contract(Vaults, abi, prov.getSigner());\n        const inst = new ethers.Contract(Instabrine, abi, prov.getSigner());\n        //USDP=0 , DAI = 1, USDC = 2, USDT = 3\n        const tokenIndex = ethers.BigNumber.from(0);\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n\n        // let balanceRaw = await pjar.balanceOf(accounts[0]);\n        //\n        // const rawAmount = ethers.utils.formatEther(balanceRaw);\n        // // @ts-ignore\n        // const amount = parseUnits(rawAmount);\n        const amount = parseUnits(\"1000000\", 18);\n        let rep = await inst.bunnySkyVaultToPrimitive_1coin(\n            Vaults,\n            amount,\n            USDT\n        )\n        console.log(`curveSkyVaultToPrimitive_1 rep is ${JSON.stringify(amount)}`)\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n    }\n\n    public testgetReward = async () => {\n\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        const abi = [\n            \"function rewards(address) public view returns (uint256) \",\n            \"function rewardPerTokenStored() public view returns (uint256) \",\n            \"function inviter(address) public view returns (address) \",\n            \" function getReward() public\",\n            \" function _totalSupply() public view returns(uint256)\"\n        ];\n        const invite = new ethers.Contract(Invite, abi, prov.getSigner());\n\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n        let rep = await invite.rewards(inviter)\n        console.log(`invite.rewards(inviter) rep is ${JSON.stringify(rep)}`)\n        rep = await invite.rewardPerTokenStored()\n        console.log(`invite.rewardPerTokenStored() rep is ${JSON.stringify(rep)}`)\n        rep = await invite.inviter(\"0xD90D00101E1Cf4729f02A5598f4288E00001FC04\")\n        console.log(`invite.inviter() rep is ${JSON.stringify(rep)}`)\n        rep = await invite._totalSupply()\n        console.log(`invite._totalSupply() rep is ${JSON.stringify(rep)}`);\n        console.log(`invite._totalSupply() rep is ${convertAmountFromRawNumber(rep.toString(), 18)}`)\n        rep = await invite.getReward()\n\n        this.setState({\n            pendingRequest: false,\n            result: \"ok\" || null\n        });\n\n\n    }\n\n    public render = () => {\n        const {\n            assets,\n            assets2,\n            address,\n            connected,\n            chainId,\n            fetching,\n            showModal,\n            pendingRequest,\n            result\n        } = this.state;\n        return (\n            <SLayout>\n                <Column maxWidth={1000} spanHeight>\n                    <Header\n                        connected={connected}\n                        address={address}\n                        chainId={chainId}\n                        killSession={this.resetApp}\n                    />\n                    <SContent>\n                        {fetching ? (\n                            <Column center>\n                                <SContainer>\n                                    <Loader/>\n                                </SContainer>\n                            </Column>\n                        ) : !!assets && !!assets.length ? (\n                            <SBalances>\n                                <h6>Admin Setting Actions</h6>\n                                <Column center>\n\n                                    <STestButtonContainer>\n\n\n                                        <STestButton left onClick={() => this.setController()}>\n                                            setController\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.setStragy()}>\n                                            setStragy\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.testBlockNumber()}>\n                                            testBlockNumber\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.testBalance()}>\n                                            testBalance\n                                        </STestButton>\n\n                                    </STestButtonContainer>\n                                </Column>\n                                <h6>Strategist :Deposite 3Crv</h6>\n                                <Column center>\n\n                                    <STestButtonContainer>\n                                        <STestButton left onClick={() => this.testEarn()}>\n                                            testEarn\n                                        </STestButton>\n                                        <STestButton left onClick={() => this.testHarvest()}>\n                                            testHarvest\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.getPendingBunny()}>\n                                            getPendingBunny--test bunny pending balance of vault\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.vaultUserInfoOf()}>\n                                            vaultUserInfoOf--test bunny pending balance of vault\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.testLock()}>\n                                            testLock\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.testgetRatio()}>\n                                            testgetRatio\n                                        </STestButton>\n\n                                        <STestButton left onClick={() => this.testApprove()}>\n                                            testApprove\n                                        </STestButton>\n\n\n                                        <STestButton left onClick={() => this.testDeposit()}>\n                                            testDeposit\n                                        </STestButton>\n\n\n                                        <STestButton left onClick={() => this.testWithdraw()}>\n                                            testWithdraw\n                                        </STestButton>\n\n\n                                    </STestButtonContainer>\n                                </Column>\n                                <h6>USER ：Deposite from uni stablecoin</h6>\n                                <Column center>\n\n                                    <STestButtonContainer>\n                                        <STestButton left onClick={() => this.testUniApprove()}>\n                                            testUniApprove-USDC-3crv\n                                        </STestButton>\n\n\n                                        <STestButton left onClick={() => this.primitiveToCurveSkyVault_1()}>\n                                            bunny-USDT\n                                        </STestButton>\n\n                                    </STestButtonContainer>\n                                </Column>\n                                <h6>USER ：Withdraw to uni stablecoin</h6>\n                                <Column center>\n\n                                    <STestButtonContainer>\n                                        <STestButton left onClick={() => this.testApprovePtoken()}>\n                                            testApprovePtoken\n                                        </STestButton>\n                                        <STestButton left onClick={() => this.curveSkyVaultToPrimitive_1()}>\n                                            curvePickleJarToPrimitive_1\n                                        </STestButton>\n\n\n                                    </STestButtonContainer>\n                                </Column>\n                                <h6>Inviter ：Withdraw </h6>\n                                <Column center>\n\n                                    <STestButtonContainer>\n                                        <STestButton left onClick={() => this.testgetReward()}>\n                                            testgetReward\n                                        </STestButton>\n\n\n                                    </STestButtonContainer>\n                                </Column>\n                                <h6>Balances</h6>\n                                <AccountAssets chainId={chainId} assets={assets}/>{\" \"}\n                                <h6>Valuts Balances</h6>\n                                <AccountAssets chainId={chainId} assets={assets2}/>{\" \"}\n                            </SBalances>\n                        ) : (\n                            <SLanding center>\n                                <h6>{`Test Web3Modal`}</h6>\n                                <ConnectButton onClick={this.onConnect}/>\n                            </SLanding>\n                        )}\n                    </SContent>\n                </Column>\n                <Modal show={showModal} toggleModal={this.toggleModal}>\n                    {pendingRequest ? (\n                        <SModalContainer>\n                            <SModalTitle>{\"Pending Call Request\"}</SModalTitle>\n                            <SContainer>\n                                <Loader/>\n                                <SModalParagraph>\n                                    {\"Approve or reject request using your wallet\"}\n                                </SModalParagraph>\n                            </SContainer>\n                        </SModalContainer>\n                    ) : result ? (\n                        <SModalContainer>\n                            <SModalTitle>{\"Call Request Approved\"}</SModalTitle>\n                            <ModalResult>{result}</ModalResult>\n                        </SModalContainer>\n                    ) : (\n                        <SModalContainer>\n                            <SModalTitle>{\"Call Request Rejected\"}</SModalTitle>\n                        </SModalContainer>\n                    )}\n                </Modal>\n            </SLayout>\n        );\n    };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}