{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenRequest = exports.GRANT_TYPE_REFRESH_TOKEN = exports.GRANT_TYPE_AUTHORIZATION_CODE = void 0;\nexports.GRANT_TYPE_AUTHORIZATION_CODE = 'authorization_code';\nexports.GRANT_TYPE_REFRESH_TOKEN = 'refresh_token';\n/**\n * Represents an Access Token request.\n * For more information look at:\n * https://tools.ietf.org/html/rfc6749#section-4.1.3\n */\n\nvar TokenRequest =\n/** @class */\nfunction () {\n  function TokenRequest(request) {\n    this.clientId = request.client_id;\n    this.redirectUri = request.redirect_uri;\n    this.grantType = request.grant_type;\n    this.code = request.code;\n    this.refreshToken = request.refresh_token;\n    this.extras = request.extras;\n  }\n  /**\n   * Serializes a TokenRequest to a JavaScript object.\n   */\n\n\n  TokenRequest.prototype.toJson = function () {\n    return {\n      grant_type: this.grantType,\n      code: this.code,\n      refresh_token: this.refreshToken,\n      redirect_uri: this.redirectUri,\n      client_id: this.clientId,\n      extras: this.extras\n    };\n  };\n\n  TokenRequest.prototype.toStringMap = function () {\n    var map = {\n      grant_type: this.grantType,\n      client_id: this.clientId,\n      redirect_uri: this.redirectUri\n    };\n\n    if (this.code) {\n      map['code'] = this.code;\n    }\n\n    if (this.refreshToken) {\n      map['refresh_token'] = this.refreshToken;\n    } // copy over extras\n\n\n    if (this.extras) {\n      for (var extra in this.extras) {\n        if (this.extras.hasOwnProperty(extra) && !map.hasOwnProperty(extra)) {\n          // check before inserting to requestMap\n          map[extra] = this.extras[extra];\n        }\n      }\n    }\n\n    return map;\n  };\n\n  return TokenRequest;\n}();\n\nexports.TokenRequest = TokenRequest;","map":{"version":3,"sources":["../src/token_request.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;AAYG;;;;;;AAIU,OAAA,CAAA,6BAAA,GAAgC,oBAAhC;AACA,OAAA,CAAA,wBAAA,GAA2B,eAA3B;AAcb;;;;AAIG;;AACH,IAAA,YAAA;AAAA;AAAA,YAAA;AAQE,WAAA,YAAA,CAAY,OAAZ,EAAqC;AACnC,SAAK,QAAL,GAAgB,OAAO,CAAC,SAAxB;AACA,SAAK,WAAL,GAAmB,OAAO,CAAC,YAA3B;AACA,SAAK,SAAL,GAAiB,OAAO,CAAC,UAAzB;AACA,SAAK,IAAL,GAAY,OAAO,CAAC,IAApB;AACA,SAAK,YAAL,GAAoB,OAAO,CAAC,aAA5B;AACA,SAAK,MAAL,GAAc,OAAO,CAAC,MAAtB;AACD;AAED;;AAEG;;;AACH,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,WAAO;AACL,MAAA,UAAU,EAAE,KAAK,SADZ;AAEL,MAAA,IAAI,EAAE,KAAK,IAFN;AAGL,MAAA,aAAa,EAAE,KAAK,YAHf;AAIL,MAAA,YAAY,EAAE,KAAK,WAJd;AAKL,MAAA,SAAS,EAAE,KAAK,QALX;AAML,MAAA,MAAM,EAAE,KAAK;AANR,KAAP;AAQD,GATD;;AAWA,EAAA,YAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,QAAI,GAAG,GAAc;AACnB,MAAA,UAAU,EAAE,KAAK,SADE;AAEnB,MAAA,SAAS,EAAE,KAAK,QAFG;AAGnB,MAAA,YAAY,EAAE,KAAK;AAHA,KAArB;;AAMA,QAAI,KAAK,IAAT,EAAe;AACb,MAAA,GAAG,CAAC,MAAD,CAAH,GAAc,KAAK,IAAnB;AACD;;AAED,QAAI,KAAK,YAAT,EAAuB;AACrB,MAAA,GAAG,CAAC,eAAD,CAAH,GAAuB,KAAK,YAA5B;AACD,KAbH,CAeE;;;AACA,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,IAAI,KAAT,IAAkB,KAAK,MAAvB,EAA+B;AAC7B,YAAI,KAAK,MAAL,CAAY,cAAZ,CAA2B,KAA3B,KAAqC,CAAC,GAAG,CAAC,cAAJ,CAAmB,KAAnB,CAA1C,EAAqE;AACnE;AACA,UAAA,GAAG,CAAC,KAAD,CAAH,GAAa,KAAK,MAAL,CAAY,KAAZ,CAAb;AACD;AACF;AACF;;AACD,WAAO,GAAP;AACD,GAzBD;;AA0BF,SAAA,YAAA;AAAC,CAzDD,EAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA","sourcesContent":["/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the\n * License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {StringMap} from './types';\n\nexport const GRANT_TYPE_AUTHORIZATION_CODE = 'authorization_code';\nexport const GRANT_TYPE_REFRESH_TOKEN = 'refresh_token';\n\n/**\n * Represents the Token Request as JSON.\n */\nexport interface TokenRequestJson {\n  grant_type: string;\n  code?: string;\n  refresh_token?: string, redirect_uri: string;\n  client_id: string;\n  extras?: StringMap;\n}\n\n\n/**\n * Represents an Access Token request.\n * For more information look at:\n * https://tools.ietf.org/html/rfc6749#section-4.1.3\n */\nexport class TokenRequest {\n  clientId: string;\n  redirectUri: string;\n  grantType: string;\n  code: string|undefined;\n  refreshToken: string|undefined;\n  extras: StringMap|undefined\n\n  constructor(request: TokenRequestJson) {\n    this.clientId = request.client_id;\n    this.redirectUri = request.redirect_uri;\n    this.grantType = request.grant_type;\n    this.code = request.code;\n    this.refreshToken = request.refresh_token;\n    this.extras = request.extras;\n  }\n\n  /**\n   * Serializes a TokenRequest to a JavaScript object.\n   */\n  toJson(): TokenRequestJson {\n    return {\n      grant_type: this.grantType,\n      code: this.code,\n      refresh_token: this.refreshToken,\n      redirect_uri: this.redirectUri,\n      client_id: this.clientId,\n      extras: this.extras\n    };\n  }\n\n  toStringMap(): StringMap {\n    let map: StringMap = {\n      grant_type: this.grantType,\n      client_id: this.clientId,\n      redirect_uri: this.redirectUri\n    };\n\n    if (this.code) {\n      map['code'] = this.code;\n    }\n\n    if (this.refreshToken) {\n      map['refresh_token'] = this.refreshToken;\n    }\n\n    // copy over extras\n    if (this.extras) {\n      for (let extra in this.extras) {\n        if (this.extras.hasOwnProperty(extra) && !map.hasOwnProperty(extra)) {\n          // check before inserting to requestMap\n          map[extra] = this.extras[extra];\n        }\n      }\n    }\n    return map;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}