{"ast":null,"code":"var _jsxFileName = \"/Users/helen/fi/protocol-demo/frontend/src/App_sign.tsx\";\n\n/*\n * @Author: your name\n * @Date: 2021-05-22 00:27:06\n * @LastEditTime: 2021-05-22 01:03:13\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /frontend/src/App_sign.tsx\n */\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\"; // @ts-ignore\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"; // @ts-ignore\n\nimport Fortmatic from \"fortmatic\";\nimport Torus from \"@toruslabs/torus-embed\";\nimport Authereum from \"authereum\";\nimport { Bitski } from \"bitski\";\nimport Button from \"./components/Button\";\nimport Column from \"./components/Column\";\nimport Wrapper from \"./components/Wrapper\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport ModalResult from \"./components/ModalResult\";\nimport ConnectButton from \"./components/ConnectButton\";\nimport { getChainData } from \"./helpers/utilities\";\nimport { fonts } from \"./styles\";\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  parseUnits\n} = ethers.utils;\nconst {\n  Zero,\n  MaxUint256\n} = ethers.constants;\nconst {\n  parseEther\n} = ethers.utils;\nconst SLayout = styled.div`\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  text-align: center;\n`;\n_c = SLayout;\nconst SContent = styled(Wrapper)`\n  width: 100%;\n  height: 100%;\n  padding: 0 16px;\n`;\n_c2 = SContent;\nconst SContainer = styled.div`\n  height: 100%;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  word-break: break-word;\n`;\n_c3 = SContainer;\nconst SLanding = styled(Column)`\n  height: 600px;\n`;\n_c4 = SLanding;\nconst SModalContainer = styled.div`\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n_c5 = SModalContainer;\nconst SModalTitle = styled.div`\n  margin: 1em 0;\n  font-size: 20px;\n  font-weight: 700;\n`;\n_c6 = SModalTitle;\nconst SModalParagraph = styled.p`\n  margin-top: 30px;\n`; // @ts-ignore\n\n_c7 = SModalParagraph;\nconst SBalances = styled(SLanding)`\n  height: 100%;\n  & h3 {\n    padding-top: 30px;\n  }\n`;\n_c8 = SBalances;\nconst STestButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n_c9 = STestButtonContainer;\nconst STestButton = styled(Button)`\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  height: 44px;\n  width: 100%;\n  max-width: 175px;\n  margin: 12px;\n`;\n_c10 = STestButton;\nconst STestInput = styled.textarea`\n    background-color: #f9f9f9;\n    border: 0;\n    border-radius: 4px;\n    height: 200px;\n    padding: 13px 15px;\n    resize: none;\n    width: 100%;\n`;\n_c11 = STestInput;\nconst INITIAL_STATE = {\n  fetching: false,\n  address: \"\",\n  web3: null,\n  provider: null,\n  connected: false,\n  chainId: 1,\n  networkId: 1,\n  assets: [],\n  assets2: [],\n  showModal: false,\n  pendingRequest: false,\n  result: null,\n  message: \"\"\n};\n\nfunction initWeb3(provider) {\n  const web3 = new Web3(provider);\n  web3.eth.extend({\n    methods: [{\n      name: \"chainId\",\n      call: \"eth_chainId\",\n      outputFormatter: web3.utils.hexToNumber\n    }]\n  });\n  return web3;\n}\n\nclass App extends React.Component {\n  // @ts-ignore\n  constructor(props) {\n    super(props);\n    this.web3Modal = void 0;\n    this.state = void 0;\n\n    this.onConnect = async () => {\n      const provider = await this.web3Modal.connect();\n      await this.subscribeProvider(provider);\n      const web3 = initWeb3(provider);\n      const accounts = await web3.eth.getAccounts();\n      const address = accounts[0];\n      const networkId = await web3.eth.net.getId();\n      const chainId = await web3.eth.chainId();\n      console.log(`chainId is ${chainId}  networkId ${networkId}`);\n      await this.setState({\n        web3,\n        provider,\n        connected: true,\n        address,\n        chainId,\n        networkId\n      });\n    };\n\n    this.subscribeProvider = async provider => {\n      if (!provider.on) {\n        return;\n      }\n\n      provider.on(\"close\", () => this.resetApp());\n      provider.on(\"accountsChanged\", async accounts => {\n        await this.setState({\n          address: accounts[0]\n        });\n      });\n      provider.on(\"chainChanged\", async chainId => {\n        const {\n          web3\n        } = this.state;\n        const networkId = await web3.eth.net.getId();\n        await this.setState({\n          chainId,\n          networkId\n        });\n      });\n      provider.on(\"networkChanged\", async networkId => {\n        const {\n          web3\n        } = this.state;\n        const chainId = await web3.eth.chainId();\n        await this.setState({\n          chainId,\n          networkId\n        });\n      });\n    };\n\n    this.getNetwork = () => getChainData(this.state.chainId).network;\n\n    this.getProviderOptions = () => {\n      const providerOptions = {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId: process.env.REACT_APP_INFURA_ID\n          }\n        },\n        torus: {\n          package: Torus\n        },\n        fortmatic: {\n          package: Fortmatic,\n          options: {\n            key: process.env.REACT_APP_FORTMATIC_KEY\n          }\n        },\n        authereum: {\n          package: Authereum\n        },\n        bitski: {\n          package: Bitski,\n          options: {\n            clientId: process.env.REACT_APP_BITSKI_CLIENT_ID,\n            callbackUrl: window.location.href + \"bitski-callback.html\"\n          }\n        }\n      };\n      return providerOptions;\n    };\n\n    this.resetApp = async () => {\n      const {\n        web3\n      } = this.state;\n\n      if (web3 && web3.currentProvider && web3.currentProvider.close) {\n        await web3.currentProvider.close();\n      }\n\n      await this.web3Modal.clearCachedProvider();\n      this.setState({ ...INITIAL_STATE\n      });\n    };\n\n    this.toggleModal = () => this.setState({\n      showModal: !this.state.showModal\n    });\n\n    this.setmessage = value => {\n      this.setState({\n        message: value.target.value\n      });\n    };\n\n    this.sign = async () => {\n      const provider = await this.web3Modal.connect();\n      const prov = new ethers.providers.Web3Provider(provider); // open modal\n\n      this.toggleModal(); // toggle pending request indicator\n\n      this.setState({\n        pendingRequest: true\n      });\n      const resp = await prov.getSigner().signMessage(this.state.message);\n      const copydata = {\n        \"address\": this.state.address.toLocaleLowerCase(),\n        \"msg\": this.state.message,\n        \"sig\": resp.toLocaleLowerCase(),\n        \"version\": \"3\",\n        \"signer\": \"MEW\"\n      }; // display result\n\n      this.setState({\n        pendingRequest: false,\n        result: {\n          copy: JSON.stringify(copydata)\n        } || null\n      }); // alert(copydata)\n    };\n\n    this.render = () => {\n      const {\n        assets,\n        assets2,\n        address,\n        connected,\n        chainId,\n        fetching,\n        showModal,\n        pendingRequest,\n        result\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(SLayout, {\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          maxWidth: 1000,\n          spanHeight: true,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            connected: connected,\n            address: address,\n            chainId: chainId,\n            killSession: this.resetApp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SContent, {\n            children: fetching ? /*#__PURE__*/_jsxDEV(Column, {\n              center: true,\n              children: /*#__PURE__*/_jsxDEV(SContainer, {\n                children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this) : true ? /*#__PURE__*/_jsxDEV(SBalances, {\n              children: /*#__PURE__*/_jsxDEV(Column, {\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(STestButtonContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    children: \"Message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestInput, {\n                    value: this.state.message,\n                    onChange: this.setmessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(STestButton, {\n                    left: true,\n                    onClick: () => this.sign(),\n                    children: \"\\u7B7E\\u540D\\u4FE1\\u606F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(SLanding, {\n              center: true,\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: `Test Web3Modal`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {\n                onClick: this.onConnect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: showModal,\n          toggleModal: this.toggleModal,\n          children: pendingRequest ? /*#__PURE__*/_jsxDEV(SModalContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SModalTitle, {\n              children: \"Pending Call Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SContainer, {\n              children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SModalParagraph, {\n                children: \"Approve or reject request using your wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this) : result ? /*#__PURE__*/_jsxDEV(SModalContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SModalTitle, {\n              children: \"Call Request Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ModalResult, {\n              children: result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(SModalContainer, {\n            children: /*#__PURE__*/_jsxDEV(SModalTitle, {\n              children: \"Call Request Rejected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = { ...INITIAL_STATE\n    };\n    this.web3Modal = new Web3Modal({\n      network: this.getNetwork(),\n      cacheProvider: true,\n      providerOptions: this.getProviderOptions()\n    });\n  }\n\n  componentDidMount() {\n    if (this.web3Modal.cachedProvider) {\n      this.onConnect();\n    }\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"SLayout\");\n$RefreshReg$(_c2, \"SContent\");\n$RefreshReg$(_c3, \"SContainer\");\n$RefreshReg$(_c4, \"SLanding\");\n$RefreshReg$(_c5, \"SModalContainer\");\n$RefreshReg$(_c6, \"SModalTitle\");\n$RefreshReg$(_c7, \"SModalParagraph\");\n$RefreshReg$(_c8, \"SBalances\");\n$RefreshReg$(_c9, \"STestButtonContainer\");\n$RefreshReg$(_c10, \"STestButton\");\n$RefreshReg$(_c11, \"STestInput\");","map":{"version":3,"sources":["/Users/helen/fi/protocol-demo/frontend/src/App_sign.tsx"],"names":["React","styled","Web3","Web3Modal","WalletConnectProvider","Fortmatic","Torus","Authereum","Bitski","Button","Column","Wrapper","Modal","Header","Loader","ModalResult","ConnectButton","getChainData","fonts","ethers","parseUnits","utils","Zero","MaxUint256","constants","parseEther","SLayout","div","SContent","SContainer","SLanding","SModalContainer","SModalTitle","SModalParagraph","p","SBalances","STestButtonContainer","STestButton","size","medium","STestInput","textarea","INITIAL_STATE","fetching","address","web3","provider","connected","chainId","networkId","assets","assets2","showModal","pendingRequest","result","message","initWeb3","eth","extend","methods","name","call","outputFormatter","hexToNumber","App","Component","constructor","props","web3Modal","state","onConnect","connect","subscribeProvider","accounts","getAccounts","net","getId","console","log","setState","on","resetApp","getNetwork","network","getProviderOptions","providerOptions","walletconnect","package","options","infuraId","process","env","REACT_APP_INFURA_ID","torus","fortmatic","key","REACT_APP_FORTMATIC_KEY","authereum","bitski","clientId","REACT_APP_BITSKI_CLIENT_ID","callbackUrl","window","location","href","currentProvider","close","clearCachedProvider","toggleModal","setmessage","value","target","sign","prov","providers","Web3Provider","resp","getSigner","signMessage","copydata","toLocaleLowerCase","copy","JSON","stringify","render","cacheProvider","componentDidMount","cachedProvider"],"mappings":"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","sourcesContent":["/*\n * @Author: your name\n * @Date: 2021-05-22 00:27:06\n * @LastEditTime: 2021-05-22 01:03:13\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /frontend/src/App_sign.tsx\n */\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\n\nimport Web3Modal from \"web3modal\";\n// @ts-ignore\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n// @ts-ignore\nimport Fortmatic from \"fortmatic\";\nimport Torus from \"@toruslabs/torus-embed\";\nimport Authereum from \"authereum\";\nimport {Bitski} from \"bitski\";\n\nimport Button from \"./components/Button\";\nimport Column from \"./components/Column\";\nimport Wrapper from \"./components/Wrapper\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport ModalResult from \"./components/ModalResult\";\nimport AccountAssets from \"./components/AccountAssets\";\nimport ConnectButton from \"./components/ConnectButton\";\nimport {getChainData} from \"./helpers/utilities\";\nimport {IAssetData} from \"./helpers/types\";\nimport {fonts} from \"./styles\";\nimport {ethers, utils} from 'ethers';\n\nconst {parseUnits} = ethers.utils;\nconst {Zero, MaxUint256} = ethers.constants;\nconst {parseEther} = ethers.utils;\n\n\nconst SLayout = styled.div`\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  text-align: center;\n`;\n\nconst SContent = styled(Wrapper)`\n  width: 100%;\n  height: 100%;\n  padding: 0 16px;\n`;\n\nconst SContainer = styled.div`\n  height: 100%;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  word-break: break-word;\n`;\n\nconst SLanding = styled(Column)`\n  height: 600px;\n`;\n\nconst SModalContainer = styled.div`\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n\nconst SModalTitle = styled.div`\n  margin: 1em 0;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nconst SModalParagraph = styled.p`\n  margin-top: 30px;\n`;\n\n// @ts-ignore\nconst SBalances = styled(SLanding)`\n  height: 100%;\n  & h3 {\n    padding-top: 30px;\n  }\n`;\n\nconst STestButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst STestButton = styled(Button)`\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  height: 44px;\n  width: 100%;\n  max-width: 175px;\n  margin: 12px;\n`;\n\nconst STestInput = styled.textarea`\n    background-color: #f9f9f9;\n    border: 0;\n    border-radius: 4px;\n    height: 200px;\n    padding: 13px 15px;\n    resize: none;\n    width: 100%;\n`;\n\ninterface IAppState {\n    fetching: boolean;\n    address: string;\n    web3: any;\n    provider: any;\n    connected: boolean;\n    chainId: number;\n    networkId: number;\n    assets: IAssetData[];\n    assets2: IAssetData[];\n    showModal: boolean;\n    pendingRequest: boolean;\n    result: any | null;\n    message: string;\n}\n\nconst INITIAL_STATE: IAppState = {\n    fetching: false,\n    address: \"\",\n    web3: null,\n    provider: null,\n    connected: false,\n    chainId: 1,\n    networkId: 1,\n    assets: [],\n    assets2: [],\n    showModal: false,\n    pendingRequest: false,\n    result: null,\n    message: \"\",\n};\n\nfunction initWeb3(provider: any) {\n    const web3: any = new Web3(provider);\n\n    web3.eth.extend({\n        methods: [\n            {\n                name: \"chainId\",\n                call: \"eth_chainId\",\n                outputFormatter: web3.utils.hexToNumber\n            }\n        ]\n    });\n\n    return web3;\n}\n\nclass App extends React.Component<any, any> {\n    // @ts-ignore\n    public web3Modal: Web3Modal;\n    public state: IAppState;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            ...INITIAL_STATE\n        };\n\n        this.web3Modal = new Web3Modal({\n            network: this.getNetwork(),\n            cacheProvider: true,\n            providerOptions: this.getProviderOptions()\n        });\n    }\n\n    public componentDidMount() {\n        if (this.web3Modal.cachedProvider) {\n            this.onConnect();\n        }\n    }\n\n    public onConnect = async () => {\n        const provider = await this.web3Modal.connect();\n\n        await this.subscribeProvider(provider);\n\n        const web3: any = initWeb3(provider);\n\n        const accounts = await web3.eth.getAccounts();\n\n        const address = accounts[0];\n\n        const networkId = await web3.eth.net.getId();\n\n        const chainId = await web3.eth.chainId();\n\n        console.log(`chainId is ${chainId}  networkId ${networkId}`)\n\n        await this.setState({\n            web3,\n            provider,\n            connected: true,\n            address,\n            chainId,\n            networkId\n        });\n\n\n    };\n\n    public subscribeProvider = async (provider: any) => {\n        if (!provider.on) {\n            return;\n        }\n        provider.on(\"close\", () => this.resetApp());\n        provider.on(\"accountsChanged\", async (accounts: string[]) => {\n            await this.setState({address: accounts[0]});\n\n        });\n        provider.on(\"chainChanged\", async (chainId: number) => {\n            const {web3} = this.state;\n            const networkId = await web3.eth.net.getId();\n            await this.setState({chainId, networkId});\n\n        });\n\n        provider.on(\"networkChanged\", async (networkId: number) => {\n            const {web3} = this.state;\n            const chainId = await web3.eth.chainId();\n            await this.setState({chainId, networkId});\n\n        });\n    };\n\n    public getNetwork = () => getChainData(this.state.chainId).network;\n\n    public getProviderOptions = () => {\n        const providerOptions = {\n            walletconnect: {\n                package: WalletConnectProvider,\n                options: {\n                    infuraId: process.env.REACT_APP_INFURA_ID\n                }\n            },\n            torus: {\n                package: Torus\n            },\n            fortmatic: {\n                package: Fortmatic,\n                options: {\n                    key: process.env.REACT_APP_FORTMATIC_KEY\n                }\n            },\n            authereum: {\n                package: Authereum\n            },\n            bitski: {\n                package: Bitski,\n                options: {\n                    clientId: process.env.REACT_APP_BITSKI_CLIENT_ID,\n                    callbackUrl: window.location.href + \"bitski-callback.html\"\n                }\n            }\n        };\n        return providerOptions;\n    };\n\n    public resetApp = async () => {\n        const {web3} = this.state;\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        await this.web3Modal.clearCachedProvider();\n        this.setState({...INITIAL_STATE});\n    };\n\n    public toggleModal = () =>\n        this.setState({showModal: !this.state.showModal});\n\n    public setmessage = (value: any) => {\n        this.setState({message: value.target.value})\n    }\n\n    public sign = async () => {\n        const provider = await this.web3Modal.connect();\n        const prov = new ethers.providers.Web3Provider(provider);\n        // open modal\n        this.toggleModal();\n\n        // toggle pending request indicator\n        this.setState({pendingRequest: true});\n\n        const resp =await prov.getSigner().signMessage(this.state.message);\n        const copydata = {\n            \"address\": this.state.address.toLocaleLowerCase(),\n            \"msg\": this.state.message,\n            \"sig\": resp.toLocaleLowerCase(),\n            \"version\": \"3\",\n            \"signer\": \"MEW\"\n        }\n\n        // display result\n        this.setState({\n            pendingRequest: false,\n            result: {\n                copy: JSON.stringify(copydata)\n            } || null\n        });\n        // alert(copydata)\n    }\n\n\n    public render = () => {\n        const {\n            assets,\n            assets2,\n            address,\n            connected,\n            chainId,\n            fetching,\n            showModal,\n            pendingRequest,\n            result\n        } = this.state;\n        return (\n            <SLayout>\n                <Column maxWidth={1000} spanHeight>\n                    <Header\n                        connected={connected}\n                        address={address}\n                        chainId={chainId}\n                        killSession={this.resetApp}\n                    />\n                    <SContent>\n                        {fetching ? (\n                            <Column center>\n                                <SContainer>\n                                    <Loader/>\n                                </SContainer>\n                            </Column>\n                        ) : true ? (\n                            <SBalances>\n\n                                <Column center>\n                                    <STestButtonContainer>\n                                        <h6>Message</h6>\n                                        <STestInput value={this.state.message} onChange={this.setmessage}></STestInput>\n                                        <STestButton left onClick={() => this.sign()}>\n                                            签名信息\n                                        </STestButton>\n\n                                    </STestButtonContainer>\n                                </Column>\n\n                            </SBalances>\n                        ) : (\n                            <SLanding center>\n                                <h6>{`Test Web3Modal`}</h6>\n                                <ConnectButton onClick={this.onConnect}/>\n                            </SLanding>\n                        )}\n                    </SContent>\n                </Column>\n                <Modal show={showModal} toggleModal={this.toggleModal}>\n                    {pendingRequest ? (\n                        <SModalContainer>\n                            <SModalTitle>{\"Pending Call Request\"}</SModalTitle>\n                            <SContainer>\n                                <Loader/>\n                                <SModalParagraph>\n                                    {\"Approve or reject request using your wallet\"}\n                                </SModalParagraph>\n                            </SContainer>\n                        </SModalContainer>\n                    ) : result ? (\n                        <SModalContainer>\n                            <SModalTitle>{\"Call Request Approved\"}</SModalTitle>\n                            <ModalResult>{result}</ModalResult>\n                        </SModalContainer>\n                    ) : (\n                        <SModalContainer>\n                            <SModalTitle>{\"Call Request Rejected\"}</SModalTitle>\n                        </SModalContainer>\n                    )}\n                </Modal>\n            </SLayout>\n        );\n    };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}